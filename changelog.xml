<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>Archive: 2025 - GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Wed, 03 Sep 2025 20:50:32 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.8.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Archive: 2025 - GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>Copilot コードレビュー: パススコープのカスタム命令ファイルのサポート</title><link>https://github.blog/changelog/2025-09-03-copilot-code-review-path-scoped-custom-instruction-file-support</link><dc:creator>Allison</dc:creator><pubDate>Wed, 03 Sep 2025 20:41:26 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-09-03-copilot-code-review-path-scoped-custom-instruction-file-support</guid><description>&lt;p&gt;Copilot code review is becoming even more customizable! You can now use your existing path-scoped instruction files to provide targeted guidance for specific parts of your repository. Plus we have&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-09-03-copilot-code-review-path-scoped-custom-instruction-file-support&quot;&gt;Copilot code review: Path-scoped custom instruction file support&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; Copilot コードレビューのカスタマイズ性がさらに向上しました！既存のパススコープの指示ファイルを使用して、リポジトリの特定の部分にターゲットを絞ったガイダンスを提供できるようになりました。さらに、いくつか重要なアップデートもご紹介します。👇 &lt;/p&gt;
&lt;h3 id=&quot;path-scoped-instruction-files-now-supported-in-copilot-code-review&quot; id=&quot;path-scoped-instruction-files-now-supported-in-copilot-code-review&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#path-scoped-instruction-files-now-supported-in-copilot-code-review&quot;&gt;Copilot コードレビューでパススコープの命令ファイルがサポートされるようになりました&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Copilot コードレビューは、 &lt;code&gt;applyTo&lt;/code&gt;セクションを持つ&lt;code&gt;*.instructions.md&lt;/code&gt;ファイルを認識するようになりました。これにより、リポジトリ内の特定のファイルやディレクトリに対するコードレビューのガイダンスを容易に提供できるようになります。パススコープの指示ファイルは、他の Copilot 機能で以前からサポートされています。今後は、リポジトリ全体の&lt;code&gt;copilot-instructions.md&lt;/code&gt;に加えて、これらのファイルも Copilot コードレビューで使用できるようになるため、プルリクエストでより的確で関連性の高いフィードバックを提供できます。&lt;/p&gt;
&lt;p&gt;つまり、次のことが可能になります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;frontend&lt;/code&gt;や&lt;code&gt;security&lt;/code&gt;などの個々の領域にスコープガイダンスを個別の&lt;code&gt;*.instructions.md&lt;/code&gt;ファイルで提供します。&lt;/li&gt;
&lt;li&gt;各命令が適用さ&lt;code&gt;applyTo&lt;/code&gt;場所を正確にターゲットするには、パス グロブを含む&lt;code&gt;applyTo&lt;/code&gt;セクションを使用します。applyTo のないファイルは無視されます。&lt;/li&gt;
&lt;li&gt;コードベースの各部分に対して、簡潔で目的に基づいた指示を維持します。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;クイックスタート&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;リポジトリの&lt;code&gt;.github/instructions&lt;/code&gt;ディレクトリ内に&lt;code&gt;frontend.instructions.md&lt;/code&gt;などのファイルを作成または更新します。&lt;/li&gt;
&lt;li&gt; 1 つ以上のパス グロブ (例: &lt;code&gt;webapp/src/**&lt;/code&gt; ) を含む&lt;code&gt;applyTo:&lt;/code&gt;セクションを追加します。&lt;/li&gt;
&lt;li&gt;簡潔で自己完結的なガイダンスを追加します。&lt;/li&gt;
&lt;li&gt;一致するパスに触れるプル リクエストをコミットして開くか更新します。Copilot コード レビューでは関連する指示が使用されます。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-markdown&quot;&gt;# frontend.instructions.md
 applyTo:
 - webapp/src/**
 - ui/components/**
 ---
 Emphasize accessibility (ARIA, focus management). Prefer design tokens. Flag deprecated components under `legacy/`.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/copilot/how-tos/configure-custom-instructions/add-repository-instructions#creating-a-repository-custom-instructions-file&quot;&gt;Copilot カスタム命令&lt;/a&gt;のドキュメントを参照してください。&lt;/p&gt;
&lt;h3 id=&quot;more-customization-updates&quot; id=&quot;more-customization-updates&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#more-customization-updates&quot;&gt;さらなるカスタマイズアップデート&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;organization-level-instructions-now-supported-in-copilot-code-review&quot; id=&quot;organization-level-instructions-now-supported-in-copilot-code-review&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#organization-level-instructions-now-supported-in-copilot-code-review&quot;&gt;Copilot コードレビューで組織レベルの指示がサポートされるようになりました&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Copilot のコードレビューでは、組織レベルの指示も考慮されるようになりました。組織で既に組織レベルの指示を使用している場合は、プルリクエストのレビューフィードバックを生成する際に、それらの指示が自動的に含まれるようになります。これにより、すべてのリポジトリでコーディングスタンダードとベストプラクティスが一貫して適用されるようになります。&lt;/p&gt;
&lt;h4 id=&quot;coding-guidelines-deprecation&quot; id=&quot;coding-guidelines-deprecation&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#coding-guidelines-deprecation&quot;&gt;コーディングガイドラインの廃止&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;以前、コーディングガイドライン機能（以前はCopilot Enterpriseのプライベートプレビュー版でした）の&lt;a href=&quot;https://github.blog/changelog/2025-07-18-upcoming-deprecations-and-changes-to-copilot-code-review/#deprecating-coding-guidelines-in-favor-of-copilot-instructions-md&quot;&gt;一部廃止を&lt;/a&gt;発表いたしました。本日、この機能は完全に廃止されます。今後、カスタマイズ仕様はすべて&lt;code&gt;copilot-instructions.md&lt;/code&gt;または&lt;code&gt;*.instructions.md&lt;/code&gt;ファイルに追加してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/announcements&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-09-03-copilot-code-review-path-scoped-custom-instruction-file-support&quot;&gt;Copilot コードレビュー: パススコープのカスタム命令ファイルのサポートに関する&lt;/a&gt;記事が、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90634</post-id></item><item><title>CodeQL 2.22.4 では Go 1.25 のサポートと精度の向上が追加</title><link>https://github.blog/changelog/2025-09-02-codeql-2-22-4-adds-support-for-go-1-25-and-accuracy-improvements</link><dc:creator>Allison</dc:creator><pubDate>Wed, 03 Sep 2025 08:41:54 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-09-02-codeql-2-22-4-adds-support-for-go-1-25-and-accuracy-improvements</guid><description>&lt;p&gt;CodeQL is the static analysis engine behind GitHub code scanning, which finds and remediates security issues in your code. We&amp;#8217;ve recently released CodeQL 2.22.4, which adds support for Go 1.25,&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-09-02-codeql-2-22-4-adds-support-for-go-1-25-and-accuracy-improvements&quot;&gt;CodeQL 2.22.4 adds support for Go 1.25 and accuracy improvements&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; CodeQLは、 &lt;a href=&quot;https://docs.github.com/code-security/code-scanning/introduction-to-code-scanning/about-code-scanning-with-codeql&quot;&gt;GitHubコードスキャンを&lt;/a&gt;支える静的解析エンジンで、コード内のセキュリティ問題を検出し、修正します。先日、CodeQL 2.22.4をリリースしました。このバージョンでは、Go 1.25のサポート、Rust用の新しいセキュリティクエリ、解析精度の向上、フレームワークサポートの強化が追加されています。&lt;/p&gt;
&lt;h3 id=&quot;language-framework-support&quot; id=&quot;language-framework-support&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#language-framework-support&quot;&gt;言語とフレームワークのサポート&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Go&lt;/strong&gt; : CodeQL は Go バージョン 1.25 をサポートするようになりました。
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;Rust&lt;/strong&gt; : &lt;code&gt;postgres&lt;/code&gt; 、 &lt;code&gt;rusqlite&lt;/code&gt; 、 &lt;code&gt;sqlx&lt;/code&gt; 、および&lt;code&gt;tokio-postgres&lt;/code&gt;ライブラリのモデルが強化され、特に SQL インジェクションとクリアテキスト ストレージの検出においてクエリ結果が改善される可能性があります。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;Java/Kotlin&lt;/strong&gt; : リモート フロー ソースとして&lt;code&gt;jakarta.servlet.ServletRequest&lt;/code&gt;および&lt;code&gt;jakarta.servlet.http.HttpServletRequest&lt;/code&gt;メソッド呼び出しのライブラリ モデルを追加しました。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;query-changes&quot; id=&quot;query-changes&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#query-changes&quot;&gt;クエリの変更&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;Rust&lt;/strong&gt; : 機密情報が暗号化されずにデータベースに保存されているケースを検出するための&lt;code&gt;rust/cleartext-storage-database&lt;/code&gt;を追加しました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;C/C++&lt;/strong&gt; : 宛先バッファ タイプがクラス/構造体タイプへの参照である場合の&lt;code&gt;cpp/overflow-buffer&lt;/code&gt;の誤検知を修正しました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;JavaScript/TypeScript&lt;/strong&gt; : &lt;code&gt;js/regex-injection&lt;/code&gt;クエリは、デフォルトでは環境変数をソースとして考慮しなくなりました。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;変更点の全リストについては、&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.22.4/&quot;&gt;バージョン 2.22.4 の完全な変更ログ&lt;/a&gt;をご覧ください。CodeQL の新しいバージョンはすべて、github.com の GitHub コードスキャンユーザーに自動的にデプロイされます。CodeQL 2.22.4 の新機能は、GitHub Enterprise Server (GHES) バージョン 3.19 にも含まれます。古いバージョンの GHES をご利用の場合は、 &lt;a href=&quot;https://docs.github.com/enterprise-server@3.17/admin/managing-code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;CodeQL のバージョンを手動でアップグレード&lt;/a&gt;できます。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-09-02-codeql-2-22-4-adds-support-for-go-1-25-and-accuracy-improvements&quot;&gt;CodeQL 2.22.4 で Go 1.25 のサポートが追加され、精度が向上したという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90630</post-id></item><item><title>ライセンス数に応じてライセンスベースの予算を更新する</title><link>https://github.blog/changelog/2025-09-02-updating-license-based-budgets-to-accept-license-counts</link><dc:creator>Allison</dc:creator><pubDate>Tue, 02 Sep 2025 15:07:35 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-28-updating-license-based-budgets-to-accept-license-counts</guid><description>&lt;p&gt;We&amp;#8217;ve updated how license-based budgets work to make managing your enterprise and organization licenses simpler. Now, all new and existing license-based budgets use license counts instead of dollar amounts. For&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-09-02-updating-license-based-budgets-to-accept-license-counts&quot;&gt;Updating license-based budgets to accept license counts&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;企業および組織のライセンス管理をよりシンプルにするため、ライセンスベースの予算の仕組みを更新しました。新規および既存のライセンスベースの予算では、金額ではなくライセンス数を使用するようになりました。既存のライセンスベースの予算については、現在の予算が自動的にライセンス数に変換されます。&lt;strong&gt;追加の操作は必要ありません&lt;/strong&gt;。予算の範囲と設定したアラート通知は変更されません。&lt;/p&gt;
&lt;p&gt;このアップデートにより、管理者が既に行っている方法でライセンスと請求の管理が簡素化されるため、重要な業務に集中できるようになります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/billing/tutorials/set-up-budgets&quot;&gt;予算の作成と管理の方法&lt;/a&gt;の詳細については、ドキュメントをご覧ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-09-02-updating-license-based-budgets-to-accept-license-counts&quot;&gt;ライセンス数を受け入れるためにライセンスベースの予算を更新するという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90566</post-id></item><item><title>セキュリティキャンペーンの通知の改善</title><link>https://github.blog/changelog/2025-09-01-improved-notifications-in-security-campaigns</link><dc:creator>Allison</dc:creator><pubDate>Tue, 02 Sep 2025 09:29:30 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-09-01-improved-notifications-in-security-campaigns</guid><description>&lt;p&gt;Starting today, developers with write access to repositories in security campaigns will receive email notifications without needing to subscribe to repository activity. Previously, users needed to subscribe to All activity&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-09-01-improved-notifications-in-security-campaigns&quot;&gt;Improved notifications in security campaigns&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;本日より、セキュリティキャンペーンのリポジトリへの&lt;code&gt;write&lt;/code&gt;権限を持つ開発者は、リポジトリアクティビティを購読しなくてもメール通知を受け取ることができます。以前は、キャンペーンの作成時や期限到来時に通知を受け取るには&lt;strong&gt;、「すべてのアクティビティ」&lt;/strong&gt;または&lt;strong&gt;「セキュリティアラート」&lt;/strong&gt;を購読する必要がありました。&lt;/p&gt;
&lt;p&gt;この変更により、セキュリティアラートの修正に最適な立場にある開発者は、セキュリティチームの優先順位を自動的に把握できるようになり、コラボレーションとコミュニケーションがよりシームレスになります。セキュリティキャンペーンでは、キャンペーン作成時に自動的に修正案を提案するGitHub Copilot Autofixにより、チームが優先順位を決定し、アプリケーションセキュリティ負債のバックログを迅速に削減するのに役立ちます。&lt;/p&gt;
&lt;p&gt;セキュリティキャンペーンは、GitHub Enterprise Cloud 上の GitHub Code Security ユーザーにご利用いただけます。詳細については、GitHub ドキュメントの&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/code-security/securing-your-organization/fixing-security-alerts-at-scale/about-security-campaigns&quot;&gt;「セキュリティキャンペーンについて」を&lt;/a&gt;ご覧ください。&lt;/p&gt;
&lt;p&gt;セキュリティキャンペーンに関するフィードバックをお持ちですか? &lt;a href=&quot;https://gh.io/security-campaigns-feedback&quot;&gt;GitHub コミュニティ&lt;/a&gt;でのディスカッションにご参加ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2025-09-01-improved-notifications-in-security-campaigns&quot;&gt;セキュリティ キャンペーンの通知の改善に関する&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90588</post-id></item><item><title>GraphQL API リソース制限</title><link>https://github.blog/changelog/2025-09-01-graphql-api-resource-limits</link><dc:creator>Allison</dc:creator><pubDate>Mon, 01 Sep 2025 16:00:30 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-28-graphql-api-resource-limits</guid><description>&lt;p&gt;At GitHub, we&amp;#8217;re committed to keeping the GraphQL API dependable for everyone. To reinforce the protection of our infrastructure, we&amp;#8217;re introducing new safeguards to limit resource consumption. What kind of&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-09-01-graphql-api-resource-limits&quot;&gt;GraphQL API resource limits&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; GitHubは、GraphQL APIをすべての人にとって信頼できるものにすることに尽力しています。インフラストラクチャの保護を強化するため、リソース消費を制限する新たな安全対策を導入します。&lt;/p&gt;
&lt;h2 id=&quot;what-kind-of-limits&quot; id=&quot;what-kind-of-limits&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#what-kind-of-limits&quot;&gt;どのような制限ですか?&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;プラットフォームの整合性を保つため、すべての詳細を公開することはできませんが、これらの制限はレートリミッターとは異なることにご注意ください。レートリミッターは、送信されたリクエストの数や速度を追跡するものではありません。代わりに、単一のクエリが消費できる実行リソースの上限を設定します。以下のようなパターンでは、クエリがこれらのリソース制限に達し、エラーを含む部分的な結果が返される可能性があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;単一のクエリで非常に多数のオブジェクトまたは深くネストされた関係を要求する&lt;/li&gt;
&lt;li&gt;複数の接続で同時に大きな&lt;code&gt;first&lt;/code&gt;引数または&lt;code&gt;last&lt;/code&gt;引数を使用する&lt;/li&gt;
&lt;li&gt;各リポジトリのすべてのコメント、反応、関連する問題など、各オブジェクトの詳細な情報を取得します。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-this-affects-your-integration&quot; id=&quot;how-this-affects-your-integration&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#how-this-affects-your-integration&quot;&gt;これが統合にどう影響するか&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;通常の使用状況では、特に変化は見られません。ただし、統合によって高負荷なクエリが発行される場合は、リソース制限を超えたことを示すエラーを伴う部分的なレスポンスが増える可能性があります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/graphql/overview/rate-limits-and-query-limits-for-the-graphql-api&quot;&gt;GraphQL API のレートとクエリの制限&lt;/a&gt;の詳細については、GitHub をご覧ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-09-01-graphql-api-resource-limits&quot;&gt;GraphQL API のリソース制限&lt;/a&gt;に関する記事が最初に&lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90534</post-id></item><item><title>Copilot の次の編集提案 (NES) が JetBrains でパブリック プレビュー中</title><link>https://github.blog/changelog/2025-08-29-copilots-next-edit-suggestion-nes-in-public-preview-in-jetbrains</link><dc:creator>Allison</dc:creator><pubDate>Fri, 29 Aug 2025 17:32:16 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-29-copilots-next-edit-suggestion-nes-in-public-preview-in-jetbrains</guid><description>&lt;p&gt;Next edit suggestions (NES) is now available in public preview for JetBrains IDEs. With NES, Copilot extends its capabilities to editing your existing code, proactively suggesting improvements and refinements as&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-29-copilots-next-edit-suggestion-nes-in-public-preview-in-jetbrains&quot;&gt;Copilot’s next edit suggestion (NES) in public preview in JetBrains&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;JetBrainsのNESのポスター画像&quot; src=&quot;https://github.com/user-attachments/assets/82932805-0b22-4897-8e91-a4c7ef3cdca1&quot;&gt;&lt;/p&gt;
&lt;p&gt; JetBrains IDE の Next Edit Suggestions (NES) がパブリックプレビューとして利用可能になりました。NES により、Copilot の機能が既存のコード編集にまで拡張され、作業中に改善点や改良点をプロアクティブに提案します。これにより、コーディング作業の効率が向上し、よりクリーンで一貫性のあるコードベースを維持できるようになります。&lt;/p&gt;
&lt;h2 id=&quot;%e2%9c%a8-whats-new&quot; id=&quot;%e2%9c%a8-whats-new&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#%e2%9c%a8-whats-new&quot;&gt;✨ 新着情報&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;NESは、作業中に既存のコードを改善、更新、または修正する余地を自動的に検出します。インライン編集インジケーターが自動的に表示され、利用可能な候補が表示されます。候補テキストにマウスオーバーするだけで、詳細の確認や変更のプレビューが可能になり、直接適用できます。&lt;/p&gt;
&lt;p&gt;単一のシンボルから複数行まで、ニーズに合わせて提案が表示されます。タイプミスの検出、ロジックの調整、コードのリファクタリング、変数名の変更の反映など、NES は編集内容を理解し、手動でファイルを検索することなく、インテリジェントなフォローアップの改善を提案します。&lt;/p&gt;
&lt;h2 id=&quot;%f0%9f%9b%a0-try-it-out&quot; id=&quot;%f0%9f%9b%a0-try-it-out&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#%f0%9f%9b%a0-try-it-out&quot;&gt;🛠 試してみる&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;JetBrains IDE で NES の使用を開始するには、次の手順に従います。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;JetBrains IDE で NES を有効にします&lt;/strong&gt;。 &lt;strong&gt;[設定]&lt;/strong&gt; → &lt;strong&gt;[GitHub Copilot]&lt;/strong&gt; → &lt;strong&gt;[補完]&lt;/strong&gt;に移動して、 &lt;strong&gt;[次の編集の提案を有効にする (NES)] をオンにします&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;コーディングを始めましょう&lt;/strong&gt;: 特別なコマンドは必要ありません。NES の提案が自動的に表示されます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提案を確認して承認する&lt;/strong&gt;：カーソルまたはキーボードショートカットを使用して提案に移動します。Tabキー（デフォルト）で承認するか、ガターメニューから適用します。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;%f0%9f%92%ac-share-your-feedback&quot; id=&quot;%f0%9f%92%ac-share-your-feedback&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#%f0%9f%92%ac-share-your-feedback&quot;&gt;💬 フィードバックをお寄せください&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;皆様からのフィードバックは改善の原動力となります。製品内のフィードバックオプションをご利用いただくか、 &lt;a href=&quot;https://github.com/microsoft/copilot-intellij-feedback/issues&quot;&gt;GitHub Copilot for JetBrains feedback&lt;/a&gt;でご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;免責事項: パブリック プレビューの機能の UI は変更される可能性があります。&lt;/em&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-29-copilots-next-edit-suggestion-nes-in-public-preview-in-jetbrains&quot;&gt;Copilot の次の編集提案 (NES) が JetBrains でパブリック プレビュー中であるという&lt;/a&gt;記事が、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90575</post-id></item><item><title>WebP画像のサポートを追加しました</title><link>https://github.blog/changelog/2025-08-28-added-support-for-webp-images</link><dc:creator>Allison</dc:creator><pubDate>Thu, 28 Aug 2025 20:29:09 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-28-added-support-for-webp-images</guid><description>&lt;p&gt;WebP image support is now available across github.com and GitHub Enterprise Cloud with data residency. Previously, uploading WebP images resulted in broken previews or forced users to download files to&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-28-added-support-for-webp-images&quot;&gt;Added support for WebP images&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; WebP画像のサポートが、github.comとGitHub Enterprise Cloud（データレジデンシー対応）で利用可能になりました。以前は、WebP画像をアップロードするとプレビューが壊れたり、ファイルをダウンロードしなければ閲覧できなかったりしていました。これは、高速な読み込みと優れた圧縮率のためにWebPのような高効率フォーマットに依存しているユーザーにとって、大きな負担となっていました。WebPをサポートすることで、ユーザーは妥協することなくアセットを共有、共同作業、そして紹介できるようになります。&lt;/p&gt;
&lt;h3 id=&quot;whats-changed&quot; id=&quot;whats-changed&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-changed&quot;&gt;何が変わったのでしょうか?&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;webp-support-in-comment-boxes&quot; id=&quot;webp-support-in-comment-boxes&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#webp-support-in-comment-boxes&quot;&gt;コメントボックスでのWebPサポート&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;以下のコメント ボックスで&lt;code&gt;.webp&lt;/code&gt;ファイルを直接アップロードできるようになりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;問題&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;議論&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;プルリクエスト&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要点&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上記で指定した場所にアップロードされた画像は、PNG や JPEG と同様にインラインで表示されるようになります。 &lt;/p&gt;
&lt;h4 id=&quot;webp-rendering-for-repository-blobs-gists&quot; id=&quot;webp-rendering-for-repository-blobs-gists&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#webp-rendering-for-repository-blobs-gists&quot;&gt;リポジトリ BLOB と GIST の WebP レンダリング&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;WebP画像ファイルを&lt;strong&gt;リポジトリ&lt;/strong&gt;または&lt;strong&gt;gist&lt;/strong&gt;に直接アップロードすると、画像は表示時に完全にインラインでレンダリングされます。他の形式と同様に画像が表示され、「Raw画像を表示」というフィードバックは表示されません。&lt;/p&gt;
&lt;h2 id=&quot;how-to-give-feedback&quot; id=&quot;how-to-give-feedback&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#how-to-give-feedback&quot;&gt;フィードバックの伝え方&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;皆様からのご意見をお待ちしております。問題やエッジケースが発生した場合、または WebP サポートを改善するためのご提案がある場合は、&lt;a href=&quot;https://github.com/orgs/community/discussions/171343&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;にコメントを残してください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;この記事&lt;a href=&quot;https://github.blog/changelog/2025-08-28-added-support-for-webp-images&quot;&gt;「WebP 画像のサポートを追加」は、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90557</post-id></item><item><title>Copilot コーディングエージェントが AGENTS.md のカスタム指示をサポートするようになりました</title><link>https://github.blog/changelog/2025-08-28-copilot-coding-agent-now-supports-agents-md-custom-instructions</link><dc:creator>Allison</dc:creator><pubDate>Thu, 28 Aug 2025 18:00:58 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-27-copilot-coding-agent-now-supports-agents-md-custom-instructions</guid><description>&lt;p&gt;With custom instructions, you can guide Copilot on how to understand your project as well as how to build, test, and validate its changes. Copilot coding agent, our autonomous background&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-28-copilot-coding-agent-now-supports-agents-md-custom-instructions&quot;&gt;Copilot coding agent now supports AGENTS.md custom instructions&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;カスタム指示を使用すると、プロジェクトを理解する方法や、変更を構築、テスト、検証する方法を Copilot に指示できます。&lt;/p&gt;
&lt;p&gt;自律バックグラウンド エージェントである&lt;a href=&quot;https://github.blog/news-insights/product-news/github-copilot-meet-the-new-coding-agent/&quot;&gt;Copilot コーディング エージェントが&lt;/a&gt;、 &lt;code&gt;AGENTS.md&lt;/code&gt;カスタム インストラクションをサポートするようになりました。&lt;/p&gt;
&lt;p&gt;リポジトリのルートに単一の&lt;code&gt;AGENTS.md&lt;/code&gt;ファイルを作成できます。また、プロジェクトの特定の部分に適用するネストされた&lt;code&gt;AGENTS.md&lt;/code&gt;ファイルを作成することもできます。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;AGENTS.md&lt;/code&gt;に加えて、エージェントは GitHub の&lt;code&gt;.github/copilot-instructions.md&lt;/code&gt;および&lt;code&gt;.github/instructions/**.instructions.md&lt;/code&gt;形式、さらに&lt;code&gt;CLAUDE.md&lt;/code&gt;および&lt;code&gt;GEMINI.md&lt;/code&gt;ファイルも引き続きサポートします。&lt;/p&gt;
&lt;p&gt; Copilot コーディング エージェントのカスタム手順やその他のベスト プラクティスの詳細については、 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/copilot/tutorials/coding-agent/get-the-best-results&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-28-copilot-coding-agent-now-supports-agents-md-custom-instructions&quot;&gt;Copilot コーディング エージェントが AGENTS.md のカスタム指示をサポートするようになりました&lt;/a&gt;という記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90533</post-id></item><item><title>Raycast から Copilot コーディング エージェント タスクを開始して追跡します</title><link>https://github.blog/changelog/2025-08-28-start-and-track-copilot-coding-agent-tasks-from-raycast</link><dc:creator>Allison</dc:creator><pubDate>Thu, 28 Aug 2025 17:55:41 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-27-start-and-track-copilot-coding-agent-tasks-from-raycast</guid><description>&lt;p&gt;Raycast is a powerful free launcher for macOS. It can launch apps, search files, control your system, and leverage community-built extensions. Now, it can also interact with AI agents. With&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-28-start-and-track-copilot-coding-agent-tasks-from-raycast&quot;&gt;Start and track Copilot coding agent tasks from Raycast&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; &lt;a href=&quot;https://raycast.com&quot;&gt;Raycast&lt;/a&gt;はmacOS用の強力な無料ランチャーです。アプリの起動、ファイルの検索、システムの操作、コミュニティが作成した拡張機能の活用が可能です。さらに、AIエージェントとの連携も可能になりました。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://www.raycast.com/github/github-copilot&quot;&gt;Raycast 用の新しい GitHub Copilot 拡張機能&lt;/a&gt;を使用すると、タスクを Copilot コーディング エージェントに渡し、Mac のどこからでも進捗状況を追跡できます。&lt;/p&gt;
&lt;p&gt;新しいタスクを開始するには、 &lt;kbd&gt;Command&lt;/kbd&gt; + &lt;kbd&gt;Space&lt;/kbd&gt;でRaycastを開き、 &lt;strong&gt;「タスク作成」&lt;/strong&gt;コマンドを探して選択します。そこからリポジトリを選択し、プロンプトを入力して、 &lt;kbd&gt;Command&lt;/kbd&gt; + &lt;kbd&gt;Return&lt;/kbd&gt;を押します。Copilot がドラフトのプルリクエストを作成し、バックグラウンドで作業します。準備ができたら、レビューのためにタグ付けされます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;GitHub Copilot Raycast拡張機能のタスク作成コマンド&quot; src=&quot;https://github.com/user-attachments/assets/82f59f38-3be6-4f95-a4f7-545fe5931365&quot;&gt;&lt;/p&gt;
&lt;p&gt; Raycastから実行中のCopilotタスクを追跡することもできます。タスクはRaycast、 &lt;a href=&quot;https://github.blog/news-insights/product-news/agents-panel-launch-copilot-coding-agent-tasks-anywhere-on-github/&quot;&gt;GitHubの各ページにあるエージェントパネル&lt;/a&gt;、またはIssueから開始できます。タスクを監視するには、Raycastを開いて&lt;strong&gt;「タスクの表示」&lt;/strong&gt;コマンドを選択してください。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;GitHub Copilot Raycast拡張機能のタスク表示コマンド&quot; src=&quot;https://github.com/user-attachments/assets/d8e2858a-e5bd-428c-a4fe-bf2543dbcaed&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;learn-more-about-copilot-coding-agent&quot; id=&quot;learn-more-about-copilot-coding-agent&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#learn-more-about-copilot-coding-agent&quot;&gt;Copilotコーディングエージェントの詳細&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Copilot コーディング エージェントと Raycast 拡張機能は、Copilot Pro または Copilot Pro+ を持つすべてのユーザー、および管理者が&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/copilot/how-tos/agents/copilot-coding-agent/enabling-copilot-coding-agent&quot;&gt;関連ポリシーを有効にしている&lt;/a&gt;Copilot Business および Copilot Enterprise ユーザー向けにパブリック プレビューで利用できます。&lt;/p&gt;
&lt;p&gt; Copilot コーディング エージェントの詳細については、&lt;a href=&quot;https://gh.io/coding-agent-docs&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;免責事項: パブリック プレビューの機能の UI は変更される可能性があります。&lt;/em&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-28-start-and-track-copilot-coding-agent-tasks-from-raycast&quot;&gt;Raycast から Copilot コーディング エージェント タスクを開始して追跡する方法に関する&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90532</post-id></item><item><title>ホームダッシュボードの改善がパブリックプレビューで利用可能になりました</title><link>https://github.blog/changelog/2025-08-28-improvements-to-the-home-dashboard-available-in-public-preview</link><dc:creator>Allison</dc:creator><pubDate>Thu, 28 Aug 2025 17:50:18 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-27-improvements-to-the-home-dashboard-available-in-public-preview</guid><description>&lt;p&gt;Overview We&amp;#8217;re testing improvements to the content and layout of the home dashboard, designed to enable users to understand the current status of their most important work and navigate to&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-28-improvements-to-the-home-dashboard-available-in-public-preview&quot;&gt;Improvements to the home dashboard available in public preview&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;h3 id=&quot;overview&quot; id=&quot;overview&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#overview&quot;&gt;概要&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ホームダッシュボードのコンテンツとレイアウトの改善をテスト中です。この改善は、ユーザーが最も重要な作業の現在のステータスを単一のビューから把握し、素早くアクセスできるようにすることを目的としています。ホームダッシュボードのデフォルトビューには、プルリクエストと課題の簡潔でカスタマイズ可能なリストが表示されるようになりました。フィードビューは引き続きご利用いただけます。このプレビューは、まず一部のユーザー向けに有効化され、その後、順次展開していきます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;ダッシュボードの新しい「マイワーク」タブと「フィード」タブのスクリーンショット。「マイワーク」の下にリストされた新しいプルリクエストと問題に焦点を当てています。&quot; src=&quot;https://github.com/user-attachments/assets/bba01586-1c97-4595-b563-42e3ad6aa085&quot; style=&quot;text-align:center&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;whats-changed&quot; id=&quot;whats-changed&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-changed&quot;&gt;何が変わったのか&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;新しい&lt;strong&gt;「マイワーク」タブ&lt;/strong&gt;と&lt;strong&gt;「フィード」&lt;/strong&gt;タブを作成しました。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;「マイワーク」&lt;/strong&gt;タブには、リストをカスタマイズするためのフィルタリング オプションとともに、ユーザーに最近更新されたプル リクエストと問題が表示されます。&lt;/li&gt;
&lt;li&gt;ユーザーが作成したプル リクエストについては、実行可能な次のステップが表示されます。&lt;/li&gt;
&lt;li&gt;フィード自体は変更ありませんが、 &lt;strong&gt;「フィード」&lt;/strong&gt;タブの後ろに移動しました。フィードをご希望の場合は、タブの選択はそのまま維持されます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;免責事項: パブリック プレビューの機能の UI は変更される可能性があります。&lt;/em&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;この記事は&lt;a href=&quot;https://github.blog/changelog/2025-08-28-improvements-to-the-home-dashboard-available-in-public-preview&quot;&gt;、パブリック プレビューで利用できるホーム ダッシュボードの改善に関するもので、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90514</post-id></item></channel></rss>