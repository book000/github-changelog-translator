<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>Archive: 2025 - GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Tue, 17 Jun 2025 19:17:06 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.8.1</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Archive: 2025 - GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>エージェント モードと MCP が Visual Studio で一般利用可能になりました</title><link>https://github.blog/changelog/2025-06-17-visual-studio-17-14-june-release</link><dc:creator>Allison</dc:creator><pubDate>Tue, 17 Jun 2025 17:00:35 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-05-visual-studio-17-14-june-release</guid><description>&lt;p&gt;Copilot agent mode&amp;#160;is on by default in Visual Studio. Agent mode helps you accomplish end-to-end development tasks by planning, taking action, and iterating until your goal is complete. Unlike traditional&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-17-visual-studio-17-14-june-release&quot;&gt;Agent mode and MCP now generally available in Visual Studio&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p class=&quot;ai-optimize-6 ai-optimize-introduction&quot;&gt; Visual Studioでは、Copilot&lt;a href=&quot;https://learn.microsoft.com/visualstudio/ide/copilot-agent-mode?view=vs-2022&quot;&gt;エージェントモード&lt;/a&gt;がデフォルトでオンになっています。エージェントモードは、計画、実行、そして目標達成までの反復処理を通じて、エンドツーエンドの開発タスクの達成を支援します。従来のチャットプロンプトとは異なり、エージェントモードは複数のステップにわたる推論、ファイル間のコード編集、バグ修正、さらにはエラーへの対応まで、目標達成まで一貫して実行できます。しかも、これらすべてを単一のプロンプトから実行できます。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-7&quot;&gt;開始するには、Visual Studio で Copilot Chat パネルを開き、 &lt;strong&gt;[質問]&lt;/strong&gt;ボタンをクリックして、&lt;strong&gt;エージェント&lt;/strong&gt;に切り替えます。 &lt;/p&gt;
&lt;h2 class=&quot;ai-optimize-8&quot; id=&quot;connect-visual-studio-to-your-stack-with-mcp-server-support&quot; class=&quot;ai-optimize-8&quot; id=&quot;connect-visual-studio-to-your-stack-with-mcp-server-support&quot; &gt; MCP サーバー サポートを使用して Visual Studio をスタックに接続します&lt;a href=&quot;#connect-visual-studio-to-your-stack-with-mcp-server-support&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Connect Visual Studio to your stack with MCP server support&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p class=&quot;ai-optimize-8&quot;&gt; Visual Studio は&lt;a href=&quot;https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022&quot;&gt;モデルコンテキストプロトコル (MCP)&lt;/a&gt;サーバーをサポートするようになりました。これにより、よりスマートで連携性の高い AI 開発が可能になります。MCP は、Copilot が開発環境のコンテキストとデータ（ログ、テスト結果、プルリクエスト、問題など）にアクセスできるようにするオープンプロトコルです。Copilot はこれらのデータを使用して、コード、IDE、そしてスタック全体において意味のあるアクションを実行できます。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-9&quot;&gt;まず、ソリューションに&lt;em&gt;mcp.json&lt;/em&gt;ファイルを追加します。Visual Studio は&lt;em&gt;、 .vscode/mcp.json&lt;/em&gt;などの環境からの構成を含め、このファイルを自動的に検出します。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-10&quot;&gt; Copilot チャットツールのドロップダウンから、接続済みの MCP サーバーを確認できます。MCP 統合を使用するには、エージェントモードになっている必要があります。 &lt;/p&gt;
&lt;h2 class=&quot;ai-optimize-11&quot; id=&quot;new-models-available-in-visual-studio-gemini-2-5-pro-and-gpt-4-1&quot; class=&quot;ai-optimize-11&quot; id=&quot;new-models-available-in-visual-studio-gemini-2-5-pro-and-gpt-4-1&quot; &gt; Visual Studio で利用可能な新しいモデル: Gemini 2.5 Pro と GPT-4.1 &lt;a href=&quot;#new-models-available-in-visual-studio-gemini-2-5-pro-and-gpt-4-1&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;New models available in Visual Studio: Gemini 2.5 Pro and GPT-4.1&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p class=&quot;ai-optimize-11&quot;&gt; Visual Studio は Gemini 2.5 Pro と GPT-4.1 をサポートするようになり、GitHub Copilot を使用する際の柔軟性とパワーが向上します。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-12&quot;&gt; GPT-4.1 は Visual Studio のデフォルト モデルとなり、全体的に高速でスムーズな応答を実現します。 &lt;/p&gt;
&lt;h2 class=&quot;ai-optimize-13&quot; id=&quot;track-your-github-copilot-usage-directly-in-visual-studio&quot; class=&quot;ai-optimize-13&quot; id=&quot;track-your-github-copilot-usage-directly-in-visual-studio&quot; &gt; Visual Studio で GitHub Copilot の使用状況を直接追跡する&lt;a href=&quot;#track-your-github-copilot-usage-directly-in-visual-studio&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Track your GitHub Copilot usage directly in Visual Studio&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p class=&quot;ai-optimize-13&quot;&gt; Visual Studio の新しい「消費量」パネルで、Copilot の月間使用量を追跡できるようになりました。無料プランでも有料プランでも、これまでに使用したチャットリクエスト数とコード補完数を IDE 内で直接確認できます。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-14&quot;&gt; Visual Studio の右上隅にある Copilot バッジをクリックし、 &lt;strong&gt;Copilot Consumption&lt;/strong&gt;を選択して使用状況ダッシュボードにアクセスします。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-15&quot;&gt;プレミアム モデルを使用している場合は、透明性を高めるために、モデル ピッカーに使用量の乗数も表示されます。 &lt;/p&gt;
&lt;h2 class=&quot;ai-optimize-16&quot; id=&quot;copilot-can-now-use-your-output-window-as-context&quot; class=&quot;ai-optimize-16&quot; id=&quot;copilot-can-now-use-your-output-window-as-context&quot; &gt; Copilotは出力ウィンドウをコンテキストとして使用できるようになりました&lt;a href=&quot;#copilot-can-now-use-your-output-window-as-context&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Copilot can now use your Output Window as context&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p class=&quot;ai-optimize-16&quot;&gt; 「出力ウィンドウ」はデバッグ、ビルドの追跡、プロジェクトで何が起こっているかの把握に非常に重要であり、Copilot でもその情報を利用できるようになりました。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-17&quot;&gt;このアップデートにより、チャットで `#output` を使用して「出力ウィンドウ」を参照したり、チャット入力の&lt;strong&gt;プラスアイコン&lt;/strong&gt;をクリックして出力コンテキストを追加したり、「出力ウィンドウ」で右クリックして&lt;strong&gt;「Explain with Copilot」を&lt;/strong&gt;選択したりできるようになりました。 &lt;/p&gt;
&lt;h2 class=&quot;ai-optimize-18&quot; id=&quot;improvements-to-the-code-completion-experience&quot; class=&quot;ai-optimize-18&quot; id=&quot;improvements-to-the-code-completion-experience&quot; &gt;コード補完エクスペリエンスの改善&lt;a href=&quot;#improvements-to-the-code-completion-experience&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Improvements to the code completion experience&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;&lt;a href=&quot;https://learn.microsoft.com/visualstudio/ide/copilot-next-edit-suggestions?view=vs-2022&quot;&gt;次の編集候補 (NES)&lt;/a&gt;が Visual Studio に導入されました&lt;/strong&gt;。NES は最近のコード編集を分析し、次に行う可能性のある操作を予測し、ファイル内の任意の場所の変更を提案して、ジャンプと承認のアクションにより次の編集場所へ誘導します。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;AI を使って C++ と C# の&lt;a href=&quot;https://learn.microsoft.com/visualstudio/ide/visual-studio-github-copilot-extension?view=vs-2022#doc-comments-generation&quot;&gt;ドキュメントコメントを生成します&lt;/a&gt;&lt;/strong&gt;。プロジェクトで使用されている形式（`///` など）でコメントを入力し始めるだけで、Copilot が関数のシグネチャとコンテンツに基づいて残りのコメントを補完します。&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;ai-optimize-20&quot;&gt;その他の新機能を確認するには、 &lt;a href=&quot;https://review.learn.microsoft.com/visualstudio/releases/2022/release-notes?branch=main&quot;&gt;Visual Studio リリース ノートを&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-21&quot;&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/announcements&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2025-06-17-visual-studio-17-14-june-release&quot;&gt;エージェント モードと MCP が Visual Studio で一般利用可能になりましたという&lt;/a&gt;記事が、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88625</post-id></item><item><title>依存関係グラフはデフォルトでオフになりました</title><link>https://github.blog/changelog/2025-06-17-dependency-graph-now-defaults-to-off</link><dc:creator>Allison</dc:creator><pubDate>Tue, 17 Jun 2025 15:00:26 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-11-dependency-graph-now-defaults-to-off</guid><description>&lt;p&gt;Following last month&amp;#8217;s change that added the ability to turn off dependency graph, the setting for newly-created public repositories will now default to off. In addition, we&amp;#8217;ve begun disabling it&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-17-dependency-graph-now-defaults-to-off&quot;&gt;Dependency graph now defaults to off&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-05-15-users-can-now-disable-dependency-graph-for-public-repositories/&quot;&gt;依存関係グラフをオフにする&lt;/a&gt;機能が追加された先月の変更に続き、新しく作成されたパブリックリポジトリの設定はデフォルトで&lt;em&gt;オフ&lt;/em&gt;になります。&lt;/p&gt;
&lt;p&gt;さらに、これを無効化し、非アクティブなリポジトリに保存されているデータを削除するようになりました。ここで「非アクティブ」とは、次のリポジトリと定義されます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; 3年以上コミットがない、&lt;/li&gt;
&lt;li&gt; Dependabotが有効になっていない、&lt;strong&gt;そして&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;公開されたパッケージによって参照されていません。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; Dependabot を有効にするかコミットをプッシュすると、リポジトリの依存関係グラフがアクティブな状態に維持されます。これらの変更により、GitHub のパフォーマンスが向上し、アクティブなプロジェクトにおける依存関係グラフの関連性が維持されます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/159176&quot;&gt;コミュニティのディスカッション&lt;/a&gt;に参加して、フィードバックを共有したり質問したりしてください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2025-06-17-dependency-graph-now-defaults-to-off&quot;&gt;依存関係グラフがデフォルトでオフになったという&lt;/a&gt;投稿が最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88662</post-id></item><item><title>CodeQL プル リクエスト アラートの平均修復時間メトリックがセキュリティ概要ダッシュボードに追加されました</title><link>https://github.blog/changelog/2025-06-16-mean-time-to-remediate-metric-for-codeql-pull-request-alerts-now-included-on-the-security-overview-dashboard</link><dc:creator>Allison</dc:creator><pubDate>Tue, 17 Jun 2025 08:05:21 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-16-mean-time-to-remediate-metric-for-codeql-pull-request-alerts-now-included-on-the-security-overview-dashboard</guid><description>&lt;p&gt;We&amp;#8217;ve added a &amp;#8220;time to remediate&amp;#8221; metric for GitHub CodeQL pull request alerts on the security overview dashboard. Now, you&amp;#8217;ll see how quickly your team resolves code scanning vulnerabilities on&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-16-mean-time-to-remediate-metric-for-codeql-pull-request-alerts-now-included-on-the-security-overview-dashboard&quot;&gt;Mean time to remediate metric for CodeQL pull request alerts now included on the security overview dashboard&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p class=&quot;ai-optimize-6 ai-optimize-introduction&quot;&gt;セキュリティ概要ダッシュボードのGitHub CodeQLプルリクエストアラートに「修正時間」指標を追加しました。これにより、手動で修正する場合でも、Copilot Autofixを使用する場合でも、チームがプルリクエストのコードスキャンの脆弱性をどれだけ迅速に解決したかを確認できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/e15ff37f-cdf5-4528-a68f-b2e21314b470&quot; alt=&quot;MTTR指標を示す棒グラフのスクリーンショット。自動修正機能付きのアラートは15.6時間で解決され、自動修正機能なしのアラートは17.4時間で解決されました。&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;ai-optimize-7&quot;&gt;このアップデートにより、GitHub Copilot Autofix が時間の経過とともにセキュリティアラートの解決にどのように貢献しているかについて、より明確な洞察が得られます。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-8&quot;&gt;プルリクエストアラートのメトリクスの詳細については、次のドキュメントをご覧ください: &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/code-security/security-overview/viewing-metrics-for-pull-request-alerts&quot;&gt;プルリクエストアラートのメトリクスの表示&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2025-06-16-mean-time-to-remediate-metric-for-codeql-pull-request-alerts-now-included-on-the-security-overview-dashboard&quot;&gt;CodeQL プル リクエスト アラートの平均修復時間メトリックがセキュリティ概要ダッシュボードに含まれるようになりましたという&lt;/a&gt;記事が、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88887</post-id></item><item><title>GitHub チームプランで組織ルールセットが利用可能になりました</title><link>https://github.blog/changelog/2025-06-16-organization-rulesets-now-available-for-github-team-plans</link><dc:creator>Allison</dc:creator><pubDate>Mon, 16 Jun 2025 15:57:51 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-16-organization-rulesets-now-available-for-github-team-plans</guid><description>&lt;p&gt;GitHub Team plans can now configure and enforce organization-level rulesets! Previously, this powerful governance capability was limited to Enterprise plans, but now Team plan customers can scale their use of&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-16-organization-rulesets-now-available-for-github-team-plans&quot;&gt;Organization rulesets now available for GitHub Team plans&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p class=&quot;ai-optimize-8 ai-optimize-introduction&quot;&gt; GitHub&lt;strong&gt;チーム&lt;/strong&gt;プランでは、&lt;strong&gt;組織レベルのルールセットを設定・適用できるようになりました。&lt;/strong&gt;これまで、この強力なガバナンス機能はエンタープライズプランに限定されていましたが、チームプランのお客様は、ブランチとタグの保護を複数のリポジトリに簡単に拡張できるようになりました。 &lt;/p&gt;
&lt;p&gt;&lt;img data-recalc-dims=&quot;1&quot; fetchpriority=&quot;high&quot; decoding=&quot;async&quot; class=&quot;width-fit alignnone wp-image-88858 size-full&quot; src=&quot;https://github.blog/wp-content/uploads/2025/06/pageorgrulesteam.png?resize=2400%2C1260&quot; alt=&quot;複数のリポジトリを対象とするルールセット ページのスクリーンショット。&quot; width=&quot;2400&quot; height=&quot;1260&quot; srcset=&quot;https://github.blog/wp-content/uploads/2025/06/pageorgrulesteam.png?w=2400 2400w, https://github.blog/wp-content/uploads/2025/06/pageorgrulesteam.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/pageorgrulesteam.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/pageorgrulesteam.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/pageorgrulesteam.png?w=1536 1536w, https://github.blog/wp-content/uploads/2025/06/pageorgrulesteam.png?w=2048 2048w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; /&gt;&lt;/p&gt;
&lt;h2 class=&quot;ai-optimize-9&quot; id=&quot;%f0%9f%86%95-whats-new&quot; class=&quot;ai-optimize-9&quot; id=&quot;%f0%9f%86%95-whats-new&quot; &gt; 🆕 新着情報&lt;a href=&quot;#%f0%9f%86%95-whats-new&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#127381; What&amp;rsquo;s new&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li class=&quot;ai-optimize-9&quot;&gt;チーム プランのお客様に対して、組織ルールセットを組織レベルでターゲット設定して適用できるようになりました。&lt;/li&gt;
&lt;li class=&quot;ai-optimize-6&quot;&gt;管理者は定義して構成を簡素化し、ブランチとタグの保護を一貫して実施することができます。&lt;/li&gt;
&lt;li class=&quot;ai-optimize-7&quot;&gt;これにより、より多くの組織で高度なコンプライアンスおよび管理機能が利用できるようになるため、チームは大規模なコードがリポジトリに入力される方法を管理できるようになります。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;ai-optimize-11&quot; id=&quot;%f0%9f%a7%b0-benefits&quot; class=&quot;ai-optimize-11&quot; id=&quot;%f0%9f%a7%b0-benefits&quot; &gt; 🧰 メリット&lt;a href=&quot;#%f0%9f%a7%b0-benefits&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#129520; Benefits&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li class=&quot;ai-optimize-12&quot;&gt;&lt;strong&gt;大規模なガバナンス:&lt;/strong&gt;組織内のすべてのリポジトリまたは選択したリポジトリに、ブランチとタグの保護に関する一貫したルールを適用します。&lt;/li&gt;
&lt;li class=&quot;ai-optimize-8&quot;&gt;&lt;strong&gt;コンプライアンスの合理化：&lt;/strong&gt;プルリクエストの必須化、GitHub Actionsワークフローの必須化など、組織全体にわたる要件を適用します。これにより、手動による設定や逸脱のリスクが軽減されます。&lt;/li&gt;
&lt;li class=&quot;ai-optimize-9&quot;&gt; &lt;strong&gt;Copilot コードレビューの展開を加速:&lt;/strong&gt;組織のルールセットを使用すると、すべてのリポジトリに対して Copilot コードレビューをシームレスに有効にし、均一な導入を実現できます。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;ai-optimize-13&quot; id=&quot;%f0%9f%94%97-getting-started&quot; class=&quot;ai-optimize-13&quot; id=&quot;%f0%9f%94%97-getting-started&quot; &gt; 🔗 はじめに&lt;a href=&quot;#%f0%9f%94%97-getting-started&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&amp;#128279; Getting started&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p class=&quot;ai-optimize-14&quot;&gt;&lt;a href=&quot;https://github.com/github/ruleset-recipes&quot;&gt;ルールセットレシピリポジトリを使えば、&lt;/a&gt;事前に作成されたルールセットを簡単にインポートして、すぐに使い始めることができます。組織レベルのルールセットは、UI、REST API、またはGraphQL APIから管理できます。詳細については、 &lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets&quot;&gt;ルールセットの管理に関するドキュメントをご覧ください。&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;ai-optimize-15&quot;&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/repositories&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-06-16-organization-rulesets-now-available-for-github-team-plans&quot;&gt;GitHub チーム プランで組織ルール セットが利用できるようになりましたという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88850</post-id></item><item><title>VS Code の GitHub Copilot 5 月リリース (v1.101)</title><link>https://github.blog/changelog/2025-06-13-github-copilot-in-vs-code-may-release-v1-101</link><dc:creator>Allison</dc:creator><pubDate>Fri, 13 Jun 2025 17:23:00 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-13-github-copilot-in-vs-code-may-release-v1-101</guid><description>&lt;p&gt;The latest updates to GitHub Copilot in Visual Studio Code deliver significant improvements to agent mode workflows, Model Context Protocol (MCP) support, and development tools integration. Learn more in the&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-13-github-copilot-in-vs-code-may-release-v1-101&quot;&gt;GitHub Copilot in VS Code May release (v1.101)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; Visual Studio Code の GitHub Copilot の最新アップデートでは、エージェントモードのワークフロー、モデルコンテキストプロトコル (MCP) のサポート、開発ツールの統合が大幅に改善されました。これらの新機能の設定方法など、詳細については、 &lt;a href=&quot;https://code.visualstudio.com/updates/v1_101&quot;&gt;VS Code 2025 年 5 月リリースノート&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;h3 id=&quot;expanded-mcp-capabilities&quot; id=&quot;expanded-mcp-capabilities&quot; &gt;拡張されたMCP機能&lt;a href=&quot;#expanded-mcp-capabilities&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Expanded MCP capabilities&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;プロンプトとリソースのサポート&lt;/strong&gt;により、MCP サーバーは、スラッシュ コマンドとコンテキスト アタッチメントを通じてアクセスできる再利用可能なテンプレートとコンテンツを提供できます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;認証サポート&lt;/strong&gt;により&lt;a href=&quot;https://github.blog/changelog/2025-06-12-remote-github-mcp-server-is-now-available-in-public-preview/&quot;&gt;、リモート GitHub MCP サーバー&lt;/a&gt;などのリモート MCP サーバーが、OAuth およびデバイス コード フローを使用してユーザー アカウントに代わって操作できるようになります。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;開発モードで&lt;/strong&gt;は、Node.js および Python MCP サーバーのデバッグ機能が提供されます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拡張 API を&lt;/strong&gt;使用すると、拡張機能で MCP サーバーのコレクションを公開および管理できるようになります。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;enhanced-agent-mode-and-chat-experience&quot; id=&quot;enhanced-agent-mode-and-chat-experience&quot; &gt;強化されたエージェントモードとチャットエクスペリエンス&lt;a href=&quot;#enhanced-agent-mode-and-chat-experience&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Enhanced agent mode and chat experience&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ツール セットを&lt;/strong&gt;使用すると、関連するツールをグループ化して管理しやすくし、機能をすばやく有効化/無効化できます。&lt;/li&gt;
&lt;li&gt;より明確なユーザー メッセージ、より優れた元に戻す機能、合理化された添付ファイルのナビゲーションにより、&lt;strong&gt;チャット UX が改善されました&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;smarter-coding-assistance&quot; id=&quot;smarter-coding-assistance&quot; &gt;よりスマートなコーディング支援&lt;a href=&quot;#smarter-coding-assistance&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Smarter coding assistance&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;NES インポート提案は&lt;/strong&gt;、TypeScript/JavaScript に加えて Python ファイルもサポートするようになり、精度が向上しました。&lt;/li&gt;
&lt;li&gt;対話型 Python REPL セッション用のターミナルでの&lt;strong&gt;言語サーバー補完&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;AI を活用した設定検索 (プレビュー) では、&lt;/strong&gt;自然言語クエリを使用して意味的に類似した設定を検索します。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;source-control-and-development-workflow-improvements&quot; id=&quot;source-control-and-development-workflow-improvements&quot; &gt;ソース管理と開発ワークフローの改善&lt;a href=&quot;#source-control-and-development-workflow-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Source control and development workflow improvements&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;タスクの割り当てと追跡のための GitHub Pull Requests 拡張機能と&lt;strong&gt;Copilot コーディング エージェントの統合&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ソース管理履歴の詳細では、&lt;/strong&gt;複数ファイルの差分サポートを使用して、コミット リソースをツリーまたはリスト ビューで表示します。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;楽しいコーディングを！&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;この記事は&lt;a href=&quot;https://github.blog/changelog/2025-06-13-github-copilot-in-vs-code-may-release-v1-101&quot;&gt;、GitHub Copilot in VS Code 5 月リリース (v1.101) が&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;に掲載されたものです。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88779</post-id></item><item><title>Copilotコードレビュー：すべての人のためのカスタマイズ</title><link>https://github.blog/changelog/2025-06-13-copilot-code-review-customization-for-all</link><dc:creator>Allison</dc:creator><pubDate>Fri, 13 Jun 2025 15:47:48 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-13-copilot-code-review-customization-for-all</guid><description>&lt;p&gt;Copilot code review now supports the same custom instructions used by Copilot Chat and coding agent—unlocking personalized, consistent AI reviews across your workflow.&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-13-copilot-code-review-customization-for-all&quot;&gt;Copilot code review: Customization for all&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; &lt;strong&gt;Copilot Chat&lt;/strong&gt;と&lt;strong&gt;Copilotコーディングエージェント&lt;/strong&gt;で既に使用されているものと同じカスタマイズファイルである&lt;code&gt;.github/copilot-instructions.md&lt;/code&gt;を使用して、 &lt;strong&gt;Copilotコードレビューを&lt;/strong&gt;カスタマイズできるようになりました。これにより、ワークフロー全体にわたってCopilotの応答方法を一貫した方法で設定できるようになります。&lt;/p&gt;
&lt;p&gt; ✨&lt;strong&gt;サポートは、すべての有料 Copilot ユーザー向けにパブリック プレビュー中です。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;リポジトリに&lt;code&gt;copilot-instructions.md&lt;/code&gt;ファイルを追加し、自然言語による指示を追加するだけです。いくつかアイデアをご紹介します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; 🌍 &lt;em&gt;「スペイン語で返信する」&lt;/em&gt; （多言語チーム向け）&lt;/li&gt;
&lt;li&gt; 🧹 &lt;em&gt;「読みやすさを重視し、ネストされた三項演算子は避ける」&lt;/em&gt; （スタイル重視のレビュー向け）&lt;/li&gt;
&lt;li&gt; 📦 &lt;em&gt;「公開APIへのフィードバックを優先する」&lt;/em&gt; （リスクの高い変更にフラグを立てるため）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;スペイン語で次の例をご覧ください。 &lt;/p&gt;
&lt;p&gt;&lt;img data-recalc-dims=&quot;1&quot; decoding=&quot;async&quot; class=&quot;aligncenter size-large wp-image-88773 width-fit&quot; src=&quot;https://github.blog/wp-content/uploads/2025/06/pr-overview-spanish.png?w=906&amp;#038;resize=906%2C1024&quot; alt=&quot;スペイン語での Copilot コードレビューコメント。&quot; width=&quot;906&quot; height=&quot;1024&quot; srcset=&quot;https://github.blog/wp-content/uploads/2025/06/pr-overview-spanish.png?w=1320 1320w, https://github.blog/wp-content/uploads/2025/06/pr-overview-spanish.png?w=265 265w, https://github.blog/wp-content/uploads/2025/06/pr-overview-spanish.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/pr-overview-spanish.png?w=906 906w&quot; sizes=&quot;(max-width: 906px) 100vw, 906px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;一度設定すると、指示は自動的に適用されます。プル リクエストごとに手動で設定する必要はありません。&lt;/p&gt;
&lt;p&gt;ビジネスおよびエンタープライズのお客様の場合、この機能にアクセスするには、組織の管理者が&lt;a href=&quot;https://docs.github.com/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-policies-for-copilot-in-your-organization#:~:text=Opt%20in%20to%20preview%20features%3A%20If%20enabled%2C%20users%20can%20test%20new%20Copilot%20features%20that%20are%20not%20yet%20generally%20available.%20Be%20aware%20that%20previews%20of%20features%20may%20have%20flaws%2C%20and%20the%20features%20may%20be%20changed%20or%20discontinued%20at%20any%20time.%20Current%20previews%20of%20Copilot%20features%20include%3A&quot;&gt;Copilot プレビュー機能を&lt;/a&gt;有効にしていることを確認してください。&lt;/p&gt;
&lt;p&gt;この動作を管理するには、Copilot コードレビューのリポジトリ設定に移動します。 &lt;/p&gt;
&lt;p&gt;&lt;img data-recalc-dims=&quot;1&quot; decoding=&quot;async&quot; class=&quot;aligncenter size-large wp-image-88774 width-fit&quot; src=&quot;https://github.blog/wp-content/uploads/2025/06/general-settings.png?w=1024&amp;#038;resize=1024%2C221&quot; alt=&quot;カスタム指示を管理する一般設定&quot; width=&quot;1024&quot; height=&quot;221&quot; srcset=&quot;https://github.blog/wp-content/uploads/2025/06/general-settings.png?w=1582 1582w, https://github.blog/wp-content/uploads/2025/06/general-settings.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/general-settings.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/general-settings.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/general-settings.png?w=1536 1536w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/copilot-conversations&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-06-13-copilot-code-review-customization-for-all&quot;&gt;Copilot コードレビュー: すべての人のためのカスタマイズ の投稿&lt;/a&gt;が最初に&lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88769</post-id></item><item><title>アクションランナーコントローラ 0.12.0 リリース</title><link>https://github.blog/changelog/2025-06-13-actions-runner-controller-0-12-0-release</link><dc:creator>Allison</dc:creator><pubDate>Fri, 13 Jun 2025 14:29:19 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-13-actions-runner-controller-0-12-0-release</guid><description>&lt;p&gt;The Actions Runner Controller (ARC) 0.12.0 release introduces several enhancements including: public preview support for Red Hat OpenShift Kubernetes clusters and vault-based secret management, improvements to Docker-in-Docker (DinD) container mode,&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-13-actions-runner-controller-0-12-0-release&quot;&gt;Actions Runner Controller 0.12.0 release&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; &lt;a href=&quot;https://github.com/actions/actions-runner-controller/releases/tag/gha-runner-scale-set-0.12.0&quot;&gt;Actions Runner Controller (ARC) 0.12.0&lt;/a&gt;リリースでは、Red Hat OpenShift Kubernetes クラスターとボールトベースのシークレット管理のパブリック プレビュー サポート、Docker-in-Docker (DinD) コンテナー モードの改善、信頼性、可観測性、マイナー パッチのローリング アップデートを改善する一連の生活の質の更新など、いくつかの機能強化が導入されています。&lt;/p&gt;
&lt;h3 id=&quot;red-hat-openshift-public-preview&quot; id=&quot;red-hat-openshift-public-preview&quot; &gt; Red Hat OpenShift パブリックプレビュー&lt;a href=&quot;#red-hat-openshift-public-preview&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Red Hat OpenShift public preview&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;これまで、ARC は OpenShift クラスターのプロビジョニングを明示的にサポートしていませんでした。containerMode が設定さ&lt;code&gt;containerMode&lt;/code&gt;ていない構成、または&lt;code&gt;containerMode&lt;/code&gt;が&lt;code&gt;kubernetes&lt;/code&gt;に設定されている構成のサポートをパブリックプレビューで開始できることを嬉しく思います。DinD は使用できますが、完全なサポートが提供されていないため、将来のリリースマイルストーンまでは推奨されません。OpenShift は、セキュリティリスクの高まりを懸念し、デフォルトで特権コンテナを制限しています。特権コンテナはプラットフォームの多くのセキュリティ制御をバイパスできるため、潜在的な攻撃ベクトルとなります。&lt;/p&gt;
&lt;p&gt;詳細については、Red Hat の&lt;a href=&quot;https://developers.redhat.com/articles/2025/02/17/how-securely-deploy-github-arc-openshift&quot;&gt;ブログ投稿&lt;/a&gt;と弊社の&lt;a href=&quot;https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/about-support-for-actions-runner-controller#scope-of-support-for-actions-runner-controller&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。 &lt;/p&gt;
&lt;h3 id=&quot;vault-support-for-arc-secrets-public-preview&quot; id=&quot;vault-support-for-arc-secrets-public-preview&quot; &gt; ARC シークレットの Vault サポートのパブリック プレビュー&lt;a href=&quot;#vault-support-for-arc-secrets-public-preview&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Vault support for ARC secrets public preview&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; ARCは、現在使用されているKubernetesシークレットに加えて、外部ボールトからのシークレットの取得をサポートするようになりました。この機能強化により、個人アクセストークンやGitHub App認証情報などの機密性の高い認証情報を安全かつ動的に取得できるようになり、ARCとGitHub Enterprise ServerまたはGitHub Enterprise Cloud間の認証プロセスが改善されます。ただし、ランナーJITトークンなど、ボールトベースのストレージでは現在、すべてのシークレットがサポートされているわけではないことにご注意ください。パブリックプレビューではAzure Key Vaultのみがサポートされており、今後のリリースで追加のボールトプロバイダーのネイティブサポートが導入される予定です。詳細については、 &lt;a href=&quot;https://docs.github.com/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/authenticating-to-the-github-api#authenticating-arc-with-vault-secrets&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;h3 id=&quot;updates-to-dind-containermode&quot; id=&quot;updates-to-dind-containermode&quot; &gt; DinD コンテナモードのアップデート&lt;a href=&quot;#updates-to-dind-containermode&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Updates to DinD containerMode&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;このリリースでは、DinDコンテナにサイドカーサポートを導入することで、DinDエクスペリエンスが向上しました。これまでARCは、ランナーポッド内の2つの独立したコンテナ（ランナーとDinDコンテナ）を使用してDinDモードをデプロイしていました。これらのコンテナはライフサイクルが別々だったため、ランナーよりも先にDinDコンテナが終了すると問題が発生する可能性がありました。今回のアップデートでは、ARCはKubernetesネイティブのサイドカー機能（Kubernetes v1.29以降でデフォルトで有効化）を活用するようになりました。アップグレード前に、この変更は完全に下位互換性があることにご注意ください。現在カスタムポッド仕様を使用している場合、またはDinDを手動で管理している場合は、新しいサイドカーの動作を採用する場合を除き、変更は必要ありません。詳細については、 &lt;a href=&quot;https://docs.github.com/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/deploying-runner-scale-sets-with-actions-runner-controller#using-docker-in-docker-or-kubernetes-mode-for-containers&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;h3 id=&quot;quality-of-life-improvements&quot; id=&quot;quality-of-life-improvements&quot; &gt;生活の質の向上&lt;a href=&quot;#quality-of-life-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Quality of life improvements&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;failed-pod-retry-mechanism&quot; id=&quot;failed-pod-retry-mechanism&quot; &gt;失敗したポッドの再試行メカニズム&lt;a href=&quot;#failed-pod-retry-mechanism&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Failed pod retry mechanism&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; ARC に、失敗したポッドの自動再試行機能が追加されました。以前は、一時的な問題（イメージのプルエラーや一時的なネットワーク障害など）が原因で失敗したポッドには、手動による介入が必要でした。今回のリリースでは、ARC は失敗したポッドを最大 5 回まで自動的に再試行し、エフェメラルランナーのインストールをキューに入れるようになりました。これにより、特にノードのスケールダウンイベント時の回復力が向上し、ダウンタイムが短縮されます。&lt;/p&gt;
&lt;h4 id=&quot;rolling-updates&quot; id=&quot;rolling-updates&quot; &gt;ローリングアップデート&lt;a href=&quot;#rolling-updates&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Rolling updates&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;パッチレベルのローリングアップデートがサポートされるようになりました。これにより、ユーザーはARCのアップグレードを最小限の中断で実行できます。ただし、マイナーバージョンのアップグレードでは再インストールが必要です。また、カスタムリソース定義（CRD）が変更された場合は、再インストール前にCRDを削除する必要があります。&lt;/p&gt;
&lt;h4 id=&quot;metrics&quot; id=&quot;metrics&quot; &gt;メトリクス&lt;a href=&quot;#metrics&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Metrics&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-04-15-upcoming-breaking-changes-and-releases-for-github-actions/#actions-runner-controller-release-0-11-0&quot;&gt;ARC 0.11.0&lt;/a&gt;では、高カーディナリティへの懸念から&lt;code&gt;job_workflow_ref&lt;/code&gt;メトリックが削除されました。今回のリリースでは、処理が改善された上で再導入され、メトリックのパフォーマンスを維持しながら、ワークフロー参照をより効率的に追跡できるようになりました。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-06-13-actions-runner-controller-0-12-0-release&quot;&gt;Actions Runner Controller 0.12.0 リリースの&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88761</post-id></item><item><title>CodeQL 2.22.0はGoのカバレッジを改善し、Swift 6.1.2のサポートを追加しました。</title><link>https://github.blog/changelog/2025-06-12-codeql-2-22-0-improves-coverage-for-go-and-adds-support-for-swift-6-1-2</link><dc:creator>Allison</dc:creator><pubDate>Thu, 12 Jun 2025 21:43:26 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-12-codeql-2-22-0-improves-coverage-for-go-and-adds-support-for-swift-6-1-2</guid><description>&lt;p&gt;CodeQL is the static analysis engine behind GitHub code scanning, which finds and remediates security issues in your code. We&amp;#8217;ve recently released version 2.22.0 of CodeQL. Here&amp;#8217;s what&amp;#8217;s new and&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-12-codeql-2-22-0-improves-coverage-for-go-and-adds-support-for-swift-6-1-2&quot;&gt;CodeQL 2.22.0 improves coverage for Go and adds support for Swift 6.1.2&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; CodeQLは、 &lt;a href=&quot;https://docs.github.com/code-security/code-scanning/introduction-to-code-scanning/about-code-scanning-with-codeql&quot;&gt;GitHubコードスキャンを&lt;/a&gt;支える静的解析エンジンで、コード内のセキュリティ問題を検出し、修正します。先日、 &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.22.0/&quot;&gt;CodeQLのバージョン2.22.0を&lt;/a&gt;リリースしました。今回のリリースにおける新機能と改善点をご紹介します。&lt;/p&gt;
&lt;h3 id=&quot;go&quot; id=&quot;go&quot; &gt;行く&lt;a href=&quot;#go&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Go&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Go の新しいクエリ&lt;code&gt;go/html-template-escaping-bypass-xss&lt;/code&gt;のサポートが追加されました。このクエリは、 &lt;code&gt;html/template&lt;/code&gt;パッケージの使用時に潜在的なクロスサイト スクリプティングの脆弱性を検出します。&lt;/p&gt;
&lt;h3 id=&quot;swift&quot; id=&quot;swift&quot; &gt;迅速&lt;a href=&quot;#swift&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Swift&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Swift 6.1.2 で構築されたアプリの分析をサポートするために CodeQL を更新しました。&lt;/p&gt;
&lt;p&gt;変更点の完全なリストについては、&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.22.0/&quot;&gt;バージョン 2.22.0 の完全な変更ログ&lt;/a&gt;を確認してください。そこでは、すべての更新と機能強化の詳細が見つかります。&lt;/p&gt;
&lt;p&gt; CodeQLの新しいバージョンは、github.comのGitHubコードスキャンユーザーに自動的にデプロイされます。CodeQL 2.22.0の新機能は、GitHub Enterprise Server（GHES）バージョン3.19にも含まれます。古いバージョンのGHESをご利用の場合は、 &lt;a href=&quot;https://docs.github.com/enterprise-server@3.17/admin/managing-code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;CodeQLのバージョンを手動でアップグレード&lt;/a&gt;できます。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-06-12-codeql-2-22-0-improves-coverage-for-go-and-adds-support-for-swift-6-1-2&quot;&gt;CodeQL 2.22.0 では Go の対象範囲が拡大し、Swift 6.1.2 のサポートが追加されました&lt;/a&gt;。この記事は&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88752</post-id></item><item><title>オンボーディングを強化するために新しいユーザーダッシュボードが更新されました</title><link>https://github.blog/changelog/2025-06-12-new-user-dashboard-refresh</link><dc:creator>Allison</dc:creator><pubDate>Thu, 12 Jun 2025 20:36:42 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-12-new-user-dashboard-refresh</guid><description>&lt;p&gt;We&amp;#8217;ve reimagined the new user dashboard to empower users to boost their productivity and master their GitHub workflow from day one. What&amp;#8217;s changing &amp;#9989; More engaging and relevant onboarding content&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-12-new-user-dashboard-refresh&quot;&gt;New user dashboard is refreshed for enhanced onboarding&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p class=&quot;ai-optimize-6 ai-optimize-introduction&quot;&gt;新しいユーザー ダッシュボードを再設計し、ユーザーが初日から生産性を向上し、GitHub ワークフローを習得できるようにしました。 &lt;/p&gt;
&lt;h2 class=&quot;ai-optimize-7 ai-optimize-introduction&quot; id=&quot;whats-changing&quot; class=&quot;ai-optimize-7 ai-optimize-introduction&quot; id=&quot;whats-changing&quot; &gt;何が変わるのか&lt;a href=&quot;#whats-changing&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;rsquo;s changing&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p class=&quot;ai-optimize-8&quot;&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8&quot; alias=&quot;white_check_mark&quot;&gt; ✅&lt;/g-emoji&gt;&lt;strong&gt;より魅力的で関連性の高いオンボーディングコンテンツ&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;ai-optimize-9&quot;&gt;新しいユーザーダッシュボードでは、古くなったモジュールを削除し、すべてのユーザーのGitHubジャーニーをスムーズにスタートできるよう設計された、動的で関連性のあるコンテンツに置き換えました。新規ユーザーは、GitHub for BeginnersのYouTubeプレイリスト、3つの必須スタートタスク、GitHubの基本概念を網羅した実用的なドキュメント、そして必須ツールへのクイックリンクを利用できるようになります。すべてのモジュールはインタラクティブで閉じることができるため、ユーザーは学習の進捗に合わせてオンボーディング体験をカスタマイズできます。 &lt;/p&gt;
&lt;p class=&quot;ai-optimize-10&quot;&gt;&lt;g-emoji fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8&quot; alias=&quot;white_check_mark&quot;&gt; ✅&lt;/g-emoji&gt;&lt;strong&gt;新規ユーザーが重要な部分に集中できるようにレイアウトを最適化しました&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;ai-optimize-11&quot;&gt;新規ユーザーが学習に集中できるよう、GitHub を使い始めてから最初の 30 日間はダッシュボードの右側のサイドバーは非表示になります。30 日経過後はサイドバーが表示され、動的なマーケティングバナーと変更履歴が表示されるため、GitHub の最新情報を常に把握し、ユーザーとつながりを保つことができます。 &lt;/p&gt;
&lt;h2 class=&quot;ai-optimize-12&quot; id=&quot;share-your-feedback&quot; class=&quot;ai-optimize-12&quot; id=&quot;share-your-feedback&quot; &gt;フィードバックを共有する&lt;a href=&quot;#share-your-feedback&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Share your feedback&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p class=&quot;ai-optimize-13&quot;&gt;オンボーディング体験の向上に役立てるため、皆様からのフィードバックをお待ちしております。&lt;a href=&quot;https://github.com/orgs/community/discussions/160883&quot;&gt;コミュニティディスカッション&lt;/a&gt;にご参加いただき、ご質問やフィードバックをお寄せください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2025-06-12-new-user-dashboard-refresh&quot;&gt;オンボーディング強化のため、新規ユーザー ダッシュボードが更新されましたという&lt;/a&gt;記事が最初に&lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88738</post-id></item><item><title>AIプロンプトエディターと評価ツールがマルチターン会話をサポートするようになりました</title><link>https://github.blog/changelog/2025-06-12-ai-prompt-editor-and-evaluations-tooling-now-supports-multi-turn-conversations</link><dc:creator>Allison</dc:creator><pubDate>Thu, 12 Jun 2025 20:22:11 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-12-ai-prompt-editor-and-evaluations-tooling-now-supports-multi-turn-conversations</guid><description>&lt;p&gt;You can now save and evaluate multi-turn conversations in the GitHub Models prompt editor and evaluations tooling! Until now, the evaluations tooling only supported a single user prompt. With this&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-12-ai-prompt-editor-and-evaluations-tooling-now-supports-multi-turn-conversations&quot;&gt;AI prompt editor and evaluations tooling now supports multi-turn conversations&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p class=&quot;ai-optimize-6 ai-optimize-introduction&quot;&gt; &lt;a href=&quot;https://github.blog/changelog/2025-05-19-github-models-built-into-your-repository-is-in-public-preview/&quot;&gt;GitHub モデルのプロンプト エディターと評価ツール&lt;/a&gt;で、マルチターンの会話を保存して評価できるようになりました。&lt;/p&gt;
&lt;p class=&quot;ai-optimize-7&quot;&gt;これまで、評価ツールは単一のユーザープロンプトのみをサポートしていました。今回のアップデートにより、 &lt;code&gt;.prompt.yml&lt;/code&gt;ファイルに最大4ラウンドのユーザーおよびアシスタントメッセージを直接含めることができ、より長いインタラクションの終了時にモデルがどのように応答するかをテストできます。API では、無制限に複数のメッセージの組み合わせを含めることができます。 &lt;/p&gt;
&lt;p&gt;&lt;video src=&quot;https://github.com/user-attachments/assets/fdd4aa81-df95-4d43-996d-dc4e58e29ef6&quot; autoplay=&quot;autoplay&quot; loop=&quot;loop&quot; muted=&quot;&quot; controls=&quot;controls&quot; width=&quot;100%&quot; height=&quot;150&quot;&gt;

&lt;/video&gt;&lt;/p&gt;
&lt;p class=&quot;ai-optimize-8&quot;&gt;これは特に次の場合に役立ちます:&lt;/p&gt;
&lt;ul&gt;
&lt;li class=&quot;ai-optimize-7&quot;&gt;&lt;strong&gt;記憶と文脈保持のテスト&lt;/strong&gt;。例えば、旅行ボットの場合、ユーザーが2ターン目に「寒い場所に行きたい」と言った後、4ターン目までに雪の多い場所を推奨するでしょうか？&lt;/li&gt;
&lt;li class=&quot;ai-optimize-7&quot;&gt;&lt;strong&gt;指示が変化しても一貫した動作を確保する&lt;/strong&gt;。例えば、ユーザーが最初に「100ドル以下にしてください」と言った後、「200ドル以下にしてください」と変更した場合でも、アシスタントは適切な推奨内容を調整します。&lt;/li&gt;
&lt;li class=&quot;ai-optimize-7&quot;&gt;&lt;strong&gt;実際のチャットフローを評価します&lt;/strong&gt;。たとえば、トラブルシューティングの手順を何度もやり取りした後に適切にエスカレーションする必要があるカスタマーサポートエージェントなどです。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;ai-optimize-10&quot; id=&quot;start-building-ai-apps-with-github-models-today&quot; class=&quot;ai-optimize-10&quot; id=&quot;start-building-ai-apps-with-github-models-today&quot; &gt;今すぐ GitHub モデルを使って AI アプリを構築しましょう&lt;a href=&quot;#start-building-ai-apps-with-github-models-today&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Start building AI apps with GitHub Models today&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;ai-optimize-11&quot;&gt; GitHub ModelsとすべてのAI開発ツールは、パブリックプレビューとしてすべてのGitHubユーザーにご利用いただけます。迅速な編集機能と軽量な評価機能も含まれています。リポジトリまたは組織でツールを有効にしてお試しください。詳細については、&lt;a href=&quot;https://docs.github.com/github-models/about-github-models&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。 &lt;/p&gt;
&lt;h3 class=&quot;ai-optimize-12&quot; id=&quot;help-us-shape-whats-next&quot; class=&quot;ai-optimize-12&quot; id=&quot;help-us-shape-whats-next&quot; &gt;次のステップを形作るために協力してください&lt;a href=&quot;#help-us-shape-whats-next&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Help us shape what&amp;rsquo;s next&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;ai-optimize-13&quot;&gt;まだ始まったばかりですが、皆様からのフィードバックはロードマップの策定に役立ちます。&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/models&quot;&gt;コミュニティのディスカッション&lt;/a&gt;に参加してご意見を共有し、GitHubでAIの未来を築く他の開発者と交流しましょう。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-06-12-ai-prompt-editor-and-evaluations-tooling-now-supports-multi-turn-conversations&quot;&gt;AI プロンプト エディターと評価ツールがマルチターンの会話をサポートするようになりましたという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">88736</post-id></item></channel></rss>