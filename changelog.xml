<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>Archive: 2025 - GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Mon, 18 Aug 2025 20:17:59 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.8.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Archive: 2025 - GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>GitHub 所有の BLOB ストレージを使用してリポジトリを移行する</title><link>https://github.blog/changelog/2025-08-18-migrate-repositories-with-github-owned-blob-storage</link><dc:creator>Allison</dc:creator><pubDate>Mon, 18 Aug 2025 17:35:15 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-18-migrate-repositories-with-github-owned-blob-storage</guid><description>&lt;p&gt;You can now participate in a public preview to migrate repositories to GitHub Enterprise Cloud (GHEC) with GitHub Enterprise Importer (GEI) using GitHub-owned blob storage. You no longer need to&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-18-migrate-repositories-with-github-owned-blob-storage&quot;&gt;Migrate repositories with GitHub-owned blob storage&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; GitHub Enterprise Importer (GEI) と GitHub 所有の BLOB ストレージを使用して、リポジトリを GitHub Enterprise Cloud (GHEC) に移行するパブリックプレビューにご参加いただけるようになりました。リポジトリの移行を実行するために、所有するストレージアカウントへの共有アクセスキーを GEI に提供する必要がなくなりました。リポジトリのアーカイブを github.com または ghe.com に直接アップロードするだけで移行を実行できます。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;--use-github-storage&lt;/code&gt;フラグを渡すことで、 &lt;code&gt;gh gei&lt;/code&gt;および&lt;code&gt;gh bbs2gh&lt;/code&gt;コマンドライン拡張機能を使用して、GitHub 所有のストレージを使用してリポジトリの移行を開始できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; alt=&quot;ターミナルで `gh gei --use-github-storage` を使用してリポジトリを移行する&quot; src=&quot;https://github.com/user-attachments/assets/5da7b312-2c43-4f1e-a6fe-1a92b3db05de&quot;&gt;&lt;/p&gt;
&lt;p&gt; GitHub所有のBLOBストレージを使用してリポジトリを移行するには、 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/migrations/using-github-enterprise-importer/migrating-between-github-products/migrating-repositories-from-github-enterprise-server-to-github-enterprise-cloud&quot;&gt;「GitHub Enterprise ServerからGitHub Enterprise Cloudへのリポジトリの移行」&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/migrations/using-github-enterprise-importer/migrating-from-bitbucket-server-to-github-enterprise-cloud/migrating-repositories-from-bitbucket-server-to-github-enterprise-cloud&quot;&gt;「Bitbucket ServerからGitHub Enterprise Cloudへのリポジトリの移行」&lt;/a&gt;に関するドキュメントをご覧ください。GitHub所有のBLOBストレージを使用してGitLabリポジトリを移行することにご興味をお持ちですか？&lt;a href=&quot;https://github.com/services&quot;&gt;エキスパートサービス&lt;/a&gt;チームまでお問い合わせください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-18-migrate-repositories-with-github-owned-blob-storage&quot;&gt;GitHub 所有の BLOB ストレージを使用してリポジトリを移行する方法に関する&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90312</post-id></item><item><title>顧客はUIとAPIの両方からコストセンターにユーザーを追加できるようになりました</title><link>https://github.blog/changelog/2025-08-18-customers-can-now-add-users-to-a-cost-center-from-both-the-ui-and-api-2</link><dc:creator>Allison</dc:creator><pubDate>Mon, 18 Aug 2025 15:01:58 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-18-customers-can-now-add-users-to-a-cost-center-from-both-the-ui-and-api-2</guid><description>&lt;p&gt;You can now search for, add, and remove individual users in cost centers directly from the billing UI. Previously, managing cost center membership required using the REST API. This update&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-18-customers-can-now-add-users-to-a-cost-center-from-both-the-ui-and-api-2&quot;&gt;Customers can now add users to a cost center from both the UI and API&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;請求 UI から直接、コスト センター内の個々のユーザーを検索、追加、削除できるようになりました。&lt;/p&gt;
&lt;p&gt;以前は、コストセンターのメンバーシップを管理するにはREST APIを使用する必要がありました。今回のアップデートにより、請求UI内で組織全体のコストの追跡と帰属設定が容易になります。&lt;/p&gt;
&lt;h2 id=&quot;whats-new&quot; id=&quot;whats-new&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-new&quot;&gt;新着情報&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;コスト センターを作成または編集するときに、次のことが可能になります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;追加する 1 人以上のユーザーを検索して選択します。&lt;/li&gt;
&lt;li&gt;コスト センターに割り当てられているすべてのユーザーを表示します。&lt;/li&gt;
&lt;li&gt;ワンクリックでユーザーを削除します。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-it-works&quot; id=&quot;how-it-works&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#how-it-works&quot;&gt;仕組み&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;エンタープライズ管理者と請求マネージャーは、エンタープライズ全体のすべてのコストセンターユーザーを表示および管理できます。組織管理者は、組織内のユーザーを表示および管理できます。&lt;/p&gt;
&lt;p&gt;各ユーザーは一度に1つのコストセンターにのみ所属できます。既に他のコストセンターに割り当てられているユーザーを追加しようとすると、新しいコストセンターに移動され、通知が表示されます。&lt;/p&gt;
&lt;p&gt;この機能は現在、GitHub Enterprise Cloud のお客様にご利用いただけます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/billing/tutorials/use-cost-centers&quot;&gt;コスト センターの管理の詳細について説明します&lt;/a&gt;。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-18-customers-can-now-add-users-to-a-cost-center-from-both-the-ui-and-api-2&quot;&gt;顧客が UI と API の両方からコスト センターにユーザーを追加できるようになりましたという&lt;/a&gt;記事が最初に&lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90304</post-id></item><item><title>プルリクエストの説明における Copilot テキスト補完の廃止</title><link>https://github.blog/changelog/2025-08-15-deprecating-copilot-text-completion-for-pull-request-descriptions</link><dc:creator>Allison</dc:creator><pubDate>Fri, 15 Aug 2025 22:52:35 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-15-deprecating-copilot-text-completion-for-pull-request-descriptions</guid><description>&lt;p&gt;On September 12, 2025, we will retire Copilot text completion for pull request descriptions. After this date, when you start writing a description, Copilot will no longer suggest completions. This&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-15-deprecating-copilot-text-completion-for-pull-request-descriptions&quot;&gt;Deprecating Copilot text completion for pull request descriptions&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; 2025年9月12日をもって、プルリクエストの説明におけるCopilotのテキスト補完機能は廃止されます。この日以降、説明の入力を開始すると、Copilotは補完候補を表示しなくなります。&lt;/p&gt;
&lt;p&gt;現在ベータ版となっているこの機能は、Copilot Enterprise のお客様が状況に応じた適切な提案を提供することで、プルリクエストの説明文を完成するのに役立っています。一部の開発者にとっては有益な機能でしたが、私たちは他の分野に注力することに決定しました。この機能への投資を継続するのではなく、プルリクエストの概要を改善し、開発者が明確で正確かつ高品質な概要をより簡単に作成できるようにします。&lt;/p&gt;
&lt;p&gt;これらの更新により、変更を説明する際にさらに有意義なサポートが提供され、レビュー担当者がプル リクエストの範囲と意図をより迅速に理解できるようになります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/pull-requests&quot;&gt;GitHubコミュニティ&lt;/a&gt;内でのディスカッションにご参加ください。プルリクエストの詳細については、&lt;a href=&quot;https://docs.github.com/pull-requests&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;プル&lt;a href=&quot;https://github.blog/changelog/2025-08-15-deprecating-copilot-text-completion-for-pull-request-descriptions&quot;&gt;リクエストの説明に対する Copilot テキスト補完の廃止に関する記事が、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90251</post-id></item><item><title>GitHub ActionsポリシーがブロックとSHAピンニングアクションをサポートするようになりました</title><link>https://github.blog/changelog/2025-08-15-github-actions-policy-now-supports-blocking-and-sha-pinning-actions</link><dc:creator>Allison</dc:creator><pubDate>Fri, 15 Aug 2025 15:05:08 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-15-github-actions-policy-now-supports-blocking-and-sha-pinning-actions</guid><description>&lt;p&gt;GitHub Actions is powered by a diverse ecosystem of first-party and community contributed actions. If one of these actions has a vulnerability or is compromised by a malicious actor, it&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-15-github-actions-policy-now-supports-blocking-and-sha-pinning-actions&quot;&gt;GitHub Actions policy now supports blocking and SHA pinning actions&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; GitHub Actionsは、ファーストパーティおよびコミュニティによって提供されたアクションからなる多様なエコシステムによって支えられています。これらのアクションのいずれかに脆弱性があったり、悪意のある攻撃者によって侵害されたりすると、サプライチェーン全体に影響を与える可能性があります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot&quot;&gt;Dependabot&lt;/a&gt;などのツールは、既知の脆弱性を持つアクションのバージョンを特定し、アップグレードすることで、リスクを軽減できます。しかし、アクションが侵害され、シークレットの流出やワークフローに付与された権限を利用したコードやリリースの変更など、悪意のあるコードが組み込まれた場合、ユーザーは迅速かつ断固とした行動を取り、これらの悪意のある変更によるリスクを最小限に抑える必要があります。このリリースでは、開発者と管理者が脆弱性の影響を受ける依存関係への対応を強化し、その影響をプロアクティブに制限するための新機能が提供されます。&lt;/p&gt;
&lt;h3 id=&quot;block-specific-actions-or-versions&quot; id=&quot;block-specific-actions-or-versions&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#block-specific-actions-or-versions&quot;&gt;特定のアクションまたはバージョンをブロックする&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;より優れたガバナンスを提供し、悪意のあると判断されたサードパーティのワークフローに対応するため、許可されたアクションと再利用可能なワークフローのポリシーで明示的なブロックがサポートされるようになりました。特定のアクションまたはバージョンをブロックするには、エントリの先頭に&lt;code&gt;!&lt;/code&gt;を付けます。ブロックリストは最後に評価され、そのアクションを許可する他のポリシーはオーバーライドされます。&lt;/p&gt;
&lt;h3 id=&quot;enforce-sha-pinning&quot; id=&quot;enforce-sha-pinning&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#enforce-sha-pinning&quot;&gt;SHAピンニングを強制する&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;侵害された依存関係の影響を事前に制限するため、GitHub ではワークフローにおいて &lt;a href=&quot;https://docs.github.com/actions/reference/security/secure-use#using-third-party-actions&quot;&gt;依存関係のバージョンを特定のコミット SHA に固定&lt;/a&gt;することを推奨しています。これにより、新規または更新されたブランチやタグに追加された悪意のあるコードが自動的に使用されるのを防ぎます。管理者は、許可されたアクションポリシーを通じて SHA 固定の使用を強制できるようになりました。エンタープライズ、組織、またはリポジトリレベルでアクションが無効になっている場合を除き、各ラジオボタンの下に新しいチェックボックスが表示されます。このポリシーは完全なコミット SHA をチェックし、固定されていないアクションを使用しようとするワークフローはすべて失敗します。&lt;/p&gt;
&lt;h3 id=&quot;documentation&quot; id=&quot;documentation&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#documentation&quot;&gt;ドキュメント&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;これらの新しいポリシーを適用するには、 &lt;a href=&quot;https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#managing-github-actions-permissions-for-your-repository&quot;&gt;許可されたアクションと再利用可能なワークフロー&lt;/a&gt;、および&lt;a href=&quot;https://docs.github.com/actions/reference/security/secure-use#using-third-party-actions&quot;&gt;SHAピンニングの適用&lt;/a&gt;に関する更新されたドキュメントを参照してください。GitHub &lt;a href=&quot;https://wellarchitected.github.com/library/application-security/recommendations/actions-security&quot;&gt;Well-Architected Frameworkは、&lt;/a&gt;これらのポリシーとGitHub Actionsのセキュリティに関する推奨プラクティスを反映するように更新されました。&lt;/p&gt;
&lt;h3 id=&quot;roadmap&quot; id=&quot;roadmap&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#roadmap&quot;&gt;ロードマップ&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;オープンソースとGitHub Actionsエコシステムの強化は継続的な取り組みであり、GitHubはサプライチェーンのセキュリティ強化という目標に向けて、&lt;a href=&quot;https://github.com/github/roadmap/issues/1137&quot;&gt;不変リリース&lt;/a&gt;を導入しています。リリースが不変とマークされると、そのアセットとGitタグは変更または削除できなくなります。この機能は、検証可能なアーティファクトの整合性を保証するリリースアテステーションも追加し、保護ルールセットと統合することで、UIとAPIの両方のワークフローをサポートします。&lt;/p&gt;
&lt;p&gt; GitHub Actionsエコシステムにとってのメリットとしては、不変参照を持つタグをピン留めする機能、既存のタグへの悪意のある更新の防止、Dependabotによる信頼性の高い更新の実現などが挙げられます。ワークフローは信頼できる変更不可能なアセットを利用できるようになり、不変アーティファクトの使用により、デプロイメントパイプラインの安定性と再現性が向上します。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-15-github-actions-policy-now-supports-blocking-and-sha-pinning-actions&quot;&gt;GitHub Actions ポリシーがブロックおよび SHA ピンニング アクションをサポートするようになりましたという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90235</post-id></item><item><title>CodeQL が Kotlin サポートを拡張し、精度をさらに向上</title><link>https://github.blog/changelog/2025-08-14-codeql-expands-kotlin-support-and-additional-accuracy-improvements</link><dc:creator>Allison</dc:creator><pubDate>Thu, 14 Aug 2025 21:54:44 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-14-codeql-expands-kotlin-support-and-additional-accuracy-improvements</guid><description>&lt;p&gt;CodeQL is the static analysis engine behind GitHub code scanning, which finds and remediates security issues in your code. We&amp;#8217;ve recently released CodeQL 2.22.2 and 2.22.3, which expand Rust support,&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-14-codeql-expands-kotlin-support-and-additional-accuracy-improvements&quot;&gt;CodeQL expands Kotlin support and additional accuracy improvements&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; CodeQLは、 &lt;a href=&quot;https://docs.github.com/code-security/code-scanning/introduction-to-code-scanning/about-code-scanning-with-codeql&quot;&gt;GitHubコードスキャンを&lt;/a&gt;支える静的解析エンジンで、コード内のセキュリティ問題を検出し、修正します。先日、CodeQL 2.22.2と2.22.3をリリースしました。これらのバージョンでは、Rustのサポートが拡張され、フレームワークモデリングとクエリ精度が向上し、最新バージョンのKotlinがサポートされています。&lt;/p&gt;
&lt;h2 id=&quot;language-framework-support&quot; id=&quot;language-framework-support&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#language-framework-support&quot;&gt;言語とフレームワークのサポート&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Kotlin&lt;/strong&gt; : 分析で Kotlin 2.2.2x がサポートされるようになりました。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;React&lt;/strong&gt; : テイントは React の&lt;code&gt;use&lt;/code&gt;関数を通じてトレースされるようになり、React サーバー関数のパラメータがテイント ソースとして認識されるようになりました。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Rust&lt;/strong&gt; : Rust 言語サポートは &lt;a href=&quot;https://github.blog/changelog/2025-06-30-codeql-support-for-rust-now-in-public-preview/&quot;&gt;パブリック プレビュー&lt;/a&gt;のままですが、追加のセキュリティ問題と言語機能をサポートするように拡張されています。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;query-changes&quot; id=&quot;query-changes&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#query-changes&quot;&gt;クエリの変更&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;JavaScript&lt;/strong&gt; : JavaScript の 3 つのクエリが削除され、アクション QL パックの新しいクエリに置き換えられました。
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;js/actions/pull-request-target&lt;/code&gt; &lt;code&gt;actions/untrusted-checkout&lt;/code&gt;に置き換えられました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js/actions/actions-artifact-leak&lt;/code&gt; &lt;code&gt;actions/secrets-in-artifacts&lt;/code&gt;に置き換えられました&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js/actions/command-injection&lt;/code&gt; &lt;code&gt;actions/command-injection&lt;/code&gt;に置き換えられました&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;変更点の完全なリストについては、 &lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.22.2/&quot;&gt;CodeQL 2.22.2&lt;/a&gt;および&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/codeql-changelog/codeql-cli-2.22.3/&quot;&gt;CodeQL 2.22.3 の&lt;/a&gt;変更ログを参照してください。&lt;/p&gt;
&lt;p&gt; CodeQLの新しいバージョンは、github.comのGitHubコードスキャンユーザーに自動的にデプロイされます。これらの新しいCodeQL機能は、GitHub Enterprise Server（GHES）3.19に含まれます。古いバージョンのGHESをご利用の場合は、 &lt;a href=&quot;https://docs.github.com/enterprise-server@3.15/admin/managing-code-security/managing-github-advanced-security-for-your-enterprise/configuring-code-scanning-for-your-appliance#configuring-codeql-analysis-on-a-server-without-internet-access&quot;&gt;CodeQLのバージョンを手動でアップグレードできます&lt;/a&gt;。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-14-codeql-expands-kotlin-support-and-additional-accuracy-improvements&quot;&gt;CodeQL が Kotlin サポートを拡張し、精度をさらに向上させたという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90221</post-id></item><item><title>プルリクエストのレビュー担当者のステータスがより明確になり、メールフィルタリングが強化されました</title><link>https://github.blog/changelog/2025-08-14-clearer-pull-request-reviewer-status-and-enhanced-email-filtering</link><dc:creator>Allison</dc:creator><pubDate>Thu, 14 Aug 2025 20:27:11 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-14-clearer-pull-request-reviewer-status-and-enhanced-email-filtering</guid><description>&lt;p&gt;We&amp;#8217;re shipping two improvements today to help users better manage pull requests and stay on top of important conversations. Clearer distinctions for pull request reviewer status and approvals We&amp;#8217;ve enhanced&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-14-clearer-pull-request-reviewer-status-and-enhanced-email-filtering&quot;&gt;Clearer pull request reviewer status and enhanced email filtering&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;本日は、ユーザーがプル リクエストをより適切に管理し、重要な会話を常に把握できるようにするための 2 つの改善点をリリースします。 &lt;/p&gt;
&lt;h2 id=&quot;clearer-distinctions-for-pull-request-reviewer-status-and-approvals&quot; id=&quot;clearer-distinctions-for-pull-request-reviewer-status-and-approvals&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#clearer-distinctions-for-pull-request-reviewer-status-and-approvals&quot;&gt;プルリクエストのレビュー担当者のステータスと承認の明確な区別&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;色だけに頼らずにレビュー担当者のステータスを誰もが簡単に理解できるようにすることで、プル リクエスト (PR) レビュー プロセスのアクセシビリティを強化しました。&lt;/p&gt;
&lt;h3 id=&quot;whats-changed&quot; id=&quot;whats-changed&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-changed&quot;&gt;何が変わったのか&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以前は、レビュー担当者が書き込み権限を持っているか、読み取り専用／アクセス権がないかを緑と灰色のチェックマークで示していましたが、これらの色は区別が難しく、アクセシビリティ基準を満たしていませんでした。以下のアップデートがリリースされます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;承認がマージ要件に影響するレビュー担当者 (緑のチェックマークで表示) と GitHub Copilot は、保留中のレビューや変更リクエストとともに、サイドバーの「レビュー担当者」セクションの上部に表示されます。&lt;/li&gt;
&lt;li&gt;承認がマージ要件に影響を与えない可能性のあるその他のレビュー担当者 (灰色のチェックマークで表示) は、「+X 人のレビュー担当者」というラベルの付いた折りたたみ可能なセクションにグループ化されます。&lt;/li&gt;
&lt;li&gt;この折りたたみ可能なセクションにマウスを移動するとツールヒントが表示され、追加のコンテキストが提供されます。&lt;/li&gt;
&lt;li&gt; GitHub をどのように体験しても、ステータスが常に明確になるように、包括的なベスト プラクティスに沿った視覚的なヒントと説明ラベルを追加しました。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;additional-headers-added-to-email-notifications-for-better-filtering&quot; id=&quot;additional-headers-added-to-email-notifications-for-better-filtering&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#additional-headers-added-to-email-notifications-for-better-filtering&quot;&gt;フィルタリングを向上させるために、電子メール通知に追加のヘッダーが追加されました&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;問題とプル リクエストの通知のメール ヘッダーに、ラベル、担当者、マイルストーン、問題タイプが直接含まれるようになりました。&lt;/p&gt;
&lt;h3 id=&quot;whats-changed&quot; id=&quot;whats-changed&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-changed&quot;&gt;何が変わったのか&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ラベルと課題タイプは整理に不可欠ですが、これまではそれらを使って通知をフィルタリングする方法がありませんでした。そのため、多くのユーザーは重要な会話を把握するために複雑なメールフィルターに頼っていました。今回のアップデートでは、自動フィルタリング機能の強化とメタデータによる検索機能が追加され、チーム、プロジェクト、ワークフローに合わせてより効果的なメールフィルターを設定できるようになります。&lt;/p&gt;
&lt;p&gt;これらのヘッダーは、問題またはプル リクエストで設定されたフィールドに基づいて入力されますが、次のようなものが含まれる場合があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;code&gt;X-Github-Labels&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;X-Github-Assignees&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;X-Github-Milestone&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; &lt;code&gt;X-Github-Issuetype&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらのフィールドが問題またはプル リクエストに入力されていない場合は、電子メールでは空になるか非表示になります。&lt;/p&gt;
&lt;h3 id=&quot;feedback&quot; id=&quot;feedback&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#feedback&quot;&gt;フィードバック&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;私たちは常に改善を目指しており、皆さんからのフィードバックがその実現に役立ちます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; PR レビュー担当者のステータスの改善については、&lt;a href=&quot;https://github.com/orgs/community/discussions/169699&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;でご意見をお聞かせください。&lt;/li&gt;
&lt;li&gt;電子メール フィルタリングに関するフィードバックについては、&lt;a href=&quot;https://github.com/orgs/community/discussions/169627&quot;&gt;コミュニティ ディスカッションの&lt;/a&gt;会話にご参加ください。&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-14-clearer-pull-request-reviewer-status-and-enhanced-email-filtering&quot;&gt;より明確なプル リクエスト レビュアーのステータスと強化された電子メール フィルタリングに関する&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90217</post-id></item><item><title>GitHub Enterprise を使用した Visual Studio サブスクリプション向けの従量制 GitHub Enterprise 課金の導入</title><link>https://github.blog/changelog/2025-08-14-introducing-metered-github-enterprise-billing-for-visual-studio-subscriptions-with-github-enterprise</link><dc:creator>Allison</dc:creator><pubDate>Thu, 14 Aug 2025 16:54:53 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-14-introducing-metered-github-enterprise-billing-for-visual-studio-subscriptions-with-github-enterprise</guid><description>&lt;p&gt;Scaling your GitHub usage just got easier. Customers on the Visual Studio subscriptions with GitHub Enterprise bundle now have the option to transition to pay-as-you-go, usage-based billing for GitHub Enterprise&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-14-introducing-metered-github-enterprise-billing-for-visual-studio-subscriptions-with-github-enterprise&quot;&gt;Introducing metered GitHub Enterprise billing for Visual Studio subscriptions with GitHub Enterprise&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; GitHub の利用拡大がさらに簡単になりました。GitHub &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/billing/managing-billing-for-your-products/managing-licenses-for-visual-studio-subscriptions-with-github-enterprise/about-visual-studio-subscriptions-with-github-enterprise&quot;&gt;Enterprise バンドル付きの Visual Studio サブスクリプション&lt;/a&gt;をご利用のお客様は&lt;a href=&quot;https://resources.github.com/metered-billing/&quot;&gt;、GitHub Enterprise (GHE) を従量課金制の使用量ベースの課金システムに移行できるように&lt;/a&gt;なりました。&lt;/p&gt;
&lt;p&gt;これにより、GHE の使用量ベースの課金の柔軟性が得られると同時に、管理者にはライセンスの割り当てとコンプライアンスを管理するための強化されたツールが提供されます。&lt;/p&gt;
&lt;h3 id=&quot;whats-new&quot; id=&quot;whats-new&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-new&quot;&gt;新着情報&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Visual Studio バンドルのエンタープライズ管理者は&lt;strong&gt;、[課金とライセンス] &gt; [ライセンス] &gt; [エンタープライズ クラウド] &gt; [管理]&lt;/strong&gt;でライセンスの割り当てをより細かく管理できるため、次の操作を実行できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; GHE のみの消費に対して従量課金制を活用し、ライセンス タイプ別の使用状況の可視性を向上させます。&lt;/li&gt;
&lt;li&gt;自動化された電子メール照合を使用し、必要に応じて手動で不一致を修正することで、コンプライアンス監査を簡素化します。&lt;/li&gt;
&lt;li&gt;新しいパブリック API を介してライセンスの割り当てとユーザーのマッチングを自動化します (登録についてはアカウント チームにお問い合わせください)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-it-works&quot; id=&quot;how-it-works&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#how-it-works&quot;&gt;仕組み&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;既定では、Visual Studio サブスクライバーと一致する電子メールを持つ企業に追加された新しいユーザーは、従量制の Enterprise ライセンスを消費しません。&lt;/li&gt;
&lt;li&gt; Visual Studio と GitHub Enterprise のライセンス割り当てが完全に割り当てられている場合、追加ユーザーにはデフォルトで GHE のみのメータリングが適用されます。&lt;/li&gt;
&lt;li&gt;新しいライセンス ビューを使用すると、管理者は GitHub ユーザー アカウントを監査し、対応する Visual Studio サブスクライバーと連携させることができます。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;availability&quot; id=&quot;availability&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#availability&quot;&gt;可用性&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;このリリースは、今後数日間で段階的に展開され、現在は github.com でのみ利用可能ですが、GitHub のデータ保存地域へのサポートを拡張する予定です。&lt;/li&gt;
&lt;li&gt;既存のVisual Studio with GitHub Enterpriseサブスクリプションプランをご利用のお客様は、更新時に新しいモデルへの移行を選択できます。サポートが必要な場合は、GitHubまたはMicrosoftアカウントチームにお問い合わせください。&lt;/li&gt;
&lt;li&gt;新しい API を使用して Visual Studio と GitHub Enterprise ライセンス間のユーザー マッピングを自動化することにご興味がある場合は、アカウント チームに問い合わせて登録してください。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; GitHub Enterprise を使用した Visual Studio サブスクリプションの詳細については、 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/billing/managing-billing-for-your-products/managing-licenses-for-visual-studio-subscriptions-with-github-enterprise/about-visual-studio-subscriptions-with-github-enterprise&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;h3 id=&quot;feedback&quot; id=&quot;feedback&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#feedback&quot;&gt;フィードバック&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;フィードバックを提供したり、質問したり、既知の問題の一覧を確認したりするには、GitHub コミュニティの&lt;a href=&quot;https://github.com/orgs/community/discussions/163962&quot;&gt;フィードバック ディスカッション&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-14-introducing-metered-github-enterprise-billing-for-visual-studio-subscriptions-with-github-enterprise&quot;&gt;GitHub Enterprise を使用した Visual Studio サブスクリプション向けの従量制 GitHub Enterprise 課金の導入に関する&lt;/a&gt;記事が、最初に&lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90214</post-id></item><item><title>JetBrains、Eclipse、Xcode 向けのモデル コンテキスト プロトコル (MCP) サポートが一般提供されました</title><link>https://github.blog/changelog/2025-08-13-model-context-protocol-mcp-support-for-jetbrains-eclipse-and-xcode-is-now-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Thu, 14 Aug 2025 10:35:58 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-13-model-context-protocol-mcp-support-for-jetbrains-eclipse-and-xcode-is-now-generally-available</guid><description>&lt;p&gt;Model Context Protocol (MCP) support with GitHub Copilot is now generally available for JetBrains, Eclipse, and Xcode! MCP empowers GitHub Copilot to integrate with external tools and data sources, enhancing&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-13-model-context-protocol-mcp-support-for-jetbrains-eclipse-and-xcode-is-now-generally-available&quot;&gt;Model Context Protocol (MCP) support for JetBrains, Eclipse, and Xcode is now generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; GitHub Copilot の Model Context Protocol (MCP) サポートが、JetBrains、Eclipse、Xcode で一般提供されました。MCP により、GitHub Copilot は外部ツールやデータソースと統合できるようになり、より深いコンテキスト認識とコーディング インテリジェンスが強化されます。&lt;/p&gt;
&lt;p&gt; JetBrains、Eclipse、Xcode の MCP サポートにより、Copilot を MCP 仕様に準拠したローカルおよびリモートの MCP サーバーに接続できます。接続後は、エージェントモードでこれらのサーバーが公開するツールを活用し、より幅広いタスクを支援できます。例えば、PAT または OAuth 認証を使用してリモート GitHub MCP サーバーを設定し、課題の作成、リポジトリ履歴の確認、GitHub の検索などのアクションを有効にできます。&lt;/p&gt;
&lt;p&gt;組織およびエンタープライズ管理者の場合、MCPへのアクセスはCopilotポリシー内のMCPサーバーによって制御されます。MCPポリシーは&lt;strong&gt;デフォルトで無効になっており&lt;/strong&gt;、 &lt;a href=&quot;https://docs.github.com/copilot/how-tos/administer-copilot/manage-for-organization/manage-policies&quot;&gt;組織またはエンタープライズ管理者が有効にする&lt;/a&gt;必要があります。&lt;/p&gt;
&lt;h2 id=&quot;try-it-out&quot; id=&quot;try-it-out&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#try-it-out&quot;&gt;試してみる&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;MCPを使用するには、JetBrains、 &lt;a href=&quot;https://marketplace.eclipse.org/content/github-copilot&quot;&gt;Eclipse&lt;/a&gt; 、または&lt;a href=&quot;https://github.com/github/CopilotForXcode&quot;&gt;Xcode&lt;/a&gt;&lt;a href=&quot;https://plugins.jetbrains.com/plugin/17718-github-copilot&quot;&gt;用の最新のGitHub Copilotプラグイン&lt;/a&gt;をインストールしてください。また、有効な&lt;a href=&quot;https://github.com/features/copilot&quot;&gt;Copilotライセンス&lt;/a&gt;も必要です。以下のガイドに従って開始してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://aka.ms/copilot-jb-mcp&quot;&gt;JetBrains IDE&lt;/a&gt;でMCPサーバーを構成する&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aka.ms/copilot-ecl-mcp&quot;&gt;Eclipse&lt;/a&gt;でMCPサーバーを構成する&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aka.ms/copilot-xd-mcp&quot;&gt;Xcode&lt;/a&gt;でMCPサーバーを構成する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;share-your-feedback&quot; id=&quot;share-your-feedback&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#share-your-feedback&quot;&gt;フィードバックを共有する&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;皆様からのフィードバックをお待ちしております。以下のチャンネルからご意見をお聞かせください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://github.com/microsoft/copilot-intellij-feedback/issues&quot;&gt;JetBrains IDE 向け GitHub Copilot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/151288&quot;&gt;Eclipse フィードバック用の GitHub Copilot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://github.com/github/CopilotForXcode/issues&quot;&gt;Xcode フィードバック用の GitHub Copilot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-13-model-context-protocol-mcp-support-for-jetbrains-eclipse-and-xcode-is-now-generally-available&quot;&gt;JetBrains、Eclipse、Xcode の Model Context Protocol (MCP) サポートが一般提供開始になりましたという記事が、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90210</post-id></item><item><title>問題、プルリクエスト、ディスカッション全体での添付ファイルのファイルタイプのサポートを拡張しました</title><link>https://github.blog/changelog/2025-08-13-expanded-file-type-support-for-attachments-across-issues-pull-requests-and-discussions</link><dc:creator>Allison</dc:creator><pubDate>Thu, 14 Aug 2025 07:00:31 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-13-expanded-file-type-support-for-attachments-across-issues-pull-requests-and-discussions</guid><description>&lt;p&gt;Screen recording showing how to upload new file types as attachments in GitHub issues. You can now upload a wider range of file types to issues, pull requests, discussions, and&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-13-expanded-file-type-support-for-attachments-across-issues-pull-requests-and-discussions&quot;&gt;Expanded file type support for attachments across issues, pull requests, and discussions&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;video src=&quot;https://github.com/user-attachments/assets/e2f18711-6894-425a-b581-e3e065a29d11&quot; width=&quot;100%&quot; autoplay muted loop controls&gt;

 GitHub の問題に新しいファイル タイプを添付ファイルとしてアップロードする方法を示した画面録画。

&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;より幅広いファイルタイプを問題、プル リクエスト、ディスカッション、コメントにアップロードできるようになり、コード、データ、ログなどを簡単に共有できるようになりました。&lt;/p&gt;
&lt;p&gt;新しくサポートされるファイルの種類は次のとおりです:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コードとデータ (.py、.yaml、.yml、.css、.xml、.html、.htm、.js、.sql、.java、.c、.cpp、.sh、.php、.ts、.tsx、.cs、.ipynb、.pdb、.xlsm、.tsv、.drawio、.bin)&lt;/li&gt;
&lt;li&gt;ドキュメント（.rtf、.doc）&lt;/li&gt;
&lt;li&gt;テキストと電子メール (.debug、.msg、.eml、.copilotmd)&lt;/li&gt;
&lt;li&gt;画像（.bmp、.tif、.tiff）&lt;/li&gt;
&lt;li&gt;オーディオ（.mp3、.wav）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/get-started/writing-on-github/working-with-advanced-formatting/attaching-files&quot;&gt;GitHub のドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;h3 id=&quot;feedback&quot; id=&quot;feedback&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#feedback&quot;&gt;フィードバック&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;これらのアップデートに関してご提案やフィードバックがある場合、または問題が発生した場合は、 &lt;a href=&quot;https://github.com/orgs/community/discussions/169478&quot;&gt;GitHub コミュニティのディスカッション&lt;/a&gt;にご参加ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-13-expanded-file-type-support-for-attachments-across-issues-pull-requests-and-discussions&quot;&gt;問題、プル リクエスト、ディスカッション全体にわたる添付ファイルのファイル タイプ サポートの拡張に関する&lt;/a&gt;記事が、 &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90206</post-id></item><item><title>Copilot ユーザー管理 API に last_authenticated_at を追加しました</title><link>https://github.blog/changelog/2025-08-13-added-last_authenticated_at-to-the-copilot-user-management-api</link><dc:creator>Allison</dc:creator><pubDate>Wed, 13 Aug 2025 21:51:19 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-08-13-added-last_authenticated_at-to-the-copilot-user-management-api</guid><description>&lt;p&gt;We added the field last_authenticated_at to the Copilot user management API. It provides the UTC timestamp of a user&amp;#8217;s most recent authentication. Previously, you could only access this field via&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-08-13-added-last_authenticated_at-to-the-copilot-user-management-api&quot;&gt;Added last_authenticated_at to the Copilot user management API&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; &lt;a href=&quot;https://docs.github.com/rest/copilot/copilot-user-management?apiVersion=2022-11-28#list-all-copilot-seat-assignments-for-an-organization&quot;&gt;Copilot ユーザー管理 API&lt;/a&gt;に&lt;code&gt;last_authenticated_at&lt;/code&gt;フィールドを追加しました。このフィールドは、ユーザーの最新の認証時の UTC タイムスタンプを提供します。以前は、このフィールドはアクティビティレポートのCSVからのみアクセス可能でした。今回のアップデートでは、機能の整合性を確保し、API から直接最終認証タイムスタンプを取得できるようにしました。このアップデートでは、API スキーマに大きな変更はありません。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-08-13-added-last_authenticated_at-to-the-copilot-user-management-api&quot;&gt;Copilot ユーザー管理 API に last_authenticated_at を追加しましたという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">90174</post-id></item></channel></rss>