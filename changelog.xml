<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Thu, 06 Mar 2025 21:54:50 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.7.2</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>Visual Studio Code 2 月リリース (v0.25) の GitHub Copilot 更新には、エージェント モードと次の終了提案の改善、カスタム命令の一般提供などが含まれます。</title><link>https://github.blog/changelog/2025-03-06-github-copilot-updates-in-visual-studio-code-february-release-v0-25-including-improvements-to-agent-mode-and-next-exit-suggestions-ga-of-custom-instructions-and-more</link><dc:creator>Allison</dc:creator><pubDate>Thu, 06 Mar 2025 21:00:55 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-06-github-copilot-updates-in-visual-studio-code-february-release-v0-25-including-improvements-to-agent-mode-and-next-exit-suggestions-ga-of-custom-instructions-and-more</guid><description>&lt;p&gt;GitHub Copilot updates in Visual Studio Code February Release (v0.25), including improvements to agent mode and Next Exit Suggestions, GA of custom instructions, and more!&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-06-github-copilot-updates-in-visual-studio-code-february-release-v0-25-including-improvements-to-agent-mode-and-next-exit-suggestions-ga-of-custom-instructions-and-more&quot;&gt;GitHub Copilot updates in Visual Studio Code February Release (v0.25), including improvements to agent mode and Next Exit Suggestions, general availability of custom instructions, and more!&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;コパイロット機能はさまざまな早期アクセス段階を経ることができ、通常は設定を通じて有効化および構成されます。考えられるステージは次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;実験的&lt;/strong&gt;: この機能はまだ開発中であり、一般使用の準備はまだ整っていません。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;プレビュー&lt;/strong&gt;: この機能はまだ改良中ですが、すぐに使用できます。フィードバックをお寄せください。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安定版&lt;/strong&gt;: この機能は一般的に使用できる状態です。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;copilot-edits&quot;&gt;副操縦士の編集&lt;a href=&quot;#copilot-edits&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Copilot Edits&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;experimental-agent-mode-improvements&quot;&gt;実験的なエージェント モードの改善&lt;a href=&quot;#experimental-agent-mode-improvements&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Experimental agent mode improvements&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;先月、 &lt;a href=&quot;https://code.visualstudio.com/insiders/&quot;&gt;VS Code Insiders&lt;/a&gt;での Copilot Edits の&lt;em&gt;エージェント モード&lt;/em&gt;を導入しました。エージェント モードでは、Copilot はワークスペースで関連するコンテキストを自動的に検索し、ファイルを編集してエラーをチェックし、(ユーザーの許可を得て) ターミナル コマンドを実行してタスクをエンドツーエンドで完了します。&lt;/p&gt;
&lt;p&gt;エージェント モードは現在、 &lt;a href=&quot;https://code.visualstudio.com/insiders/&quot;&gt;VS Code Insiders&lt;/a&gt;で利用可能であり、 &lt;strong&gt;VS Code Stable&lt;/strong&gt;で段階的にロールアウトし始めたところです。エージェント モードを有効にすると、[Copilot Edits] ビューにモード ドロップダウンが表示されます。 &lt;strong&gt;[Agent]&lt;/strong&gt;を選択するだけです。&lt;/p&gt;
&lt;p&gt;今月、ツール使用の UX にいくつかの改善を加えました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ターミナルコマンドがインラインで表示されるようになったため、実行されたコマンドを追跡できます。&lt;/li&gt;
&lt;li&gt;チャット応答で提案されたターミナル コマンドを実行する前に編集できます。&lt;/li&gt;
&lt;li&gt;ターミナルコマンドは&lt;code&gt;kb(workbench.action.chat.acceptTool)&lt;/code&gt;ショートカットで確認できます。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/045fd127-3fd1-46ec-bc8b-a6976622e18b&quot; title=&quot;チャットでの推奨ターミナル コマンドの編集を示すビデオ。&quot; loop controls autoplay muted&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;エージェント モードは、コードベースを自律的に検索して関連するコンテキストを探します。メッセージを展開すると、実行された検索の結果が表示されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/b6e65024-8a2d-40ff-8f25-97a87e9fbd91&quot; alt=&quot;Copilot Edits での検索結果の展開可能なリストを示すスクリーンショット。&quot; /&gt;&lt;/p&gt;
&lt;p&gt;また、エージェント モードのプロンプトと動作にさまざまな改善を加えました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;チャットの「元に戻す」および「やり直し」アクションにより、チャット応答で行われた最後のファイル編集が元に戻されるか、またはやり直しられるようになりました。これは、チャット応答全体をロールバックせずにモデルが実行した特定の手順を元に戻すことができるため、エージェント モードで役立ちます。&lt;/li&gt;
&lt;li&gt;エージェント モードでは、ビルド&lt;a href=&quot;https://code.visualstudio.com/docs/editor/tasks&quot;&gt;タスクを&lt;/a&gt;自動的に、または指示されたときに実行できるようになりました。モデルがタスクを実行すべきでないときにタスクを実行する場合は&lt;code&gt;setting(github.copilot.chat.agent.runTasks)&lt;/code&gt;を使用してこの機能を無効にできます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://code.visualstudio.com/docs/copilot/copilot-edits#_use-agent-mode-preview&quot;&gt;Copilot Edits エージェント モード&lt;/a&gt;の詳細については、&lt;a href=&quot;https://code.visualstudio.com/blogs/2025/02/24/introducing-copilot-agent-mode&quot;&gt;エージェント モードに関するお知らせのブログ投稿を&lt;/a&gt;ご覧ください。&lt;/p&gt;
&lt;p&gt; Copilot Business または Enterprise ユーザーの場合、エージェント モードを利用するには、組織の管理者が「エディター プレビュー機能」を&lt;a href=&quot;https://docs.github.com/en/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-policies-for-copilot-in-your-organization#enabling-copilot-features-in-your-organization&quot;&gt;オプトインする必要があります&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;notebook-support-in-copilot-edits-in-preview&quot;&gt; Copilot でのノートブックのサポート プレビューでの編集&lt;a href=&quot;#notebook-support-in-copilot-edits-in-preview&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Notebook support in Copilot Edits in preview&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; Copilot を使用して、コード ファイルを編集するのと同じ直感的なエクスペリエンスでノートブック ファイルを編集できるようになりました。新しいノートブックを最初から作成し、複数のセルの内容を変更し、セルを挿入および削除し、セルの種類を変更します。このプレビュー機能は、データ サイエンスやドキュメント ノートブックを使用する際のシームレスなワークフローを提供します。&lt;/p&gt;
&lt;p&gt; Copilot で最高のノートブック編集エクスペリエンスを得るには&lt;a href=&quot;https://code.visualstudio.com/insiders/&quot;&gt;、VS Code Insiders&lt;/a&gt;と GitHub Copilot Chat のプレリリース バージョンを使用することをお勧めします。 &lt;/p&gt;
&lt;p&gt;&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/e097ade5-8cc5-4a70-98c0-0ce16d4dacd4&quot; title=&quot;Copilot Edits を使用してノートブックを変更するビデオ。&quot; loop controls autoplay muted&gt;&lt;/video&gt;&lt;/p&gt;
&lt;h4 id=&quot;refined-editor-integration&quot;&gt;洗練されたエディターの統合&lt;a href=&quot;#refined-editor-integration&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Refined editor integration&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; Copilot Edits とコード エディターおよびノー​​トブック エディターの統合を洗練しました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ビューポートは所定の位置に留まるため、変更の適用中に変更内容に注目しやすくなります。&lt;/li&gt;
&lt;li&gt;編集レビューのアクションは、何が起こっているかをより適切に反映するために「維持」と「元に戻す」になりました。コパイロットの編集は、ユーザーが変更を保持または元に戻すときに、これらの変更を適用して保存します。&lt;/li&gt;
&lt;li&gt;ファイルへの変更を保持または元に戻すと、次のファイルが自動的に表示されます。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/af064422-5757-43fc-926a-e011ecc75466&quot; title=&quot;Copilot の編集による変更が自動的に保存され、ユーザーが変更を保存することにしたことを示すビデオ。&quot; loop controls autoplay muted&gt;&lt;/video&gt;&lt;/p&gt;
&lt;h4 id=&quot;refreshed-ui&quot;&gt;刷新されたUI &lt;a href=&quot;#refreshed-ui&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Refreshed UI&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;添付されているがまだ送信されていないファイルは、通常のチャット添付ファイルとして表示されるようになりました。 AI で変更されたファイルのみが変更されたファイルのリストに追加されます。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;setting(chat.renderRelatedFiles)&lt;/code&gt;を使用すると、関連ファイルの提案を取得できるようになります。関連ファイルの提案がチャットの添付ファイルの下に表示されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/9d9261dc-ee2b-4100-aa8d-e6fba1caea24&quot; alt=&quot;更新された Copilot Edits 添付ファイルと変更されたファイルのユーザー エクスペリエンスを示すスクリーンショット。&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;removed-copilot-edits-limits&quot;&gt;コパイロットの編集制限を削除しました&lt;a href=&quot;#removed-copilot-edits-limits&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Removed Copilot Edits limits&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; Copilot Edits プロンプトに添付できるファイル数の制限とクライアント側のレート制限を削除しました。&lt;/p&gt;
&lt;p&gt;サービス側の使用率制限は引き続き適用されることに注意してください。&lt;/p&gt;
&lt;h3 id=&quot;custom-instructions-generally-available&quot;&gt;カスタム手順の一般提供が開始されました&lt;a href=&quot;#custom-instructions-generally-available&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Custom instructions generally available&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;カスタム手順を使用すると、GitHub Copilot を調整して、あなたとあなたのチームの作業方法に合わせてチャットの応答やコードの提案を提供できます。ワークスペースの&lt;code&gt;.github/copilot-instructions.md&lt;/code&gt;ファイルに特定の要件を記述し、 &lt;code&gt;setting(github.copilot.chat.codeGeneration.useInstructionFiles)&lt;/code&gt;で有効にします。&lt;/p&gt;
&lt;p&gt;カスタム命令は一般に&lt;code&gt;.github/copilot-instructions.md&lt;/code&gt;で入手できます。 Copilot が応答を生成するときにこれらの命令を使用できるようにするには、 &lt;code&gt;setting(github.copilot.chat.codeGeneration.useInstructionFiles)&lt;/code&gt; VS Code 設定が有効になっていることを確認してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://code.visualstudio.com/docs/copilot/copilot-customization&quot;&gt;Copilot のカスタム命令&lt;/a&gt;について詳しくは、こちらをご覧ください。&lt;/p&gt;
&lt;h3 id=&quot;smoother-authentication-flows-in-chat&quot;&gt;チャットでの認証フローがスムーズに&lt;a href=&quot;#smoother-authentication-flows-in-chat&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Smoother authentication flows in chat&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; GitHub リポジトリでソース コードをホストすると、高度なコード検索、 &lt;code&gt;@github&lt;/code&gt;チャット参加者など、いくつかの機能を利用できます。&lt;/p&gt;
&lt;p&gt;ただし、プライベート GitHub リポジトリの場合、VS Code は GitHub 上のリポジトリと対話するためのアクセス許可を持っている必要があります。しばらくの間、これは通常の VS Code 認証フローで行われ、特定の機能を呼び出すとモーダル ダイアログが表示されました (たとえば、 &lt;code&gt;@workspace&lt;/code&gt;または&lt;code&gt;@github&lt;/code&gt;に質問する、または&lt;code&gt;#codebase&lt;/code&gt;ツールを使用する)。&lt;/p&gt;
&lt;p&gt;このエクスペリエンスをよりスムーズにするために、チャットに次の確認を導入しました。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/1c622be7-b815-41f2-8785-bb5e75258639&quot; alt=&quot;続行するための 3 つのオプションを示す、チャットの認証確認ダイアログを示すスクリーンショット。&quot; /&gt;&lt;/p&gt;
&lt;p&gt;モーダル ダイアログほど不快ではないだけでなく、新しい機能もあります。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Grant:&lt;/strong&gt;以前と同様に、通常の認証フロー (モーダル経由) が行われます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;今はやめましょう:&lt;/strong&gt; VS Code はあなたの選択を記憶しており、次回の VS Code ウィンドウ セッションまで再び煩わされることはありません。唯一の例外は、 &lt;code&gt;@github&lt;/code&gt;のように、機能が機能するためにこの追加の権限が必要な場合です。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;二度と質問しない:&lt;/strong&gt; VS Code は選択を記憶し、 &lt;code&gt;setting(github.copilot.advanced.authPermissions)&lt;/code&gt;設定に記録します。この追加の権限を必要とする機能は失敗します。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;この確認は、Copilot (サービス) のリポジトリへのアクセスを確認または拒否するものではないことに注意することが重要です。これは、VS Code の Copilot エクスペリエンスが認証する方法にすぎません。 Copilot がアクセスできる対象を構成するには、 &lt;a href=&quot;https://docs.github.com/en/copilot/managing-copilot/configuring-and-auditing-content-exclusion/excluding-content-from-github-copilot&quot;&gt;コンテンツの除外に関するドキュメント&lt;/a&gt;をお読みください。&lt;/p&gt;
&lt;h3 id=&quot;more-advanced-codebase-search-in-copilot-chat&quot;&gt; Copilot Chat でのより高度なコードベース検索&lt;a href=&quot;#more-advanced-codebase-search-in-copilot-chat&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;More advanced codebase search in Copilot Chat&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;code&gt;#codebase&lt;/code&gt; Copilot チャット クエリに追加すると、Copilot はワークスペース内でチャット プロンプトに関連するコードを見つけるのに役立ちます。 &lt;code&gt;#codebase&lt;/code&gt;では、テキスト検索やファイル検索などのツールを実行して、ワークスペースから追​​加のコンテキストを取得できるようになりました。&lt;/p&gt;
&lt;p&gt;この動作を有効にするには、 &lt;code&gt;setting(github.copilot.chat.codesearch.enabled)&lt;/code&gt;を設定します。ツールの完全なリストは次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;埋め込みベースのセマンティック検索&lt;/li&gt;
&lt;li&gt;テキスト検索&lt;/li&gt;
&lt;li&gt;ファイル検索&lt;/li&gt;
&lt;li&gt;Gitで変更されたファイル&lt;/li&gt;
&lt;li&gt;プロジェクトの構造&lt;/li&gt;
&lt;li&gt;ファイルの読み取り&lt;/li&gt;
&lt;li&gt;ディレクトリの読み取り&lt;/li&gt;
&lt;li&gt;ワークスペースシンボルの検索&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;attach-problems-as-chat-context&quot;&gt;問題をチャット コンテキストとして添付する&lt;a href=&quot;#attach-problems-as-chat-context&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Attach problems as chat context&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ワークスペース内のコードやその他の問題の修正に役立つように、プロンプトのコンテキストとして問題パネルから問題をチャットに添付できるようになりました。&lt;/p&gt;
&lt;p&gt; [問題] パネルから項目をチャット ビューにドラッグするか、プロンプトに&lt;code&gt;#problems&lt;/code&gt;と入力するか、ペーパークリップを選択します。 &lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f4ce.png&quot; alt=&quot;📎&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;ボタン。特定の問題、ファイル内のすべての問題、またはコードベース内のすべてのファイルを添付できます。&lt;/p&gt;
&lt;h3 id=&quot;attach-folders-as-context&quot;&gt;フォルダーをコンテキストとして添付する&lt;a href=&quot;#attach-folders-as-context&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Attach folders as context&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以前は、エクスプローラー ビューからドラッグ アンド ドロップを使用してフォルダーをコンテキストとしてアタッチできました。ペーパークリップを選択してフォルダーを添付することもできます。 &lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f4ce.png&quot; alt=&quot;📎&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;アイコンをクリックするか、チャット プロンプトで&lt;code&gt;#folder:&lt;/code&gt;に続いてフォルダー名を入力します。&lt;/p&gt;
&lt;h3 id=&quot;collapsed-mode-for-next-edit-suggestions-in-preview&quot;&gt;プレビューでの次の編集候補の折りたたみモード&lt;a href=&quot;#collapsed-mode-for-next-edit-suggestions-in-preview&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Collapsed mode for Next Edit Suggestions in preview&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; NES に折りたたみモードを追加しました。このモードを有効にすると、NES 提案インジケーターのみがエディターの左マージンに表示されます。コード提案自体は&lt;code&gt;kb(editor.action.inlineSuggest.jump)&lt;/code&gt;を押してそのコードに移動した場合にのみ表示されます。提案が受け入れられないまで、連続した提案がすぐに表示されます。 &lt;/p&gt;
&lt;p&gt;&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/f6aab6c3-0565-4ed7-bbbb-9550328358e1&quot; title=&quot;次の編集候補の折りたたみモードを示すビデオ。&quot; loop controls autoplay muted&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;折りたたみモードはデフォルトでは無効になっており、 &lt;code&gt;setting(editor.inlineSuggest.edits.showCollapsed:true)&lt;/code&gt;を構成することで有効にするか、NES ガター インジケーター メニューで切り替えることができます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/77484e3a-2bed-43ce-a294-a6c7316ce810&quot; alt=&quot;エディターの左マージンにある「次の編集候補」コンテキスト メニューが表示され、「折りたたまれて表示」オプションが強調表示されているスクリーンショット。&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;change-completions-model&quot;&gt;変更完了モデル&lt;a href=&quot;#change-completions-model&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Change completions model&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;コマンド パレットの&lt;strong&gt;[補完モデルの変更] コマンド&lt;/strong&gt;、またはタイトル バーの [コパイロット] メニューの&lt;strong&gt;[コード補完の構成]&lt;/strong&gt;項目を使用して、コード補完を提供するモデルを変更できるようになりました。&lt;/p&gt;
&lt;p&gt; Copilot Business または Enterprise ユーザーの場合、管理者は、github.com の&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-policies-for-copilot-in-your-organization#enabling-copilot-features-in-your-organization&quot;&gt;Copilot ポリシー設定&lt;/a&gt;で&lt;code&gt;Editor Preview Features&lt;/code&gt;をオプトインして、組織の特定のモデルを有効にする必要があります。&lt;/p&gt;
&lt;h3 id=&quot;model-availability&quot;&gt;モデルの入手可能性&lt;a href=&quot;#model-availability&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Model availability&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;このリリースでは、Copilot の使用時に選択できるモデルがさらに追加されました。次のモデルが、Visual Studio Code のモデル ピッカーと github.com の Copilot Chat で利用できるようになりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;GPT 4.5 (プレビュー)&lt;/strong&gt; : OpenAI の最新モデル GPT-4.5 が、Copilot Enterprise ユーザー向けの GitHub Copilot Chat で利用できるようになりました。 GPT-4.5 は、直観力、書き方、幅広い知識における高度な機能を備えて設計された大規模な言語モデルです。 GPT-4.5 モデルの利用可能性について詳しくは&lt;a href=&quot;https://github.blog/changelog/2025-02-27-openai-gpt-4-5-in-github-copilot-now-available-in-public-preview&quot;&gt;、GitHub ブログ投稿&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; &lt;strong&gt;Claude 3.7 Sonnet&lt;/strong&gt; : Claude 3.7 Sonnet は、有料 Copilot プランのすべての顧客を対象にプレビュー中です。この新しい Sonnet モデルは、Copilot の思考モードと非思考モードの両方をサポートします。初期テストでは、エージェント シナリオで特に大きな改善が見られました。 Claude 3.7 Sonnet モデルの可用性について詳しくは&lt;a href=&quot;https://github.blog/changelog/2025-02-24-claude-3-7-sonnet-is-now-available-in-github-copilot-in-public-preview/&quot;&gt;、GitHub ブログ投稿&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;copilot-vision-in-preview&quot;&gt; Copilot Vision のプレビュー&lt;a href=&quot;#copilot-vision-in-preview&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Copilot Vision in preview&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;このバージョンの Copilot Chat では、エンドツーエンドの Copilot Vision サポートを迅速に展開しています。これにより、画像を添付したり、チャット プロンプトで画像を操作したりできるようになります。たとえば、デバッグ中にエラーが発生した場合は、VS Code のスクリーンショットを添付し、Copilot に問題の解決を手伝ってもらいます。これを使用して UI モックアップを添付し、Copilot にモックアップを実装するための HTML と CSS を提供させることもできます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/5c7e460e-1269-449d-aff0-616d2eee53b3&quot; alt=&quot;Copilot Chat プロンプトに添付された画像を表示するアニメーション。画像の上にマウスを置くと、そのプレビューが表示されます。&quot; /&gt;&lt;/p&gt;
&lt;p&gt;画像は複数の方法で添付できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; OS またはエクスプローラー ビューから画像をドラッグ アンド ドロップします。&lt;/li&gt;
&lt;li&gt;クリップボードから画像を貼り付けます&lt;/li&gt;
&lt;li&gt;VS Code ウィンドウのスクリーンショットを添付します (&lt;strong&gt;クリップ&lt;/strong&gt;を選択します) &lt;strong&gt;&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f4ce.png&quot; alt=&quot;📎&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;ボタン&lt;/strong&gt;&gt;&lt;strong&gt;スクリーンショット ウィンドウ&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;選択したモデルに現在そのファイル タイプを処理する機能がない場合は、警告が表示されます。現在画像をサポートしているモデルは&lt;code&gt;GPT 4o&lt;/code&gt;のみです。 &lt;code&gt;JPEG/JPG&lt;/code&gt; 、 &lt;code&gt;PNG&lt;/code&gt; 、 &lt;code&gt;GIF&lt;/code&gt; 、および&lt;code&gt;WEBP&lt;/code&gt;画像タイプを指定できます。 &lt;code&gt;Claude 3.5 Sonnet&lt;/code&gt;と&lt;code&gt;Gemini 2.0 Flash&lt;/code&gt;も間もなくイメージをサポートする予定です。&lt;/p&gt;
&lt;h3 id=&quot;experimental-copilot-status-overview&quot;&gt;実験用副操縦士のステータスの概要&lt;a href=&quot;#experimental-copilot-status-overview&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Experimental Copilot status overview&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;私たちは、コパイロットのステータスと主要なエディタ設定の概要を簡単に提供する、新しい一元的なコパイロット ステータスの概要を実験中です。 Copilot ステータスの概要は&lt;code&gt;setting(chat.experimental.statusIndicator.enabled)&lt;/code&gt;設定で有効にできます。これには次の変更が含まれます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://code.visualstudio.com/blogs/2024/12/18/free-github-copilot&quot;&gt;Copilot Free&lt;/a&gt;ユーザーの場合のクォータ情報&lt;/li&gt;
&lt;li&gt;コード補完などのエディター関連の設定&lt;/li&gt;
&lt;li&gt;他の Copilot 機能を使用するための便利なキーボード ショートカット&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このコパイロットのステータス概要には、ステータス バーのコパイロット アイコンからアクセスできます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/6e29df96-77f0-4ac2-b722-abe10a8a99f5&quot; alt=&quot;ステータス バーに Copilot ステータスの概要を示すスクリーンショット。&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;experimental-typescript-context-for-inline-completions&quot;&gt;インライン補完用の実験的な TypeScript コンテキスト&lt;a href=&quot;#experimental-typescript-context-for-inline-completions&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Experimental TypeScript context for inline completions&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;私たちは、インライン補完の拡張コンテキストと TypeScript ファイルの&lt;code&gt;/fix&lt;/code&gt;コマンドを実験しています。現在、実験は Insider リリースに限定されており、 &lt;code&gt;setting(chat.languageContext.typescript.enabled)&lt;/code&gt;設定で有効にすることができます。&lt;/p&gt;
&lt;h3 id=&quot;custom-instructions-for-pull-request-title-and-description&quot;&gt;プル リクエストのタイトルと説明のカスタム手順&lt;a href=&quot;#custom-instructions-for-pull-request-title-and-description&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Custom instructions for pull request title and description&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;設定&lt;code&gt;setting(github.copilot.chat.pullRequestDescriptionGeneration.instructions)&lt;/code&gt;を使用して、プル リクエストのタイトルと説明を生成するためのカスタム手順を提供できます。設定をワークスペース内のファイルに指定することも、設定内でインラインで指示を指定することもできます。 &lt;a href=&quot;https://code.visualstudio.com/docs/copilot/copilot-customization&quot;&gt;VS Code での Copilot のカスタマイズ&lt;/a&gt;について詳しくは、「VS Code での Copilot のカスタマイズ」をご覧ください。&lt;/p&gt;
&lt;p&gt;次のサンプルは、設定でカスタム命令をインラインで提供する方法を示しています。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-json&quot;&gt;{
 &quot;github.copilot.chat.pullRequestDescriptionGeneration.instructions&quot;: [
 {
 &quot;text&quot;: &quot;Prefix every PR title with an emoji.&quot;
 }
 ]
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;タイトルと説明を生成するには、GitHub Pull Requests 拡張機能をインストールする必要があります。&lt;/p&gt;
&lt;h2 id=&quot;accessibility&quot;&gt;アクセシビリティ&lt;a href=&quot;#accessibility&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Accessibility&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;copilot-edits-accessibility&quot;&gt;副操縦士の編集アクセシビリティ&lt;a href=&quot;#copilot-edits-accessibility&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Copilot Edits accessibility&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;コパイロット編集をよりアクセスしやすくしました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;変更および変更されたリージョン (挿入、変更、削除) のあるファイルにはオーディオ信号が含まれます。&lt;/li&gt;
&lt;li&gt;アクセス可能な差分ビューアが、変更されたファイルに使用できるようになりました。差分エディターと同様に、 &lt;code&gt;kb(chatEditor.action.showAccessibleDiffView)&lt;/code&gt;を選択して有効にします。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;activeeditorstate-window-title-variable&quot;&gt; &lt;code&gt;activeEditorState&lt;/code&gt;ウィンドウのタイトル変数&lt;a href=&quot;#activeeditorstate-window-title-variable&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;&lt;code&gt;activeEditorState&lt;/code&gt; window title variable&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;新しい&lt;code&gt;setting(window.title)&lt;/code&gt;変数&lt;code&gt;activeEditorState&lt;/code&gt;があり、変更された状態、問題の数、ファイルに保留中のコパイロット編集がある時期などのエディター情報をスクリーン リーダー ユーザーに示します。スクリーン リーダー最適化モードの場合、これはデフォルトで追加され、 &lt;code&gt;setting(accessibility.windowTitleOptimized:false)&lt;/code&gt;で無効にできます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-03-06-github-copilot-updates-in-visual-studio-code-february-release-v0-25-including-improvements-to-agent-mode-and-next-exit-suggestions-ga-of-custom-instructions-and-more&quot;&gt;Visual Studio Code 2 月リリース (v0.25) での GitHub Copilot の更新の投稿には、エージェント モードと次の終了提案の改善、カスタム命令の一般提供などが含まれます。&lt;/a&gt;最初に登場したのは&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;です。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">83110</post-id></item><item><title>Copilot Chat ユーザーは、パブリック プレビューで VS Code および Visual Studio の Vision 入力を使用できるようになりました</title><link>https://github.blog/changelog/2025-03-06-copilot-chat-users-can-now-use-the-vision-input-in-vs-code-and-visual-studio-public-preview</link><dc:creator>Allison</dc:creator><pubDate>Thu, 06 Mar 2025 15:40:49 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-06-copilot-chat-users-can-now-use-the-vision-input-in-vs-code-and-visual-studio-public-preview-2</guid><description>&lt;p&gt;Copilot Chat users can now use the Vision input in VS Code and Visual Studio in public preview&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-06-copilot-chat-users-can-now-use-the-vision-input-in-vs-code-and-visual-studio-public-preview&quot;&gt;Copilot Chat users can now use the Vision input in VS Code and Visual Studio in public preview&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;画像を添付して、VS Code または Visual Studio の Copilot Chat で直接操作できるようになりました。エラーのスクリーンショットを共有すると、Copilot が画像を解釈して問題を解決します。または、新しいデザインのモックアップを共有すると、Vision がそれらに命を吹き込むのに役立ちます。&lt;/p&gt;
&lt;p&gt;いくつかの方法を使用して画像を添付できるようになりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; OS またはエクスプローラー ビューから画像をドラッグ アンド ドロップします。&lt;/li&gt;
&lt;li&gt;クリップボードから画像を貼り付ける&lt;/li&gt;
&lt;li&gt;エディター ウィンドウのスクリーンショットを添付します (VS Code で、[添付] &gt; [スクリーンショット ウィンドウ] を選択します)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;現在サポートされている画像タイプは、 &lt;code&gt;JPEG/JPG&lt;/code&gt; 、 &lt;code&gt;PNG&lt;/code&gt; 、 &lt;code&gt;GIF&lt;/code&gt; 、および&lt;code&gt;WEBP&lt;/code&gt;です。&lt;br /&gt;
 GPT-4o モデルではビジョン機能を使用できます。アクセスするには、Copilot の「エディタ プレビュー機能」ポリシーが有効になっていることを確認してください。&lt;/p&gt;
&lt;p&gt;この機能は、以前は&lt;a href=&quot;https://github.blog/changelog/2025-02-06-next-edit-suggestions-agent-mode-and-prompts-files-for-github-copilot-in-vs-code-january-release-v0-24/&quot;&gt;VS Code Insiders&lt;/a&gt;と&lt;a href=&quot;https://devblogs.microsoft.com/visualstudio/attach-images-in-github-copilot-chat/&quot;&gt;Visual Studio Preview&lt;/a&gt;ユーザーが利用できましたが、現在はパブリック プレビューの安定したエディター バージョンのユーザーが利用できるようになりました。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.blog/wp-content/uploads/2025/02/recording_2025-02-03_at_15.00.02.gif&quot; alt=&quot;画像を分析する副操縦士チャット&quot; /&gt;&lt;/p&gt;
&lt;p&gt;詳細については、 &lt;a href=&quot;https://docs.github.com/en/copilot/using-github-copilot/copilot-chat/asking-github-copilot-questions-in-your-ide#vision&quot;&gt;Copilot Chat での Vision の使用に関するドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/community/discussions/categories/copilot&quot;&gt;コミュニティのディスカッション&lt;/a&gt;でフィードバックを共有してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-03-06-copilot-chat-users-can-now-use-the-vision-input-in-vs-code-and-visual-studio-public-preview&quot;&gt;「Copilot Chat ユーザーはパブリック プレビューで VS Code と Visual Studio の Vision 入力を使用できるようになりました」という&lt;/a&gt;記事が最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">83089</post-id></item><item><title>コード スキャンとシークレット スキャンの委任アラート解除がパブリック プレビューで利用可能になりました</title><link>https://github.blog/changelog/2025-03-05-delegated-alert-dismissal-for-code-scanning-and-secret-scanning-now-available-in-public-preview</link><dc:creator>Allison</dc:creator><pubDate>Wed, 05 Mar 2025 21:13:49 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-05-delegated-alert-dismissal-for-code-scanning-and-secret-scanning-now-available-in-public-preview</guid><description>&lt;p&gt;Delegated alert dismissal for code scanning and secret scanning now available in public preview&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-05-delegated-alert-dismissal-for-code-scanning-and-secret-scanning-now-available-in-public-preview&quot;&gt;Delegated alert dismissal for code scanning and secret scanning now available in public preview&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;委任されたアラート解除により、組織のセキュリティ体制を制御し続けます。この機能を使用すると、コード スキャンとシークレット スキャンでアラートが無視される前にレビュー プロセスを要求できます。これにより、セキュリティ リスクをより適切に管理し、監査とコンプライアンスの要件を満たすことができます。&lt;/p&gt;
&lt;p&gt;この機能により監視と制御が強化されますが、組織はセキュリティのニーズと開発速度のバランスを慎重にとる必要があります。考慮すべき事項は次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;アラートを閉じることができる人&lt;/li&gt;
&lt;li&gt;アラートをいつどのように閉じる必要があるか&lt;/li&gt;
&lt;li&gt;誰が解雇要求を検討して承認する必要があるか。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この機能は、セキュリティ構成を使用して、またはリポジトリ レベルで大規模に構成および管理できます。&lt;/p&gt;
&lt;p&gt;各却下リクエストには、その根拠を説明する必須のコメントが必要であり、プロセス全体を通じて承認者とリクエスト者の両方に電子メール通知が送信されます。拒否された場合、アラートは開いたままになります。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;organization owner&lt;/code&gt;または&lt;a href=&quot;https://docs.github.com/en/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization&quot;&gt;&lt;code&gt;security manager&lt;/code&gt;&lt;/a&gt;役​​割を持つユーザーは、デフォルトで解雇要求を確認および承認できます。この機能を有効にしても、以前に無視されたアラートの状態は変わりません。&lt;/p&gt;
&lt;p&gt;却下と承認のプロセスは、アラート タイムラインに表示され、監査ログに含まれ、REST API と Webhook の両方を通じてアクセスできます。&lt;/p&gt;
&lt;p&gt; GitHub Enterprise Cloud で&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/code-scanning/managing-your-code-scanning-configuration/enabling-delegated-alert-dismissal-for-code-scanning&quot;&gt;コード スキャン&lt;/a&gt;と&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/using-advanced-secret-scanning-and-push-protection-features/enabling-delegated-alert-dismissal-for-secret-scanning&quot;&gt;シークレット スキャン&lt;/a&gt;のためにこの機能を今すぐ有効にすることができます。 GitHub Enterprise Server のバージョン 3.17 でも利用可能になります。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-03-05-delegated-alert-dismissal-for-code-scanning-and-secret-scanning-now-available-in-public-preview&quot;&gt;コード スキャンとシークレット スキャンの委任されたアラートの解除がパブリック プレビューで利用可能になりましたという&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">83078</post-id></item><item><title>GitHub Secret Protection と GitHub Code Security の紹介</title><link>https://github.blog/changelog/2025-03-04-introducing-github-secret-protection-and-github-code-security</link><dc:creator>Allison</dc:creator><pubDate>Tue, 04 Mar 2025 16:50:24 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-03-introducing-github-secret-protection-and-github-code-security</guid><description>&lt;p&gt;Introducing GitHub Secret Protection and GitHub Code Security&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-04-introducing-github-secret-protection-and-github-code-security&quot;&gt;Introducing GitHub Secret Protection and GitHub Code Security&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; width=&quot;800&quot; alt=&quot;GitHub Advanced Security: GitHub Secret Protection と Code Security の紹介&quot; src=&quot;https://github.com/user-attachments/assets/6fc964e6-d07f-4c54-92d2-f644f553bbd2&quot; /&gt;&lt;/p&gt;
&lt;p&gt; GitHub では、コードベースのセキュリティへの投資は簡単で、コスト効率が高く、誰でもアクセスできるものであるべきだと考えています。本日、私たちは、あらゆる規模の組織が求めている柔軟性でコードを保護できるようにするという私たちの継続的な使命に沿って、GitHub Advanced Security (GHAS) の料金プランと可用性の変更を発表します。&lt;/p&gt;
&lt;h3 id=&quot;announcing-new-pricing-plans-for-github-advanced-security&quot;&gt; GitHub Advanced Security の新しい料金プランを発表&lt;a href=&quot;#announcing-new-pricing-plans-for-github-advanced-security&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Announcing new pricing plans for GitHub Advanced Security&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; 2025 年 4 月 1 日より、GitHub Advanced Security は、GitHub Secret Protection と GitHub Code Security という 2 つのスタンドアロン セキュリティ製品として利用可能になります。さらに、これらの製品は、GitHub Team プランの顧客にとって初めて利用可能になります。&lt;/p&gt;
&lt;h4 id=&quot;github-secret-protection&quot;&gt; GitHub シークレット保護&lt;a href=&quot;#github-secret-protection&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;GitHub Secret Protection&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;新規顧客は、GitHub Secret Protection を購入できます。これには、機密漏洩の検出と防止に役立つ機能 (機密スキャン、AI 検出パスワード、機密のプッシュ保護など) が含まれています。 Secret Protection は、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/billing/managing-billing-for-your-products/managing-billing-for-github-advanced-security/about-billing-for-github-advanced-security#managing-committers-and-repositories&quot;&gt;アクティブなコミッター&lt;/a&gt;1 人あたり月額 19 ドルで利用でき、次のような機能が含まれます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プッシュ保護により機密漏洩を事前に防ぎます&lt;/li&gt;
&lt;li&gt;誤検知率が低い AI 検出により、重要なことに集中できます&lt;/li&gt;
&lt;li&gt;通知付きのシークレット スキャン アラートにより、問題になる前に暴露を発見できます。&lt;/li&gt;
&lt;li&gt;シークレットのカスタム パターンにより、組織固有の機密情報を検索できます&lt;/li&gt;
&lt;li&gt;セキュリティの概要: 組織全体にわたるリスクの分散に関する洞察を提供します。&lt;/li&gt;
&lt;li&gt;企業規模でのガバナンスをサポートする、秘密に対するプッシュ保護とアラート解除の強制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらに、組織が GitHub 境界全体にわたる機密漏洩の足跡を把握できるようにするための&lt;a href=&quot;https://github.blog/changelog/2025-03-04-find-secrets-in-your-organization-with-the-secret-risk-assessment&quot;&gt;新しいスキャン機能&lt;/a&gt;を開始します。この機能は、GitHub チームおよびエンタープライズ組織に対して無料で提供されます。&lt;/p&gt;
&lt;h4 id=&quot;github-code-security&quot;&gt; GitHub コードのセキュリティ&lt;a href=&quot;#github-code-security&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;GitHub Code Security&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;新規顧客は、コードが本番環境に導入される前にコードの脆弱性を検出して修正する Code Security を購入することもできます。 Code Security は&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/billing/managing-billing-for-your-products/managing-billing-for-github-advanced-security/about-billing-for-github-advanced-security#managing-committers-and-repositories&quot;&gt;、アクティブなコミッター&lt;/a&gt;1 人あたり月額 30 ドルで利用でき、以下の機能が含まれます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;既存のコードの脆弱性に対する Copilot Autofix と、開発者第一のセキュリティ管理のためのプル リクエスト&lt;/li&gt;
&lt;li&gt;安全保障負債に大規模に対処するための安全保障キャンペーン&lt;/li&gt;
&lt;li&gt;依存関係ベースの脆弱性から保護するための dependabot 機能&lt;/li&gt;
&lt;li&gt;セキュリティの概要。組織全体にわたるリスクの分散に関する洞察を提供します。&lt;/li&gt;
&lt;li&gt;サードパーティツールのセキュリティに関する調査結果&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;availability-for-github-team-customers&quot;&gt;GitHub チームの顧客向けの可用性&lt;a href=&quot;#availability-for-github-team-customers&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Availability for GitHub Team customers&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; 2025 年 4 月 1 日以降、GitHub Team プランのお客様は Secret Protection と Code Security を購入できるようになります。これらの製品は、GitHub 上のすべての顧客がセキュリティを手頃な価格でスケーラブルでアクセス可能な状態に保つため、従量課金制の従量課金制モデル (従量制課金) を通じて提供されます。&lt;/p&gt;
&lt;h4 id=&quot;get-started-today&quot;&gt;今日から始めましょう&lt;a href=&quot;#get-started-today&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Get started today&quot;&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; GitHub または Microsoft セールス アカウント チームで管理されているプラ​​ンをご利用の既存のお客様は、2025 年 4 月 1 日以降の更新日については、更新開始時に新しい GitHub Advanced Security プランに移行できます。詳細については、アカウント チームにお問い合わせください。既存のセルフサービス顧客向けに、新しい GitHub Advanced Security プランへの移行方法については、GitHub のロードマップと変更ログを通じて今後数か月間にわたって発表されます。&lt;/p&gt;
&lt;p&gt; GitHub Team のお客様は、2025 年 4 月 1 日以降、組織の設定ページから Secret Protection または Code Security を購入することを選択できます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-03-04-introducing-github-secret-protection-and-github-code-security&quot;&gt;GitHub Secret Protection と GitHub Code Security の紹介という&lt;/a&gt;投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">82994</post-id></item><item><title>機密リスク評価を使用して組織内の機密を見つけます</title><link>https://github.blog/changelog/2025-03-04-find-secrets-in-your-organization-with-the-secret-risk-assessment</link><dc:creator>Allison</dc:creator><pubDate>Tue, 04 Mar 2025 16:50:07 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-03-find-secrets-in-your-organization-with-the-secret-risk-assessment</guid><description>&lt;p&gt;Find secrets in your organization with the secret risk assessment&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-04-find-secrets-in-your-organization-with-the-secret-risk-assessment&quot;&gt;Find secrets in your organization with the secret risk assessment&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; width=&quot;800&quot; alt=&quot;機密リスク評価を使用して組織内の機密を見つけます&quot; src=&quot;https://github.com/user-attachments/assets/f466f0b9-6448-412a-9dd8-231154ffbe62&quot; /&gt;&lt;/p&gt;
&lt;p&gt; GitHub は、組織が機密漏洩のリスクを認識して対処できるよう支援することで、開発者コミュニティに力を与えることに取り組んでいます。そのため、私たちは来月、セキュリティを強化してコードを保護するための実用的な手順とともに、それらのエクスポージャーに関する明確な洞察を提供する新しい無料ツールをリリースします。&lt;/p&gt;
&lt;p&gt;組織をスキャンして、公的漏洩、プライベート暴露、トークン タイプに関する総合的な洞察を取得します。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; width=&quot;800&quot; alt=&quot;機密リスク評価により、機密漏洩の暴露に関する洞察が得られます。&quot; src=&quot;https://github.com/user-attachments/assets/62a9de20-39de-4bce-b9b0-8c7d41a33edc&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;when-will-this-feature-be-available&quot;&gt;この機能はいつ利用可能になりますか? &lt;a href=&quot;#when-will-this-feature-be-available&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;When will this feature be available?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;シークレット リスク評価は、GitHub チームおよびエンタープライズ プラン向けのシークレット保護の開始の一環として、2025 年 4 月 1 日に利用可能になります。&lt;/p&gt;
&lt;h3 id=&quot;what-will-this-dashboard-include&quot;&gt;このダッシュボードには何が含まれますか? &lt;a href=&quot;#what-will-this-dashboard-include&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What will this dashboard include?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; [セキュリティ] タブで利用可能で、組織およびセキュリティ管理者はスキャンを実行して、機密の漏洩や暴露によって組織がどのような影響を受けるかを理解できます。スキャンが開始されると、GitHub は組織全体で秘密の漏洩と暴露を探し、次のような一連の洞察を返します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;タイプごとに漏洩したシークレットの数&lt;/li&gt;
&lt;li&gt;パブリックリポジトリ内で公開されているシークレットの数&lt;/li&gt;
&lt;li&gt;シークレットの種類ごとに影響を受けるリポジトリの数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;特定の秘密が保存または共有されることはありません。&lt;/strong&gt;スキャンは、すべてのパブリックおよびプライベート リポジトリにわたるポイントインタイムの評価となります。継続的な監視ツールを導入する準備ができている組織には、特定のシークレットの検出とインシデント管理のためにシークレット スキャンを有効にすることをお勧めします。&lt;/p&gt;
&lt;h3 id=&quot;why-are-we-doing-this&quot;&gt;なぜこれを行うのでしょうか? &lt;a href=&quot;#why-are-we-doing-this&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Why are we doing this?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;私たちは、組織が GitHub 境界全体にわたる機密漏洩の足跡を把握できるようにするために、この機能を開始しました。&lt;/p&gt;
&lt;p&gt; GitHub は、組織が機密漏洩によるリスクを認識できるよう支援することで、開発者コミュニティに有意義な影響を与えることに取り組んでいます。私たちの目標は、それらの危険性に関する明確な洞察と、より強力なセキュリティへの明確な道筋を提供することです。&lt;/p&gt;
&lt;h3 id=&quot;who-can-use-this-feature&quot;&gt;この機能を使用できるのは誰ですか? &lt;a href=&quot;#who-can-use-this-feature&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Who can use this feature?&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;この機能は、GitHub Team または Enterprise プランを契約している組織に無料で提供されます。組織管理者とセキュリティ マネージャーはレポートを実行し、結果を確認できます。&lt;/p&gt;
&lt;p&gt; GitHub Secret Protection の開始について詳しくは、 &lt;a href=&quot;https://github.blog/changelog/2025-03-04-introducing-github-secret-protection-and-github-code-security&quot;&gt;この変更ログ&lt;/a&gt;を参照してください。ご質問がありますか? &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;GitHub コミュニティ&lt;/a&gt;でディスカッションを開始して、ご意見をお聞かせください。私たちは耳を傾けています。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-03-04-find-secrets-in-your-organization-with-the-secret-risk-assessment&quot;&gt;「シークレット リスク評価を使用して組織内のシークレットを見つける」という&lt;/a&gt;投稿は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">82995</post-id></item><item><title>改善されたプル リクエストのマージ エクスペリエンスが一般公開されました</title><link>https://github.blog/changelog/2025-03-04-improved-pull-request-merge-experience-is-now-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Tue, 04 Mar 2025 16:46:18 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-04-improved-pull-request-merge-experience-is-now-generally-available</guid><description>&lt;p&gt;Improved pull request merge experience is now generally available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-04-improved-pull-request-merge-experience-is-now-generally-available&quot;&gt;Improved pull request merge experience is now generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;プル リクエスト ページの改善されたマージ エクスペリエンスが一般公開されました。このアップデートは、プル リクエストの状態をより深く理解し、より迅速にマージできるように設計されています。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/e0de1817-b3d1-4304-813f-4037002eb195&quot; alt=&quot;プル リクエスト ページ上の更新されたマージ ボックス ページのスクリーンショット。承認済みであること、ステータス チェックのリスト (一部は失敗)、マージ競合がないことを示すメッセージが表示されます。&quot; /&gt;&lt;/p&gt;
&lt;p&gt;このエクスペリエンスは、通常のマージ方法 (直接、バイパスとマージ、自動マージ、キューのマージ) をすべてサポートし、ルールセットと連携して、 &lt;a href=&quot;https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets&quot;&gt;プル リクエストが&lt;/a&gt;マージのすべての要件を満たしていることを確認します。&lt;/p&gt;
&lt;h3 id=&quot;whats-new&quot;&gt;新着情報&lt;a href=&quot;#whats-new&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#8217;s new&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;新しいエクスペリエンスは、親しみを感じられるように設計されていますが、以前のエクスペリエンスも改善されています。以下にいくつかのハイライトを示します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ステータス別にグループ化されたチェック:&lt;/strong&gt;チェックはステータス別にグループ化され、失敗したチェックがリストの先頭に優先順位付けされるようになり、注意が必要な問題を特定しやすくなりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;論理的に順序付けされたチェック:&lt;/strong&gt;特にリストが長くなった場合に、特定のチェックを見つけやすくするために、ステータス チェックが自然順序付けを使用して順序付けされるようになりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ルール適用の改善:&lt;/strong&gt;コミット メタデータ ルールの失敗によって生じるエラー (無効なコミット メッセージなど) がマージの時点で報告されるようになり、修正できるようになりました。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;アクセシビリティの向上:&lt;/strong&gt;一貫したキーボード ナビゲーション、フォーカス管理、ランドマークにより、誰もがエクスペリエンスにアクセスしやすくなります。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;get-help&quot;&gt;助けを求める&lt;a href=&quot;#get-help&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Get help&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request&quot;&gt;プル リクエストのマージ&lt;/a&gt;について詳しくは、こちらをご覧ください。&lt;/p&gt;
&lt;p&gt;機能を提案したり、問題を報告したり、この改善されたエクスペリエンスについて話し合ったりするには、 &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/pull-requests&quot;&gt;GitHub コミュニティ&lt;/a&gt;にアクセスしてください。&lt;/p&gt;
&lt;p&gt;投稿「 &lt;a href=&quot;https://github.blog/changelog/2025-03-04-improved-pull-request-merge-experience-is-now-generally-available&quot;&gt;改良されたプル リクエストのマージ エクスペリエンスが一般利用可能になりました」&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt; .&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">83008</post-id></item><item><title>npm パッケージの直接的な依存関係と推移的な依存関係を簡単に区別する</title><link>https://github.blog/changelog/2025-03-04-easily-distinguish-between-direct-and-transitive-dependencies-for-npm-packages</link><dc:creator>Allison</dc:creator><pubDate>Tue, 04 Mar 2025 15:27:14 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-04-easily-distinguish-between-direct-and-transitive-dependencies-for-npm-packages</guid><description>&lt;p&gt;Easily distinguish between direct and transitive dependencies for npm packages&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-04-easily-distinguish-between-direct-and-transitive-dependencies-for-npm-packages&quot;&gt;Easily distinguish between direct and transitive dependencies for npm packages&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;npm のオープンソース パッケージの大規模なエコシステムは、その最大の強みの 1 つです。しかし、セキュリティを意識する開発者としては、プロジェクトに少数の依存関係があり、それぞれに&lt;em&gt;独自の&lt;/em&gt;依存パッケージのセットがあると、脆弱性の報告と更新を続けるのが困難になることがあります。 dependabot は脆弱性とその修正を通知します。残念ながら、マニフェストに追加した&lt;strong&gt;直接の&lt;/strong&gt;依存関係に関する実用的なアラートと、途中で取り込まれた&lt;strong&gt;推移&lt;/strong&gt;的な依存関係を区別するのは困難です…つまり、これまでは。&lt;/p&gt;
&lt;p&gt; GitHub の&lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph&quot;&gt;依存関係グラフは&lt;/a&gt;、npm パッケージの直接的および推移的な依存関係を追跡するようになりました。これは、Dependabot アラートのトリアージ、優先順位付け、修復に役立ちます。この機能は、サイト全体のユーザー向け機能に表示されます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;マニフェストに直接含めたパッケージに関連付けられている場合、Dependabot アラートには&lt;strong&gt;直接&lt;/strong&gt;ラベルが含まれるようになりました。検索バーの&lt;code&gt;relationship:direct&lt;/code&gt;フィルターを使用して、アラートのリストを直接的なアラートのみに絞り込むことができます。&lt;/li&gt;
&lt;li&gt;推移的な依存関係のアラートには、推移的なパス情報、つまり直接的な依存関係から脆弱性のある推移的な依存関係に至るまでのパッケージのチェーンが表示されるようになりました。&lt;/li&gt;
&lt;li&gt;リポジトリの依存関係グラフは、直接的な関係と推移的な関係を区別するようになりました。直接的な依存関係にはテーブル UI にラベルが表示されますが、間接的な依存関係には、それらを含めるに至った推移的なパスを示す開示メニューがあります。&lt;/li&gt;
&lt;li&gt;リポジトリの SBOM には、SPDX &lt;code&gt;relationshipType: DEPENDS_ON&lt;/code&gt;フィールドを使用してパッケージの依存関係のツリーを表現する&lt;code&gt;relationships&lt;/code&gt;セクションが含まれます。 &lt;a href=&quot;https://docs.guac.sh/guac-visualizer/&quot;&gt;guac.sh&lt;/a&gt;などのツールは、このツリーの探索と視覚化に役立ちます。&lt;/li&gt;
&lt;li&gt; GraphQL API は、 &lt;code&gt;DependencyGraphDependency&lt;/code&gt;オブジェクト内の&lt;code&gt;direct&lt;/code&gt; 、 &lt;code&gt;transitive&lt;/code&gt; 、または&lt;code&gt;unknown&lt;/code&gt;値を持つ&lt;code&gt;relationship&lt;/code&gt;シップ フィールドを返すようになりました。&lt;a href=&quot;https://docs.github.com/en/graphql/reference/objects#dependencygraphdependency&quot;&gt;詳細については、API ドキュメント&lt;/a&gt;を参照してください。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/095f607d-e971-487d-afe3-2c977f1c251e&quot; alt=&quot;dependabot アラートのテーブルをフィルタリングして直接の依存関係のみを表示できるようになりました&quot; /&gt;&lt;/p&gt;
&lt;p&gt; npm は既知の世界で最も人気のあるパッケージ エコシステムであるため、npm から始めましたが、それは始まりにすぎません。今後数か月の間に、他のプログラミング言語のパッケージ タイプも推移性の処理を受ける予定です。次は Java 用の Maven パッケージです。&lt;/p&gt;
&lt;p&gt;これを試すには、 &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/configuring-the-dependency-graph&quot;&gt;依存関係グラフが有効になっていること&lt;/a&gt;を確認する必要があります。 dependabot ラベルを表示するには、 &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-alerts/configuring-dependabot-alerts&quot;&gt;Dependabot アラートを有効にする&lt;/a&gt;必要もあります。 「直接」ラベルがすぐに表示されない場合は、マニフェスト ファイルの 1 つを更新するコミットをプッシュします。これにより、依存関係グラフの更新がトリガーされます。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/151968&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;p&gt;この投稿&lt;a href=&quot;https://github.blog/changelog/2025-03-04-easily-distinguish-between-direct-and-transitive-dependencies-for-npm-packages&quot;&gt;「npm パッケージの直接依存関係と推移依存関係を簡単に区別する」は、&lt;/a&gt;最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">83006</post-id></item><item><title>GitHub Enterprise および GitHub Advanced Security サーバーの使用量に対する従量課金の導入</title><link>https://github.blog/changelog/2025-03-03-introducing-metered-billing-for-github-enterprise-and-github-advanced-security-server-usage</link><dc:creator>Allison</dc:creator><pubDate>Tue, 04 Mar 2025 00:47:40 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-03-introducing-metered-billing-for-github-enterprise-and-github-advanced-security-server-usage</guid><description>&lt;p&gt;Introducing metered billing for GitHub Enterprise and GitHub Advanced Security server usage&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-03-introducing-metered-billing-for-github-enterprise-and-github-advanced-security-server-usage&quot;&gt;Introducing metered billing for GitHub Enterprise and GitHub Advanced Security server usage&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;GitHub の使用量の拡張がさらに簡単になりました。当社は、従量課金制の使用量ベースの請求とライセンスのレポート インターフェイスを拡張し、GitHub Enterprise (GHE) および GitHub Advanced Security (GHAS) サーバーのみの使用を含めるようにしています。&lt;/p&gt;
&lt;p&gt;当社は、お客様が柔軟な自己プロビジョニングと価格設定を行えるように、2024 年 8 月 1 日に&lt;a href=&quot;https://resources.github.com/metered-billing/&quot;&gt;GHE および GHAS の従量課金制を発表しました&lt;/a&gt;。それ以降、その日以降に作成された github.com のエンタープライズ アカウントは、ライセンスの調整が必要な場合に、適切なライセンス数の GitHub Enterprise Server キーを生成できるようになりました。これには、サーバーのみのユーザーを含むすべてのユーザーが、GitHub Enterprise Cloud 上のエンタープライズ アカウントのユーザー リストに表示される必要がありました。&lt;/p&gt;
&lt;p&gt; &lt;em&gt;「請求とライセンス&lt;/em&gt;&gt;&lt;em&gt;ライセンス」&lt;/em&gt;ページで、Enterprise セキュリティと Advanced Security の両方のサーバーのみのライセンスの使用状況を個別の項目として追跡および監視できるようになりました。&lt;/p&gt;
&lt;p&gt;ライセンスの使用状況を考慮し、適切なライセンス数のライセンス キーを生成するには、すべてのサーバー専用ユーザーを GitHub Enterprise Cloud エンタープライズ ユーザー リストに追加する必要があることに注意してください。このアップデートにより、このコンプライアンス要件は変更されません。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/7a8d635b-d9c2-4f3e-a3e9-995707459814&quot; alt=&quot;Enterprise Server のライセンスの概要&quot; /&gt;&lt;/p&gt;
&lt;p&gt;すでに GHE または GHAS をご利用の既存のお客様の場合、プランと既存の請求方法はそのまま残ります。&lt;/p&gt;
&lt;p&gt;従量課金制の使用量ベースの請求に興味があり、GitHub アカウント チームをお持ちの場合は、そのチームに連絡して、このモデルへの切り替えが選択肢になるかどうか話し合ってください。&lt;/p&gt;
&lt;p&gt;ライセンスの使用量ベースの請求の詳細については、 &lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/billing/using-the-new-billing-platform/about-usage-based-billing-for-licenses&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-03-03-introducing-metered-billing-for-github-enterprise-and-github-advanced-security-server-usage&quot;&gt;GitHub Enterprise および GitHub Advanced Security サーバーの使用量に対する従量課金の紹介という&lt;/a&gt;投稿は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">83004</post-id></item><item><title>JetBrains Copilot コード参照サポートの一般提供が開始されました</title><link>https://github.blog/changelog/2025-03-02-jetbrains-copilot-code-referencing-support-is-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Mon, 03 Mar 2025 02:02:04 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-03-02-jetbrains-copilot-code-referencing-support-is-generally-available</guid><description>&lt;p&gt;JetBrains Copilot code referencing support is generally available&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-03-02-jetbrains-copilot-code-referencing-support-is-generally-available&quot;&gt;JetBrains Copilot code referencing support is generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;JetBrains IDE 用の GitHub Copilot プラグインには、コード参照を表示する機能が含まれており、コーディング エクスペリエンスを強化し、生産性を向上させるように設計されています。&lt;/p&gt;
&lt;h3 id=&quot;whats-new-%e2%9c%a8&quot;&gt;新着情報&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/2728.png&quot; alt=&quot;✨&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#whats-new-%e2%9c%a8&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;What&amp;#8217;s new &amp;#x2728;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;コード参照の表示: GitHub Copilot がパブリック コードと一致するコードを提案すると、この一致が通知されます。回答の最後にある「一致を表示」をクリックして参照情報にアクセスします。&lt;/p&gt;
&lt;h3 id=&quot;benefits-for-developers-%e2%9a%a1%ef%b8%8f&quot;&gt;開発者にとってのメリット&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/26a1.png&quot; alt=&quot;⚡&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#benefits-for-developers-%e2%9a%a1%ef%b8%8f&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Benefits for developers &amp;#x26a1;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;コードの提案による情報に基づいた決定: コードの参照により、提案されたコードを使用するかどうかについて、より多くの情報に基づいた決定が可能になります。&lt;/p&gt;
&lt;h3 id=&quot;get-involved-%f0%9f%9b%a0&quot;&gt;参加する&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f6e0.png&quot; alt=&quot;🛠&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#get-involved-%f0%9f%9b%a0&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Get involved &amp;#x1f6e0;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;a href=&quot;https://plugins.jetbrains.com/plugin/17718-github-copilot/versions&quot;&gt;GitHub Copilot プラグインの最新バージョン&lt;/a&gt;を試して、フィードバックを共有することをお勧めします。あなたの意見は、製品を改良し、改善する上で非常に貴重です。&lt;/p&gt;
&lt;h3 id=&quot;join-the-discussion-%f0%9f%9a%80&quot;&gt;ディスカッションに参加する&lt;img src=&quot;https://s.w.org/images/core/emoji/15.0.3/72x72/1f680.png&quot; alt=&quot;🚀&quot; class=&quot;wp-smiley&quot; style=&quot;height: 1em; max-height: 1em;&quot; /&gt;&lt;a href=&quot;#join-the-discussion-%f0%9f%9a%80&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Join the discussion &amp;#x1f680;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/copilot&quot;&gt;GitHub コミュニティ&lt;/a&gt;で私たちや他の開発者とつながり、経験を共有し、質問し、フィードバックを提供してください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-03-02-jetbrains-copilot-code-referencing-support-is-generally-available&quot;&gt;JetBrains Copilot コード参照サポートの一般提供開始に関する&lt;/a&gt;記事は&lt;a href=&quot;https://github.blog&quot;&gt;、 GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">82959</post-id></item><item><title>Copilot Workspace: クォータ制限、ダッシュボードの問題、UX の改善を表示</title><link>https://github.blog/changelog/2025-02-28-copilot-workspace-showing-quota-limits-issues-in-dashboard-and-ux-improvements</link><dc:creator>Allison</dc:creator><pubDate>Fri, 28 Feb 2025 20:34:24 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-02-28-copilot-workspace-showing-quota-limits-issues-in-dashboard-and-ux-improvements</guid><description>&lt;p&gt;Copilot Workspace: Showing quota limits, issues in dashboard, and UX improvements&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-02-28-copilot-workspace-showing-quota-limits-issues-in-dashboard-and-ux-improvements&quot;&gt;Copilot Workspace: Showing quota limits, issues in dashboard, and UX improvements&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/6e477c4f-cea5-41be-b586-0d6fda97b1c6&quot; alt=&quot;コパイロットワークスペースヘッダー&quot; /&gt;&lt;/p&gt;
&lt;p&gt;今週、私たちは日次または時間別のクォータのインジケーターを追加し、ユーザーに割り当てられた問題にダッシュボードのセクションを割り当て、Copilot Workspace によるスムーズな開発プロセスを保証するためにいくつかの UX の改善とバグ修正を導入しました。&lt;/p&gt;
&lt;h3 id=&quot;showing-approaching-quota-limits&quot;&gt;クォータ制限に近づいていることを示しています&lt;a href=&quot;#showing-approaching-quota-limits&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Showing approaching quota limits&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;クォータ制限に近づくと、Copilot Workspace にカウンターが表示されるようになり、残っているトークンの数を追跡し、それに応じて使用の優先順位を付けることができます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/12df9922-ee80-4755-a9a7-c6555d977f5c&quot; alt=&quot;クォータ制限&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;issues-listed-in-homepage-dashboard&quot;&gt;ホームページのダッシュボードにリストされている問題&lt;a href=&quot;#issues-listed-in-homepage-dashboard&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Issues listed in homepage dashboard&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最近割り当てられた問題がホームページのダッシュボードにリストされるようになり、開発を開始するための別のジャンプポイントが提供されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/f854269b-b431-49e8-b9e9-76c20d760a58&quot; alt=&quot;ホームページのダッシュボードで最近割り当てられた問題&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;ux-improvements-and-bug-fixes&quot;&gt; UXの改善とバグ修正&lt;a href=&quot;#ux-improvements-and-bug-fixes&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;UX improvements and bug fixes&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;セッション リストは、セッションから作成されたプル リクエストに直接リンクするようにリファクタリングされました。 &lt;br /&gt;
&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/51416a55-846b-41ee-b772-a117894bd0e1&quot; alt=&quot;スクリーンショットには、リンクされたプル リクエストを含む最近のセッションのリストが表示されます&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;セッション インデックス ページは、セッション間を移動するときにスクロール位置を維持するようになりました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新しいファイルの差分を表示すると、その差分が緑色で強調表示されるようになりました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;現在のブランチ名に矢印を追加して、クリック可能であることを示しました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;計画段階でファイル名を選択できるようになり、必要に応じてファイル名をコピーできるようになりました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;実行コマンドの「ライブ プレビュー」ボタンを修正しました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小さなビューポート上のファイル ツリー ビューのオーバーレイを修正しました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ライト/ダーク モードが設定のテーマに合わせて修正されるようになりました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保存せずにコマンド ダイアログを終了すると、ターミナル コマンドが正しく破棄されるようになりました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;余分なバックティック文字を削除するためにファイル名の生成が改善されました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;モバイルビューでプラ​​ンが表示されないバグを修正しました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ファイルヘッダーの「改訂」ボタンは、十字線の代わりに輝く鉛筆アイコンで表されるようになりました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;停止ボタン用に新しい四角い丸ボタンが追加されました。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;providing-feedback&quot;&gt;フィードバックの提供&lt;a href=&quot;#providing-feedback&quot; class=&quot;heading-link pl-2 text-italic text-bold&quot; aria-label=&quot;Providing feedback&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; &lt;a href=&quot;https://gh.io/workspace-feedback&quot;&gt;GitHub ディスカッション&lt;/a&gt;でフィードバックをお寄せください。ぜひご意見をお聞かせください。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-02-28-copilot-workspace-showing-quota-limits-issues-in-dashboard-and-ux-improvements&quot;&gt;「コパイロット ワークスペース: クォータ制限の表示、ダッシュボードの問題、および UX の改善」という&lt;/a&gt;記事は、最初に&lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">82919</post-id></item></channel></rss>