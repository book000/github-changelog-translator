<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>Archive: 2025 - GitHub Changelog</title><atom:link href="https://github.blog/changelog/feed/" rel="self" type="application/rss+xml"></atom:link><link>https://github.blog/changelog/</link><description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description><lastBuildDate>Wed, 02 Jul 2025 19:16:04 +0000</lastBuildDate><language>en-US</language><sy:updatePeriod>hourly</sy:updatePeriod><sy:updateFrequency>1</sy:updateFrequency><generator>https://wordpress.org/?v=6.8.1</generator><image><url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url><title>Archive: 2025 - GitHub Changelog</title><link>https://github.blog/changelog/</link><width>32</width><height>32</height></image><site xmlns="com-wordpress:feed-additions:1">153214340</site><item><title>Copilotコーディングエージェントに独自のWebブラウザが追加されました</title><link>https://github.blog/changelog/2025-07-02-copilot-coding-agent-now-has-its-own-web-browser</link><dc:creator>Allison</dc:creator><pubDate>Wed, 02 Jul 2025 18:45:04 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-07-02-copilot-coding-agent-now-has-its-own-web-browser</guid><description>&lt;p&gt;GitHub Copilot coding agent, available in public preview, now has access to a web browser out of the box, powered by the Playwright MCP server. This feature is in public&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-02-copilot-coding-agent-now-has-its-own-web-browser&quot;&gt;Copilot coding agent now has its own web browser&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;パブリックプレビュー版として提供されている&lt;a href=&quot;https://docs.github.com/copilot/using-github-copilot/coding-agent&quot;&gt;GitHub Copilotコーディングエージェントは&lt;/a&gt;、 &lt;a href=&quot;https://github.com/microsoft/playwright-mcp&quot;&gt;Playwright MCPサーバー&lt;/a&gt;を活用し、すぐにウェブブラウザにアクセスできるようになりました。この機能は現在パブリックプレビュー版です。&lt;/p&gt;
&lt;p&gt;タスクを Copilot に委任すると、エージェントは独自の開発環境でバックグラウンドで作業を開始します。&lt;/p&gt;
&lt;p&gt;モデルコンテキストプロトコル（MCP）サーバーを使用すると、新しいツールでCopilotの機能を拡張できます。 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/copilot/how-tos/agents/copilot-coding-agent/extending-copilot-coding-agent-with-mcp&quot;&gt;独自の設定&lt;/a&gt;も可能ですが、GitHub MCPサーバーとPlaywrightはデフォルトで有効になっています。&lt;/p&gt;
&lt;p&gt; Playwrightの強力な機能により、CopilotはWebアプリに変更を加えながら操作できます。これにより、Copilotはバグを再現し、動作を検証できます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/d2fac9aa-8dfc-4682-8071-b26ad2400ceb&quot; alt=&quot;Copilot が作業を検証していることを示すセッション ログの例&quot;&gt;&lt;/p&gt;
&lt;p&gt; Copilot は、プル リクエストで実行した内容のスクリーンショットを共有することもできます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/d6b740ce-f752-4f05-ad31-9b261f364952&quot; alt=&quot;プルリクエストでキャプチャしたスクリーンショットを含む、Copilot コーディングエージェントのスクリーンショット&quot;&gt;&lt;/p&gt;
&lt;p&gt; Copilotコーディングエージェントは、すべての有料Copilotユーザーにご利用いただけます。Copilot BusinessまたはCopilot Enterpriseをご利用の場合は、管理者による&lt;a href=&quot;https://docs.github.com/en/enterprise-cloud@latest/copilot/how-tos/agents/copilot-coding-agent/enabling-copilot-coding-agent&quot;&gt;アクセスの有効化&lt;/a&gt;が必要です。&lt;/p&gt;
&lt;p&gt; Copilot コーディング エージェントの詳細とベスト プラクティスについては、&lt;a href=&quot;https://gh.io/copilot-coding-agent-docs&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2025-07-02-copilot-coding-agent-now-has-its-own-web-browser&quot;&gt;Copilot コーディング エージェントに独自の Web ブラウザーが追加されました&lt;/a&gt;という記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89290</post-id></item><item><title>Copilot コードレビュー: 大規模なプルリクエストのより適切な処理</title><link>https://github.blog/changelog/2025-07-02-copilot-code-review-better-handling-of-large-pull-requests</link><dc:creator>Allison</dc:creator><pubDate>Wed, 02 Jul 2025 18:02:20 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-07-02-copilot-code-review-better-handling-of-large-pull-requests</guid><description>&lt;p&gt;We&amp;#8217;ve made big improvements to how Copilot code review handles large pull requests. Around 30% of pull requests on GitHub include more than 20 files&amp;#8212;and now we&amp;#8217;re equipped to review&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-02-copilot-code-review-better-handling-of-large-pull-requests&quot;&gt;Copilot code review: Better handling of large pull requests&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; Copilot コードレビューにおける大規模プルリクエストの処理方法を大幅に改善しました。GitHub のプルリクエストの約 30% には 20 個以上のファイルが含まれていますが、Copilot ではより多くのプルリクエストをより徹底的にレビューできるようになりました。&lt;/p&gt;
&lt;p&gt;大規模または複雑なファイルのレビューを妨げていた従来のシステム制限を解除しました。これにより、Copilot は一般的なプルリクエストでより多くのファイルをレビューできるようになり、より包括的なカバレッジを提供できるようになりました。近日中に複数行のコードにまたがる提案も含まれるようになります。さらに、大規模なプルリクエストをより迅速に処理したい場合は、現在パブリックプレビュー中の、 &lt;a href=&quot;https://github.blog/changelog/2025-06-26-improved-pull-request-files-changed-experience-now-in-public-preview/&quot;&gt;改善されたファイル変更エクスペリエンス&lt;/a&gt;をご確認ください。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;つまり、より多くのファイルがレビューされ、より有意義な提案が行われ、プル リクエスト全体のカバー範囲が広がります。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/copilot-conversations&quot;&gt;GitHub コミュニティ&lt;/a&gt;内のディスカッションに参加してください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-07-02-copilot-code-review-better-handling-of-large-pull-requests&quot;&gt;Copilot コードレビュー: 大規模なプルリクエストのより適切な処理に関する記事が、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89286</post-id></item><item><title>GitHub アプリとインストール自動化 API へのエンタープライズレベルのアクセス</title><link>https://github.blog/changelog/2025-07-01-enterprise-level-access-for-github-apps-and-installation-automation-apis</link><dc:creator>Allison</dc:creator><pubDate>Tue, 01 Jul 2025 19:55:00 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-07-01-enterprise-level-access-for-github-apps-and-installation-automation-apis</guid><description>&lt;p&gt;GitHub Apps can now be installed onto enterprise accounts, with new permissions that let them call enterprise management APIs. The public preview of this new access pattern has a limited&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-01-enterprise-level-access-for-github-apps-and-installation-automation-apis&quot;&gt;Enterprise-level access for GitHub Apps and installation automation APIs&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; GitHub Apps をエンタープライズアカウントにインストールできるようになりました。新しい権限により、エンタープライズ管理 API を呼び出すことができます。この新しいアクセスパターンのパブリックプレビューでは、自動化の大きな可能性を広げる限定的な権限セットが提供されます。今回のリリースでは、エンタープライズ内の組織全体でインストールする GitHub Apps とそのアクセス対象を管理できる新しいエンタープライズ API セットも導入されます。これにより、すべての組織でアプリのインストール、監査、管理を自動化できます。何百ものインストールボタンをクリックする必要はもうありません。&lt;/p&gt;
&lt;p&gt;さらに、エンタープライズ所有のGitHub Appをユーザーが個別に管理できるようになりました。エンタープライズオーナーは、エンタープライズメンバーをエンタープライズ所有のアプリの管理者に任命できます。エンタープライズアプリ管理者の詳細については、「 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/admin/managing-your-enterprise-account/adding-and-removing-github-app-managers-in-your-enterprise&quot;&gt;エンタープライズにおけるGitHub App管理者の追加と削除&lt;/a&gt;」をご覧ください。&lt;/p&gt;
&lt;h2 id=&quot;enterprise-installations&quot; id=&quot;enterprise-installations&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#enterprise-installations&quot;&gt;エンタープライズインストール&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;企業または企業所有の組織が所有するアプリは、新しい「エンタープライズ」権限セットをリクエストできるようになりました。これにより、企業所有者は、自社所有のアプリのインストール時に、自社が有効なインストール先として表示されるようになります。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/18bf0c04-a391-48f6-b00e-81d6a8c2b995&quot; alt=&quot;インストール先企業の選択&quot;&gt;&lt;/p&gt;
&lt;p&gt;現在、企業は自社または企業内の組織が所有するアプリのみをインストールできます。今後、これらのアプリケーションに関する制御を拡張していく中で、この制限は解除される予定です。 &lt;/p&gt;
&lt;h3 id=&quot;access-patterns-for-enterprise-installations&quot; id=&quot;access-patterns-for-enterprise-installations&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#access-patterns-for-enterprise-installations&quot;&gt;企業内設備のアクセスパターン&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;エンタープライズインストールでは、アプリはエンタープライズアカウント自体へのアクセスを許可しますが、各組織またはリポジトリ内ではインストールとして動作しません。組織またはリポジトリのデータにアクセスする必要がある場合は、アプリをそれらの組織に直接インストールする必要があります。幸いなことに、このプレビューには、まさにこのニーズに役立つツールが付属しています。&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/apps/creating-github-apps/authenticating-with-a-github-app/generating-an-installation-access-token-for-a-github-app&quot;&gt;標準インストールトークンパターンを&lt;/a&gt;使用すると、企業向けアプリ用のトークンを取得したり、OAuth経由でユーザーをサインインさせて、アプリがインストールされている場所に関係なくユーザーに代わって操作を実行したりできます。企業と組織の両方にインストールされたアプリの場合、ユーザーが適切な権限を持っている限り、ユーザートークンは両方のリソースセットに問題なくアクセスできます。&lt;/p&gt;
&lt;p&gt;エンタープライズ版のインストールには、組織版やユーザー版のインストールとは別に、独自のレート制限予算が割り当てられます。各インストールには、1時間あたり15,000リクエストまたは10,000ポイントの予算が割り当てられており、これはエンタープライズプランの組織版のインストールと同じ予算です。&lt;/p&gt;
&lt;p&gt;現時点では、エンタープライズ環境ではWebhookをサブスクライブできません。アプリケーションでエンタープライズWebhookが必要な場合は、 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/webhooks/using-webhooks/creating-webhooks#creating-a-global-webhook-for-a-github-enterprise&quot;&gt;エンタープライズWebhookサブスクリプションを作成し&lt;/a&gt;、アプリケーションからそれに応答することを検討してください。&lt;/p&gt;
&lt;h2 id=&quot;enterprise-app-permissions&quot; id=&quot;enterprise-app-permissions&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#enterprise-app-permissions&quot;&gt;エンタープライズアプリの権限&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;組織やリポジトリと同様に、エンタープライズアクセスはきめ細かな権限によって制御されており、アプリケーションがリソースにアクセスまたは管理するには、これらの権限を付与する必要があります。各APIには、アクセスに必要な権限セットがそれぞれ異なります。今回のパブリックプレビューでは、使用頻度の高いAPIを利用できる5つの新しいエンタープライズ権限セットと、エンタープライズ全体でGitHub Appsのインストールを自動化する新しいAPIが提供されます。 &lt;/p&gt;
&lt;p&gt;&lt;img decoding=&quot;async&quot; src=&quot;https://github.com/user-attachments/assets/b3fd7285-2af7-431e-8b5d-24bfd19ddf59&quot; alt=&quot;プレビューで利用可能なエンタープライズ権限&quot;&gt;&lt;/p&gt;
&lt;p&gt; GitHubのエンタープライズAPIにきめ細かな権限設定を継続的に追加し、GitHub AppsをあらゆるAPIで確実にご利用いただけるようにしていきます。私たちの目標は、必要な自動化シナリオへのサポートを強化し、PAT（Classic）の要件から脱却していくことです。&lt;/p&gt;
&lt;h3 id=&quot;github-app-installation-management&quot; id=&quot;github-app-installation-management&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#github-app-installation-management&quot;&gt;GitHub Appのインストール管理&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;新しいOrganization Installations REST APIを使用すると、企業のOrganizationにおける各GitHub Appのインストール状況を表示および管理できます。Organizationに追加のGitHub Appをインストールしたり、アプリがアクセスできるリポジトリを制御したり、アンインストールしたりすることも可能です。これらのAPIは、以下の2つの権限で制御できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;エンタープライズ組織のインストール（読み取り/書き込み）&lt;/strong&gt; : アプリがエンタープライズ内の各組織のインストールを表示、作成、編集、削除できるようにします。これは非常に強力な書き込み権限で、組織の管理権限とすべてのリポジトリへの読み取り/書き込みアクセスを使用してアプリケーションをインストールできます。読み取り専用権限として付与すると、エンタープライズ全体のアプリケーションの監査に非常に役立ちます。この権限には、対応する&lt;code&gt;Enterprise organization installation repositories&lt;/code&gt;読み取り/書き込み権限が含まれます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;エンタープライズ組織のインストールリポジトリ（読み取り/書き込み）&lt;/strong&gt; : これは&lt;code&gt;Enterprise organization installation&lt;/code&gt;権限のサブセットであり、インストールがアクセスできるリポジトリを変更する権限のみをアプリに付与します。新しいアプリをインストールしたり、他のアプリをアンインストールしたりする権限は付与しません。アプリが特定のリポジトリにアクセスする必要があるアクセスパターンがある場合、この機能により、PATを使用せずに、また新しいアプリがインストールされるリスクなしに、その作業を自動化できます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの権限の使用方法については、 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/rest/enterprise-admin/organization-installations?apiVersion=2022-11-28&quot;&gt;組織インストールの API ドキュメントを&lt;/a&gt;参照してください。&lt;/p&gt;
&lt;h3 id=&quot;enterprise-custom-properties&quot; id=&quot;enterprise-custom-properties&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#enterprise-custom-properties&quot;&gt;エンタープライズカスタムプロパティ&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/rest/enterprise-admin/custom-properties?apiVersion=2022-11-28&quot;&gt;エンタープライズカスタムプロパティAPIは&lt;/a&gt;GitHub Appsをサポートしています。アプリはこれらのAPIを&lt;code&gt;custom properties&lt;/code&gt;権限で使用し、エンタープライズレベルで設定されたカスタムリポジトリプロパティを管理できます。&lt;/p&gt;
&lt;h3 id=&quot;enterprise-sso-and-scim-management&quot; id=&quot;enterprise-sso-and-scim-management&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#enterprise-sso-and-scim-management&quot;&gt;エンタープライズSSOとSCIM管理&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OIDC、SAML、SCIMを介したエンタープライズアクセス管理が、GitHub Appで管理できるようになりました。SCIM権限は現時点ではEnterprise Managed User（EMU）エンタープライズのみ利用可能ですが、SSO権限はすべてのエンタープライズで利用可能です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;エンタープライズシングルサインオン（読み取り/書き込み）&lt;/strong&gt; : この権限は、GraphQLの&lt;a href=&quot;https://docs.github.com/graphql/reference/objects#enterpriseidentityprovider&quot;&gt;EnterpriseIdentityProvider&lt;/a&gt; （SAML）および&lt;a href=&quot;https://docs.github.com/graphql/reference/objects#oidcprovider&quot;&gt;OIDCProvider&lt;/a&gt; （OIDC）オブジェクト、およびSAMLアイデンティティプロバイダーを制御するミューテーション（ &lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#setenterpriseidentityprovider&quot;&gt;&lt;code&gt;setEnterpriseIdentityProvider&lt;/code&gt;&lt;/a&gt;および&lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#removeenterpriseidentityprovider&quot;&gt;&lt;code&gt;removeEnterpriseIdentityProvider&lt;/code&gt;&lt;/a&gt; ）で機能します。書き込み権限では&lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#regenerateenterpriseidentityproviderrecoverycodes&quot;&gt;、 &lt;code&gt;regenerateEnterpriseIdentityProviderRecoveryCodes&lt;/code&gt;リカバリコード&lt;/a&gt;ミューテーションも使用できます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;エンタープライズSCIM（読み取り/書き込み）&lt;/strong&gt; ：E​​MUエンタープライズの場合、この権限により、アプリはエンタープライズの&lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/rest/enterprise-admin/scim?apiVersion=2022-11-28&quot;&gt;SCIM API&lt;/a&gt;を呼び出すことができます。監査の観点から、複数のアプリがSCIM APIから読み取りを行うことはエンタープライズにとって有用です。ただし、長期にわたる一貫性を確保するため、SCIM APIへの書き込みは単一のアプリケーションまたはIDPからのみ行う必要があります。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;注: EMUの場合、SSO設定は初期管理者設定ユーザーによって引き続き完了する必要があります。新しいエンタープライズ権限は、この要件を置き換えるものではありません。SCIM権限は現在、EMU以外のGHECエンタープライズではSCIMがまだサポートされていないため、EMUにのみ表示されます。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;enterprise-people-management&quot; id=&quot;enterprise-people-management&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#enterprise-people-management&quot;&gt;企業の人材管理&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub Apps では、エンタープライズへのユーザーの招待を自動化し、ユーザーがエンタープライズオーナーであるかどうかを制御できるようになりました。この機能を利用して、ユーザーを短期間だけエンタープライズオーナーにする JIT 昇格システムを構築したり、エンタープライズメンバーを照会したりすることも可能です。&lt;/p&gt;
&lt;p&gt;これらの権限が機能する GraphQL エッジとミューテーションは次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;エンタープライズ メンバーをリストする&lt;a href=&quot;https://docs.github.com/en/graphql/reference/objects#enterprise&quot;&gt;&lt;code&gt;Enterprise.members&lt;/code&gt;&lt;/a&gt;フィールド。&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#inviteenterpriseadmin&quot;&gt;&lt;code&gt;inviteEnterpriseAdmin&lt;/code&gt;&lt;/a&gt;または&lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#inviteenterprisemember&quot;&gt;&lt;code&gt;inviteEnterpriseMember&lt;/code&gt;&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;ユーザーの所有者ロールを追加または削除するには、 &lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#updateenterpriseadministratorrole&quot;&gt;&lt;code&gt;updateEnterpriseAdministratorRole&lt;/code&gt;&lt;/a&gt;します。&lt;/li&gt;
&lt;li&gt;エンタープライズ所有者を完全に排除するには、 &lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#removeenterpriseadmin&quot;&gt;&lt;code&gt;removeEnterpriseAdmin&lt;/code&gt;&lt;/a&gt;使用します。&lt;/li&gt;
&lt;li&gt;すべての組織と企業からユーザーを削除するには、 &lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#removeenterprisemember&quot;&gt;&lt;code&gt;removeEnterpriseMember&lt;/code&gt;&lt;/a&gt; 。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;create-and-remove-organizations-for-your-enterprise&quot; id=&quot;create-and-remove-organizations-for-your-enterprise&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#create-and-remove-organizations-for-your-enterprise&quot;&gt;企業内の組織を作成および削除する&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub Apps は、企業内に組織を作成および削除できるようになりました。この権限は書き込み権限のみで、読み取り機能はサポートされていません。&lt;/p&gt;
&lt;p&gt;これらの権限が機能する GraphQL ミューテーションは次のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#createenterpriseorganization&quot;&gt;&lt;code&gt;createEnterpriseOrganization&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/graphql/reference/mutations#removeenterpriseorganization&quot;&gt;&lt;code&gt;removeEnterpriseOrganization&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;アプリが組織を作成する場合、その組織の最初の所有者となるユーザーを指定する必要があります。また、アプリは新しい組織に対する権限を取得しません。組織の管理は、その組織にインストールされたアプリケーションで行う必要があります。 &lt;/p&gt;
&lt;h3 id=&quot;using-enterprise-installations-and-providing-feedback&quot; id=&quot;using-enterprise-installations-and-providing-feedback&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#using-enterprise-installations-and-providing-feedback&quot;&gt;エンタープライズインストールの使用とフィードバックの提供&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub Apps の新しい API サポートについては、新しい権限が利用可能になるたびに、引き続き発表していきます。自動化を完了するためにもう 1 つ API サポートが必要な場合や、権限では期待どおりのアクセスが得られない場合は、&lt;a href=&quot;https://github.com/orgs/community/discussions/164562&quot;&gt;コミュニティ ディスカッション&lt;/a&gt;スレッドでフィードバックをお寄せください。トラフィックが最も多い API と、エンタープライズ管理のコアシナリオに対応する API を優先しています。&lt;/p&gt;
&lt;p&gt;エンタープライズインストールの詳細については、「 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/apps/using-github-apps/installing-a-github-app-on-your-enterprise&quot;&gt;エンタープライズへの GitHub アプリのインストール&lt;/a&gt;」を参照してください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-07-01-enterprise-level-access-for-github-apps-and-installation-automation-apis&quot;&gt;GitHub アプリとインストール自動化 API へのエンタープライズ レベルのアクセスに関する&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89253</post-id></item><item><title>コードスキャンの委任アラート解除が一般提供開始</title><link>https://github.blog/changelog/2025-07-01-delegated-alert-dismissal-for-code-scanning-is-now-generally-available</link><dc:creator>Allison</dc:creator><pubDate>Tue, 01 Jul 2025 19:20:32 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-07-01-delegated-alert-dismissal-for-code-scanning-is-now-generally-available</guid><description>&lt;p&gt;GitHub code scanning customers can now require a review process before dismissing alerts, helping you manage security risks as well as meet audit and compliance requirements. What&amp;#8217;s new Provide a&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-01-delegated-alert-dismissal-for-code-scanning-is-now-generally-available&quot;&gt;Delegated alert dismissal for code scanning is now generally available&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; GitHub コード スキャンのお客様は、アラートを無視する前にレビュー プロセスを要求できるようになりました。これにより、セキュリティ リスクを管理し、監査およびコンプライアンスの要件を満たすことができます。&lt;/p&gt;
&lt;h2 id=&quot;whats-new&quot; id=&quot;whats-new&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-new&quot;&gt;新着情報&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アラート解除リクエストを承認/拒否するときにコメントを入力します。&lt;/li&gt;
&lt;li&gt;エンタープライズUIのセキュリティタブを使用して、エンタープライズレベルで全組織にわたる解雇リクエストを管理および確認できます。これらのリクエストを表示および管理するには、エンタープライズの所有者である必要があります。&lt;/li&gt;
&lt;li&gt; REST API を使用してアラート解除リクエストにアクセスして管理することで、トリアージとレビューを既存のワークフローに簡単に統合できるようになります。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;rest-api-endpoints-for-reviewers&quot; id=&quot;rest-api-endpoints-for-reviewers&quot; &gt; &lt;a class=&quot;heading-link&quot; href=&quot;#rest-api-endpoints-for-reviewers&quot;&gt;レビュー担当者向けREST APIエンドポイント&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解雇リクエストを作成します:
&lt;p&gt; &lt;code&gt;PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;組織またはリポジトリの却下リクエストを取得します。&lt;/p&gt;
&lt;pre&gt; &lt;code&gt;GET /orgs/{org}/dismissal-requests/code-scanning
 GET /repos/{owner}/{repo}/dismissal-requests/code-scanning
 GET /repos/{owner}/{repo}/dismissal-requests/code-scanning/{alert_number}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;解雇リクエストを確認する:
&lt;p&gt; &lt;code&gt;PATCH /repos/{owner}/{repo}/dismissal-requests/code-scanning/{alert_number}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; REST API はエンタープライズ レベルでは利用できません。&lt;/p&gt;
&lt;h2 id=&quot;permissions-and-roles&quot; id=&quot;permissions-and-roles&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#permissions-and-roles&quot;&gt;権限と役割&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;これまでは、組織のオーナーとセキュリティマネージャーのみがアラート解除リクエストを確認できました。今後は、組織レベルでカスタムロールに様々な権限を割り当てることができるため、アラート確認の責任を適切な担当者に委任しやすくなります。カスタムロールを割り当てられたユーザーは、アクセス権を持つリポジトリのリクエストのみを閲覧できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コードスキャンアラートの解除リクエストを表示すると、リクエストを表示することはできますが、リクエストに基づいて操作することはできません。&lt;/li&gt;
&lt;li&gt;コードスキャンアラートの解除リクエストを確認すると、承認/拒否リクエストが許可されます。&lt;/li&gt;
&lt;li&gt;コードスキャンアラートの解除リクエストをバイパスすると、ユーザーは自身のリクエストを自己承認できるようになります。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;コードスキャンアラートの解除リクエストの詳細については、 &lt;a href=&quot;https://docs.github.com/enterprise-cloud@latest/code-security/code-scanning/managing-your-code-scanning-configuration/enabling-delegated-alert-dismissal-for-code-scanning&quot;&gt;ドキュメントをご覧ください&lt;/a&gt;。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-07-01-delegated-alert-dismissal-for-code-scanning-is-now-generally-available&quot;&gt;コードスキャンの委任アラート解除が一般公開されましたという記事が、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89247</post-id></item><item><title>シークレットスキャンにより、ドップラーと定義済みネットワークの有効性チェックが追加されました。</title><link>https://github.blog/changelog/2025-07-01-secret-scanning-updates-validity-checks-for-doppler-sendgrid-and-defined-networking</link><dc:creator>Allison</dc:creator><pubDate>Tue, 01 Jul 2025 18:18:46 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-07-01-secret-scanning-updates-validity-checks-for-doppler-sendgrid-and-defined-networking</guid><description>&lt;p&gt;Secret scanning is adding validity check support for additional token types. Validity checks indicate if the leaked credentials are active and could still be exploited. If you&amp;#8217;ve previously enabled validation&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-01-secret-scanning-updates-validity-checks-for-doppler-sendgrid-and-defined-networking&quot;&gt;Secret scanning adds validity checks for Doppler and Defined Networking&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;シークレットスキャンでは、追加のトークン タイプに対する有効性チェックのサポートが追加されます。&lt;/p&gt;
&lt;p&gt;有効性チェックは、漏洩した認証情報が有効で、まだ悪用される可能性があるかどうかを示します。特定のリポジトリで以前に検証チェックを有効にしていた場合、GitHub はサポートされているトークンの種類について、アラートの有効性を自動的に検証するようになりました。以前の変更ログでお知らせしたトークンの種類に加えて、以下のトークンの種類についても有効性チェックが表示されるようになります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ドップラー個人トークン ( &lt;code&gt;DOPPLER_PERSONAL_TOKEN&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;定義済みネットワーク Nebula API キー ( &lt;code&gt;DEFINED_NETWORKING_NEBULA_API_KEY&lt;/code&gt; )&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;call-for-feedback&quot; id=&quot;call-for-feedback&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#call-for-feedback&quot;&gt;フィードバックを求める&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;GitHubの未来を形作るために、この&lt;a href=&quot;https://gh.io/pnp-study&quot;&gt;10分間のアンケート&lt;/a&gt;にご回答ください。ご回答いただいた方には、15ドルの報酬を差し上げます。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;この記事&lt;a href=&quot;https://github.blog/changelog/2025-07-01-secret-scanning-updates-validity-checks-for-doppler-sendgrid-and-defined-networking&quot;&gt;「シークレットスキャンにより、Doppler と Defined Networking の有効性チェックが追加されました」は、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89243</post-id></item><item><title>削除、フィルタリング、一括操作によるアーティファクトの証明の管理</title><link>https://github.blog/changelog/2025-07-01-manage-artifact-attestations-with-deletion-filtering-and-bulk-actions</link><dc:creator>Allison</dc:creator><pubDate>Tue, 01 Jul 2025 17:36:50 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-07-01-manage-artifact-attestations-with-deletion-filtering-and-bulk-actions</guid><description>&lt;p&gt;You can now manage artifact attestations more effectively with new updates to the UI and API, including deletion, filtering, and bulk actions. Here&amp;#8217;s what&amp;#8217;s new: Delete attestations: Easily delete artifact&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-01-manage-artifact-attestations-with-deletion-filtering-and-bulk-actions&quot;&gt;Manage artifact attestations with deletion, filtering, and bulk actions&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt; UIとAPIのアップデートにより、削除、フィルタリング、一括操作など、アーティファクトのアテステーション管理がより効率的に行えるようになりました。新機能は以下のとおりです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;証明の削除&lt;/strong&gt;: UI または API を介してアーティファクト証明を簡単に削除し、悪意のあるアーティファクトや脆弱なアーティファクトにリンクされているものなど、不要な証明を削除します。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一括操作&lt;/strong&gt;: API エンドポイントを使用して、アテステーションに対して一括アクションを実行し、複数のアテステーションを管理する際の時間を節約します。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高度なフィルタリング&lt;/strong&gt;: 述語タイプ、サブジェクト名、作成日でフィルタリングして、必要な証明をすばやく見つけます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;インタラクティブなリストビュー&lt;/strong&gt;：アテステーションのリストビュー（ &lt;code&gt;/attestations&lt;/code&gt; ）がよりインタラクティブになりました。1つまたは複数のアテステーションを選択して、削除などの一括操作を実行できます。さらに、アテステーションを古い順または新しい順に並べ替えることも可能になりました。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/actions/security-for-github-actions/using-artifact-attestations/using-artifact-attestations-to-establish-provenance-for-builds&quot;&gt;アーティファクト証明を使用してビルドの起源を確立する方法&lt;/a&gt;について学習するか、&lt;a href=&quot;https://docs.github.com/en/rest/users/attestations?apiVersion=2022-11-28&quot;&gt;アーティファクト証明の API ドキュメント&lt;/a&gt;を調べてください。&lt;/p&gt;
&lt;p&gt;皆様のご意見をお待ちしております。GitHub コミュニティの&lt;a href=&quot;https://github.com/orgs/community/discussions/129761#&quot;&gt;ディスカッション&lt;/a&gt;に参加して、フィードバックを共有してください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;この記事は&lt;a href=&quot;https://github.blog/changelog/2025-07-01-manage-artifact-attestations-with-deletion-filtering-and-bulk-actions&quot;&gt;、削除、フィルタリング、一括アクションによる成果物の構成証明の管理に関するもので、&lt;/a&gt; &lt;a href=&quot;https://github.blog&quot;&gt;GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89238</post-id></item><item><title>依存関係の自動送信がNuGetをサポートするようになりました</title><link>https://github.blog/changelog/2025-07-01-dependency-auto-submission-now-supports-nuget</link><dc:creator>Allison</dc:creator><pubDate>Tue, 01 Jul 2025 16:00:05 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-30-dependency-auto-submission-now-supports-nuget</guid><description>&lt;p&gt;Dependency auto-submission now supports the .NET package manager NuGet. This feature continues to expand the supported range of package manager ecosystems, adding to the existing Maven and Gradle support. Dependency&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-01-dependency-auto-submission-now-supports-nuget&quot;&gt;Dependency auto-submission now supports NuGet&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;依存関係の自動送信機能が、.NET パッケージマネージャー NuGet をサポートするようになりました。この機能により、既存の Maven および Gradle のサポートに加え、サポートされるパッケージマネージャーエコシステムの範囲がさらに拡大します。依存関係の自動送信機能は、リポジトリの依存関係のスナップショットを依存関係グラフ送信 API にアップロードします。これにより、依存関係グラフはプロジェクトの完全な推移的な依存関係ツリーを参照できるようになります。これは、SBOM、依存関係インサイト、Dependabot セキュリティアラートの生成に役立ちます。&lt;/p&gt;
&lt;p&gt;この機能を使用するには、まずリポジトリの設定で依存関係グラフを有効にする必要があります。 &lt;strong&gt;「高度なセキュリティ」&lt;/strong&gt;の&lt;strong&gt;「依存関係の自動送信」を&lt;/strong&gt;有効にしてください。また、リポジトリでGitHub Actionsが有効になっている必要があります。この機能を有効にすると、GitHub Actionsの使用が発生することに注意してください。詳しくは、 &lt;a href=&quot;https://docs.github.com/code-security/supply-chain-security/understanding-your-software-supply-chain/configuring-automatic-dependency-submission-for-your-repository&quot;&gt;「依存関係の自動送信の設定」を&lt;/a&gt;ご覧ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2025-07-01-dependency-auto-submission-now-supports-nuget&quot;&gt;依存関係の自動送信で NuGet がサポートされるようになりましたという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89190</post-id></item><item><title>Dependabot の単一のプルリクエスト (マルチエコシステムのサポート)</title><link>https://github.blog/changelog/2025-07-01-single-pull-request-for-dependabot-multi-ecosystem-support</link><dc:creator>Allison</dc:creator><pubDate>Tue, 01 Jul 2025 15:53:42 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-07-01-single-pull-request-for-dependabot-multi-ecosystem-support</guid><description>&lt;p&gt;Multi-ecosystem grouped updates are now generally available for all Dependabot users! This configurable functionality allows you to group security or version dependency updates across multiple package ecosystems into a single&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-01-single-pull-request-for-dependabot-multi-ecosystem-support&quot;&gt;Single pull request for Dependabot (multi-ecosystem support)&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;strong&gt;マルチエコシステム対応のグループ化アップデート&lt;/strong&gt;が、すべてのDependabotユーザー向けに一般提供を開始しました！この設定可能な機能により、複数のパッケージエコシステムにわたるセキュリティまたはバージョン依存関係のアップデートを、単一のプルリクエストにまとめることができます。これにより、Dependabotから受け取るプルリクエストの数が削減され、依存関係管理ワークフローが効率化されます。&lt;/p&gt;
&lt;h3 id=&quot;whats-new&quot; id=&quot;whats-new&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-new&quot;&gt;新着情報&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;これまで、Dependabot グループは単一のエコシステムに限定されていました。つまり、Docker、Terraform、pip の依存関係がある場合、エコシステムごとに個別のプルリクエストを受け取っていました。エコシステム間のグループ化により、これらのアップデートを 1 つの包括的なプルリクエストに統合できるようになりました。&lt;/p&gt;
&lt;h3 id=&quot;key-benefits&quot; id=&quot;key-benefits&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#key-benefits&quot;&gt;主なメリット&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;プル リクエストの量の削減&lt;/strong&gt;: 複数のエコシステムからの更新をより少ないプル リクエストに統合します。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;簡素化されたレビュー プロセス&lt;/strong&gt;: 関連する依存関係の更新をまとめてレビューして、コンテキストを改善します。&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;CI 効率の向上&lt;/strong&gt;: エコシステム間の更新をバッチ処理することで、CI 実行回数を削減します。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;additional-resources&quot; id=&quot;additional-resources&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#additional-resources&quot;&gt;追加リソース&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;https://docs.github.com/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file&quot;&gt;Dependabot 設定ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/code-security/dependabot/dependabot-version-updates/customizing-dependency-updates#grouping-dependency-updates&quot;&gt;依存関係の更新ガイドのグループ化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dependabot/dependabot-core/issues/8126&quot;&gt;Dependabot コミュニティ&lt;/a&gt;のディスカッションに参加してください。&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-07-01-single-pull-request-for-dependabot-multi-ecosystem-support&quot;&gt;Dependabot の単一のプル リクエスト (マルチ エコシステム サポート) の&lt;/a&gt;投稿が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89220</post-id></item><item><title>Dependabotはパッケージの最小年齢の設定をサポートします</title><link>https://github.blog/changelog/2025-07-01-dependabot-supports-configuration-of-a-minimum-package-age</link><dc:creator>Allison</dc:creator><pubDate>Tue, 01 Jul 2025 15:52:57 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-07-01-dependabot-supports-configuration-of-a-minimum-package-age</guid><description>&lt;p&gt;The cooldown feature is now generally available for Dependabot version updates! This feature gives you control over when version update pull requests are created to bump your dependencies. What&amp;#8217;s new&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-07-01-dependabot-supports-configuration-of-a-minimum-package-age&quot;&gt;Dependabot supports configuration of a minimum package age&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;strong&gt;クールダウン&lt;/strong&gt;機能が Dependabot バージョンアップデートで一般公開されました。この機能により、依存関係を増強するためのバージョンアップデートプルリクエストが作成されるタイミングを制御できます。&lt;/p&gt;
&lt;h2 id=&quot;whats-new&quot; id=&quot;whats-new&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#whats-new&quot;&gt;新着情報&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;クールダウン機能を使用すると、Dependabot が新しくリリースされた依存関係に対してプルリクエストを作成するまでの最小経過時間を設定できます。これは、以下のバージョンアップデートを使用するユーザーに最適です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保守的な依存関係の更新を優先する&lt;strong&gt;成熟した、または安定したプロジェクト&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;頻繁に更新をリリースする&lt;strong&gt;高頻度パッケージ&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;最新の状態を維持しながらパッチレベルのノイズを回避したい&lt;strong&gt;チーム&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-it-works&quot; id=&quot;how-it-works&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#how-it-works&quot;&gt;仕組み&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;.github/dependabot.yml&lt;/code&gt;ファイルでクールダウン設定を構成できます。&lt;/p&gt;
&lt;pre&gt; &lt;code class=&quot;language-yaml&quot;&gt;updates:
 - package-ecosystem: &quot;npm&quot;
 directory: &quot;/&quot;
 schedule:
 interval: &quot;daily&quot;
 cooldown:
 - default-days: 60
 - semver-major-days: 30
 - semver-minor-days: 7
 - semver-patch-days: 3
 include:
 - &quot;example&quot;
 exclude:
 - &quot;excluded-example&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/dependabot-options-reference#cooldown-&quot;&gt;クールダウンと構成オプション&lt;/a&gt;の詳細については、ドキュメントをご覧ください。&lt;/p&gt;
&lt;h2 id=&quot;key-benefits&quot; id=&quot;key-benefits&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#key-benefits&quot;&gt;主なメリット&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;頻繁な依存関係の更新によるノイズを削減します。&lt;/li&gt;
&lt;li&gt;重要なセキュリティ パッチに常に対応します。&lt;/li&gt;
&lt;li&gt; &lt;code&gt;semver&lt;/code&gt;ごとに異なるクールダウンによるきめ細かな制御。&lt;/li&gt;
&lt;li&gt;既存の更新間隔に合わせて機能する柔軟なスケジュール。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;getting-started&quot; id=&quot;getting-started&quot; &gt;&lt;a class=&quot;heading-link&quot; href=&quot;#getting-started&quot;&gt;はじめる&lt;span class=&quot;heading-hash pl-2 text-italic text-bold&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;.github/dependabot.yml&lt;/code&gt;設定ファイルを更新し、新しい&lt;code&gt;cooldown&lt;/code&gt;設定を追加してください。この機能は現在、NuGet を除くすべてのサポート対象パッケージエコシステムで利用可能です。NuGet のサポートは今後数週間以内に開始される予定です。&lt;/p&gt;
&lt;p&gt;バージョンアップデートやその他の高度な設定オプションの詳細については、 &lt;a href=&quot;https://docs.github.com/code-security/dependabot&quot;&gt;Dependabotのドキュメント&lt;/a&gt;をご覧ください。パッケージの最小有効期間設定について詳細を知り、コミュニティと交流するには、&lt;a href=&quot;https://github.com/dependabot/dependabot-core/issues/3651&quot;&gt;会話にご参加ください&lt;/a&gt;。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-07-01-dependabot-supports-configuration-of-a-minimum-package-age&quot;&gt;Dependabot が最小パッケージ有効期間の構成をサポートするという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89219</post-id></item><item><title>CodeQL の Rust サポートがパブリック プレビューに登場</title><link>https://github.blog/changelog/2025-06-30-codeql-support-for-rust-now-in-public-preview</link><dc:creator>Allison</dc:creator><pubDate>Tue, 01 Jul 2025 09:06:47 +0000</pubDate><guid isPermaLink="false">https://github.blog/changelog/2025-06-30-codeql-support-for-rust-now-in-public-preview</guid><description>&lt;p&gt;Today, we&amp;#8217;re extending CodeQL code scanning support to Rust. Developers working on Rust libraries and apps can now benefit from our best-in-class code security analysis. We currently identify issues such&amp;#8230;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://github.blog/changelog/2025-06-30-codeql-support-for-rust-now-in-public-preview&quot;&gt;CodeQL support for Rust now in public preview&lt;/a&gt; appeared first on &lt;a href=&quot;https://github.blog&quot;&gt;The GitHub Blog&lt;/a&gt;.&lt;/p&gt;
</description><content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;&gt;
&lt;html&gt;&lt;body&gt;&lt;p&gt;本日、CodeQLのコードスキャンのサポートをRustに拡張します。Rustライブラリやアプリを開発する開発者は、クラス最高のコードセキュリティ分析の恩恵を受けることができます。現在、パス、SQL、正規表現インジェクション、多数の暗号の誤用、その他ユーザーデータの安全でない使用といった問題を特定しています。プレビュー期間中は、特定の脆弱性に対する対応範囲を拡大していきます。&lt;/p&gt;
&lt;p&gt; Rustは、既存のサポート言語（C/C++、Java/Kotlin、JS/TS、Python、Ruby、C#、Go、GitHub Actions、Swift）に加わりました。CodeQLは、これらの言語のコードに対して数百ものチェックを実行し、誤検知率を低く抑えながら高い精度を実現します。&lt;/p&gt;
&lt;p&gt;今すぐ&lt;a href=&quot;https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages&quot;&gt;Rustリポジトリにコードスキャンを設定して&lt;/a&gt;、 &lt;a href=&quot;https://github.blog/changelog/2022-06-02-users-can-view-and-comment-on-code-scanning-alerts-on-the-conversation-tab-in-a-pull-request/&quot;&gt;プルリクエストで実用的なセキュリティアラートを受け取ってください&lt;/a&gt;。サポートされているRustのバージョンとプラットフォームの詳細については&lt;a href=&quot;https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/&quot;&gt;、ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt;
&lt;p&gt; Rustのサポートはgithub.comで利用可能になりました。また、CodeQL CLIバージョン2.22.1以降でも利用可能になります。パブリックプレビュー期間中は、この機能はGitHub Enterprise Serverではご利用いただけません。&lt;/p&gt;
&lt;p&gt;これは、GitHub Advanced SecurityにおけるRustサポートのほんの始まりに過ぎません。Rustプレビューに関するフィードバックやご質問がございましたら、 &lt;a href=&quot;https://github.com/orgs/community/discussions/161754&quot;&gt;GitHubコミュニティ&lt;/a&gt;内のディスカッションにご参加ください。&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
&lt;p&gt; &lt;a href=&quot;https://github.blog/changelog/2025-06-30-codeql-support-for-rust-now-in-public-preview&quot;&gt;CodeQL による Rust のサポートがパブリック プレビュー中であるという&lt;/a&gt;記事が&lt;a href=&quot;https://github.blog&quot;&gt;、GitHub ブログ&lt;/a&gt;に最初に掲載されました。&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">89216</post-id></item></channel></rss>